
F1_IOEXP_SPI_SLAVE_TEST.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005304  080001e4  080001e4  000101e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000e6c  080054e8  080054e8  000154e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006354  08006354  000200c0  2**0
                  CONTENTS
  4 .ARM          00000000  08006354  08006354  000200c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006354  08006354  000200c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006354  08006354  00016354  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006358  08006358  00016358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000c0  20000000  0800635c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002bdc  200000c0  0800641c  000200c0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20002c9c  0800641c  00022c9c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015fe5  00000000  00000000  000200e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003224  00000000  00000000  000360ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e70  00000000  00000000  000392f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000d08  00000000  00000000  0003a168  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001bbe6  00000000  00000000  0003ae70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013401  00000000  00000000  00056a56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00096a5d  00000000  00000000  00069e57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  001008b4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003ec0  00000000  00000000  00100908  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e4 <__do_global_dtors_aux>:
 80001e4:	b510      	push	{r4, lr}
 80001e6:	4c05      	ldr	r4, [pc, #20]	; (80001fc <__do_global_dtors_aux+0x18>)
 80001e8:	7823      	ldrb	r3, [r4, #0]
 80001ea:	b933      	cbnz	r3, 80001fa <__do_global_dtors_aux+0x16>
 80001ec:	4b04      	ldr	r3, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x1c>)
 80001ee:	b113      	cbz	r3, 80001f6 <__do_global_dtors_aux+0x12>
 80001f0:	4804      	ldr	r0, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x20>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	2301      	movs	r3, #1
 80001f8:	7023      	strb	r3, [r4, #0]
 80001fa:	bd10      	pop	{r4, pc}
 80001fc:	200000c0 	.word	0x200000c0
 8000200:	00000000 	.word	0x00000000
 8000204:	080054d0 	.word	0x080054d0

08000208 <frame_dummy>:
 8000208:	b508      	push	{r3, lr}
 800020a:	4b03      	ldr	r3, [pc, #12]	; (8000218 <frame_dummy+0x10>)
 800020c:	b11b      	cbz	r3, 8000216 <frame_dummy+0xe>
 800020e:	4903      	ldr	r1, [pc, #12]	; (800021c <frame_dummy+0x14>)
 8000210:	4803      	ldr	r0, [pc, #12]	; (8000220 <frame_dummy+0x18>)
 8000212:	f3af 8000 	nop.w
 8000216:	bd08      	pop	{r3, pc}
 8000218:	00000000 	.word	0x00000000
 800021c:	200000c4 	.word	0x200000c4
 8000220:	080054d0 	.word	0x080054d0

08000224 <strlen>:
 8000224:	4603      	mov	r3, r0
 8000226:	f813 2b01 	ldrb.w	r2, [r3], #1
 800022a:	2a00      	cmp	r2, #0
 800022c:	d1fb      	bne.n	8000226 <strlen+0x2>
 800022e:	1a18      	subs	r0, r3, r0
 8000230:	3801      	subs	r0, #1
 8000232:	4770      	bx	lr

08000234 <__aeabi_drsub>:
 8000234:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000238:	e002      	b.n	8000240 <__adddf3>
 800023a:	bf00      	nop

0800023c <__aeabi_dsub>:
 800023c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000240 <__adddf3>:
 8000240:	b530      	push	{r4, r5, lr}
 8000242:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000246:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800024a:	ea94 0f05 	teq	r4, r5
 800024e:	bf08      	it	eq
 8000250:	ea90 0f02 	teqeq	r0, r2
 8000254:	bf1f      	itttt	ne
 8000256:	ea54 0c00 	orrsne.w	ip, r4, r0
 800025a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800025e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000262:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000266:	f000 80e2 	beq.w	800042e <__adddf3+0x1ee>
 800026a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800026e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000272:	bfb8      	it	lt
 8000274:	426d      	neglt	r5, r5
 8000276:	dd0c      	ble.n	8000292 <__adddf3+0x52>
 8000278:	442c      	add	r4, r5
 800027a:	ea80 0202 	eor.w	r2, r0, r2
 800027e:	ea81 0303 	eor.w	r3, r1, r3
 8000282:	ea82 0000 	eor.w	r0, r2, r0
 8000286:	ea83 0101 	eor.w	r1, r3, r1
 800028a:	ea80 0202 	eor.w	r2, r0, r2
 800028e:	ea81 0303 	eor.w	r3, r1, r3
 8000292:	2d36      	cmp	r5, #54	; 0x36
 8000294:	bf88      	it	hi
 8000296:	bd30      	pophi	{r4, r5, pc}
 8000298:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800029c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002a0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002a4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002a8:	d002      	beq.n	80002b0 <__adddf3+0x70>
 80002aa:	4240      	negs	r0, r0
 80002ac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002b0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002b8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002bc:	d002      	beq.n	80002c4 <__adddf3+0x84>
 80002be:	4252      	negs	r2, r2
 80002c0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c4:	ea94 0f05 	teq	r4, r5
 80002c8:	f000 80a7 	beq.w	800041a <__adddf3+0x1da>
 80002cc:	f1a4 0401 	sub.w	r4, r4, #1
 80002d0:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d4:	db0d      	blt.n	80002f2 <__adddf3+0xb2>
 80002d6:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002da:	fa22 f205 	lsr.w	r2, r2, r5
 80002de:	1880      	adds	r0, r0, r2
 80002e0:	f141 0100 	adc.w	r1, r1, #0
 80002e4:	fa03 f20e 	lsl.w	r2, r3, lr
 80002e8:	1880      	adds	r0, r0, r2
 80002ea:	fa43 f305 	asr.w	r3, r3, r5
 80002ee:	4159      	adcs	r1, r3
 80002f0:	e00e      	b.n	8000310 <__adddf3+0xd0>
 80002f2:	f1a5 0520 	sub.w	r5, r5, #32
 80002f6:	f10e 0e20 	add.w	lr, lr, #32
 80002fa:	2a01      	cmp	r2, #1
 80002fc:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000300:	bf28      	it	cs
 8000302:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000306:	fa43 f305 	asr.w	r3, r3, r5
 800030a:	18c0      	adds	r0, r0, r3
 800030c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000310:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000314:	d507      	bpl.n	8000326 <__adddf3+0xe6>
 8000316:	f04f 0e00 	mov.w	lr, #0
 800031a:	f1dc 0c00 	rsbs	ip, ip, #0
 800031e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000322:	eb6e 0101 	sbc.w	r1, lr, r1
 8000326:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800032a:	d31b      	bcc.n	8000364 <__adddf3+0x124>
 800032c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000330:	d30c      	bcc.n	800034c <__adddf3+0x10c>
 8000332:	0849      	lsrs	r1, r1, #1
 8000334:	ea5f 0030 	movs.w	r0, r0, rrx
 8000338:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800033c:	f104 0401 	add.w	r4, r4, #1
 8000340:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000344:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000348:	f080 809a 	bcs.w	8000480 <__adddf3+0x240>
 800034c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000350:	bf08      	it	eq
 8000352:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000356:	f150 0000 	adcs.w	r0, r0, #0
 800035a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800035e:	ea41 0105 	orr.w	r1, r1, r5
 8000362:	bd30      	pop	{r4, r5, pc}
 8000364:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000368:	4140      	adcs	r0, r0
 800036a:	eb41 0101 	adc.w	r1, r1, r1
 800036e:	3c01      	subs	r4, #1
 8000370:	bf28      	it	cs
 8000372:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000376:	d2e9      	bcs.n	800034c <__adddf3+0x10c>
 8000378:	f091 0f00 	teq	r1, #0
 800037c:	bf04      	itt	eq
 800037e:	4601      	moveq	r1, r0
 8000380:	2000      	moveq	r0, #0
 8000382:	fab1 f381 	clz	r3, r1
 8000386:	bf08      	it	eq
 8000388:	3320      	addeq	r3, #32
 800038a:	f1a3 030b 	sub.w	r3, r3, #11
 800038e:	f1b3 0220 	subs.w	r2, r3, #32
 8000392:	da0c      	bge.n	80003ae <__adddf3+0x16e>
 8000394:	320c      	adds	r2, #12
 8000396:	dd08      	ble.n	80003aa <__adddf3+0x16a>
 8000398:	f102 0c14 	add.w	ip, r2, #20
 800039c:	f1c2 020c 	rsb	r2, r2, #12
 80003a0:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a4:	fa21 f102 	lsr.w	r1, r1, r2
 80003a8:	e00c      	b.n	80003c4 <__adddf3+0x184>
 80003aa:	f102 0214 	add.w	r2, r2, #20
 80003ae:	bfd8      	it	le
 80003b0:	f1c2 0c20 	rsble	ip, r2, #32
 80003b4:	fa01 f102 	lsl.w	r1, r1, r2
 80003b8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003bc:	bfdc      	itt	le
 80003be:	ea41 010c 	orrle.w	r1, r1, ip
 80003c2:	4090      	lslle	r0, r2
 80003c4:	1ae4      	subs	r4, r4, r3
 80003c6:	bfa2      	ittt	ge
 80003c8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003cc:	4329      	orrge	r1, r5
 80003ce:	bd30      	popge	{r4, r5, pc}
 80003d0:	ea6f 0404 	mvn.w	r4, r4
 80003d4:	3c1f      	subs	r4, #31
 80003d6:	da1c      	bge.n	8000412 <__adddf3+0x1d2>
 80003d8:	340c      	adds	r4, #12
 80003da:	dc0e      	bgt.n	80003fa <__adddf3+0x1ba>
 80003dc:	f104 0414 	add.w	r4, r4, #20
 80003e0:	f1c4 0220 	rsb	r2, r4, #32
 80003e4:	fa20 f004 	lsr.w	r0, r0, r4
 80003e8:	fa01 f302 	lsl.w	r3, r1, r2
 80003ec:	ea40 0003 	orr.w	r0, r0, r3
 80003f0:	fa21 f304 	lsr.w	r3, r1, r4
 80003f4:	ea45 0103 	orr.w	r1, r5, r3
 80003f8:	bd30      	pop	{r4, r5, pc}
 80003fa:	f1c4 040c 	rsb	r4, r4, #12
 80003fe:	f1c4 0220 	rsb	r2, r4, #32
 8000402:	fa20 f002 	lsr.w	r0, r0, r2
 8000406:	fa01 f304 	lsl.w	r3, r1, r4
 800040a:	ea40 0003 	orr.w	r0, r0, r3
 800040e:	4629      	mov	r1, r5
 8000410:	bd30      	pop	{r4, r5, pc}
 8000412:	fa21 f004 	lsr.w	r0, r1, r4
 8000416:	4629      	mov	r1, r5
 8000418:	bd30      	pop	{r4, r5, pc}
 800041a:	f094 0f00 	teq	r4, #0
 800041e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000422:	bf06      	itte	eq
 8000424:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000428:	3401      	addeq	r4, #1
 800042a:	3d01      	subne	r5, #1
 800042c:	e74e      	b.n	80002cc <__adddf3+0x8c>
 800042e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000432:	bf18      	it	ne
 8000434:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000438:	d029      	beq.n	800048e <__adddf3+0x24e>
 800043a:	ea94 0f05 	teq	r4, r5
 800043e:	bf08      	it	eq
 8000440:	ea90 0f02 	teqeq	r0, r2
 8000444:	d005      	beq.n	8000452 <__adddf3+0x212>
 8000446:	ea54 0c00 	orrs.w	ip, r4, r0
 800044a:	bf04      	itt	eq
 800044c:	4619      	moveq	r1, r3
 800044e:	4610      	moveq	r0, r2
 8000450:	bd30      	pop	{r4, r5, pc}
 8000452:	ea91 0f03 	teq	r1, r3
 8000456:	bf1e      	ittt	ne
 8000458:	2100      	movne	r1, #0
 800045a:	2000      	movne	r0, #0
 800045c:	bd30      	popne	{r4, r5, pc}
 800045e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000462:	d105      	bne.n	8000470 <__adddf3+0x230>
 8000464:	0040      	lsls	r0, r0, #1
 8000466:	4149      	adcs	r1, r1
 8000468:	bf28      	it	cs
 800046a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800046e:	bd30      	pop	{r4, r5, pc}
 8000470:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000474:	bf3c      	itt	cc
 8000476:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800047a:	bd30      	popcc	{r4, r5, pc}
 800047c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000480:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000484:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000488:	f04f 0000 	mov.w	r0, #0
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000492:	bf1a      	itte	ne
 8000494:	4619      	movne	r1, r3
 8000496:	4610      	movne	r0, r2
 8000498:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800049c:	bf1c      	itt	ne
 800049e:	460b      	movne	r3, r1
 80004a0:	4602      	movne	r2, r0
 80004a2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004a6:	bf06      	itte	eq
 80004a8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004ac:	ea91 0f03 	teqeq	r1, r3
 80004b0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	bf00      	nop

080004b8 <__aeabi_ui2d>:
 80004b8:	f090 0f00 	teq	r0, #0
 80004bc:	bf04      	itt	eq
 80004be:	2100      	moveq	r1, #0
 80004c0:	4770      	bxeq	lr
 80004c2:	b530      	push	{r4, r5, lr}
 80004c4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004c8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004cc:	f04f 0500 	mov.w	r5, #0
 80004d0:	f04f 0100 	mov.w	r1, #0
 80004d4:	e750      	b.n	8000378 <__adddf3+0x138>
 80004d6:	bf00      	nop

080004d8 <__aeabi_i2d>:
 80004d8:	f090 0f00 	teq	r0, #0
 80004dc:	bf04      	itt	eq
 80004de:	2100      	moveq	r1, #0
 80004e0:	4770      	bxeq	lr
 80004e2:	b530      	push	{r4, r5, lr}
 80004e4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004e8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ec:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004f0:	bf48      	it	mi
 80004f2:	4240      	negmi	r0, r0
 80004f4:	f04f 0100 	mov.w	r1, #0
 80004f8:	e73e      	b.n	8000378 <__adddf3+0x138>
 80004fa:	bf00      	nop

080004fc <__aeabi_f2d>:
 80004fc:	0042      	lsls	r2, r0, #1
 80004fe:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000502:	ea4f 0131 	mov.w	r1, r1, rrx
 8000506:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800050a:	bf1f      	itttt	ne
 800050c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000510:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000514:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000518:	4770      	bxne	lr
 800051a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800051e:	bf08      	it	eq
 8000520:	4770      	bxeq	lr
 8000522:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000526:	bf04      	itt	eq
 8000528:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000534:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000538:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800053c:	e71c      	b.n	8000378 <__adddf3+0x138>
 800053e:	bf00      	nop

08000540 <__aeabi_ul2d>:
 8000540:	ea50 0201 	orrs.w	r2, r0, r1
 8000544:	bf08      	it	eq
 8000546:	4770      	bxeq	lr
 8000548:	b530      	push	{r4, r5, lr}
 800054a:	f04f 0500 	mov.w	r5, #0
 800054e:	e00a      	b.n	8000566 <__aeabi_l2d+0x16>

08000550 <__aeabi_l2d>:
 8000550:	ea50 0201 	orrs.w	r2, r0, r1
 8000554:	bf08      	it	eq
 8000556:	4770      	bxeq	lr
 8000558:	b530      	push	{r4, r5, lr}
 800055a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800055e:	d502      	bpl.n	8000566 <__aeabi_l2d+0x16>
 8000560:	4240      	negs	r0, r0
 8000562:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000566:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800056a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000572:	f43f aed8 	beq.w	8000326 <__adddf3+0xe6>
 8000576:	f04f 0203 	mov.w	r2, #3
 800057a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057e:	bf18      	it	ne
 8000580:	3203      	addne	r2, #3
 8000582:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000586:	bf18      	it	ne
 8000588:	3203      	addne	r2, #3
 800058a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058e:	f1c2 0320 	rsb	r3, r2, #32
 8000592:	fa00 fc03 	lsl.w	ip, r0, r3
 8000596:	fa20 f002 	lsr.w	r0, r0, r2
 800059a:	fa01 fe03 	lsl.w	lr, r1, r3
 800059e:	ea40 000e 	orr.w	r0, r0, lr
 80005a2:	fa21 f102 	lsr.w	r1, r1, r2
 80005a6:	4414      	add	r4, r2
 80005a8:	e6bd      	b.n	8000326 <__adddf3+0xe6>
 80005aa:	bf00      	nop

080005ac <__aeabi_dmul>:
 80005ac:	b570      	push	{r4, r5, r6, lr}
 80005ae:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005b2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005b6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005ba:	bf1d      	ittte	ne
 80005bc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005c0:	ea94 0f0c 	teqne	r4, ip
 80005c4:	ea95 0f0c 	teqne	r5, ip
 80005c8:	f000 f8de 	bleq	8000788 <__aeabi_dmul+0x1dc>
 80005cc:	442c      	add	r4, r5
 80005ce:	ea81 0603 	eor.w	r6, r1, r3
 80005d2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005da:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005de:	bf18      	it	ne
 80005e0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005e8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005ec:	d038      	beq.n	8000660 <__aeabi_dmul+0xb4>
 80005ee:	fba0 ce02 	umull	ip, lr, r0, r2
 80005f2:	f04f 0500 	mov.w	r5, #0
 80005f6:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005fa:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005fe:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000602:	f04f 0600 	mov.w	r6, #0
 8000606:	fbe1 5603 	umlal	r5, r6, r1, r3
 800060a:	f09c 0f00 	teq	ip, #0
 800060e:	bf18      	it	ne
 8000610:	f04e 0e01 	orrne.w	lr, lr, #1
 8000614:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000618:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800061c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000620:	d204      	bcs.n	800062c <__aeabi_dmul+0x80>
 8000622:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000626:	416d      	adcs	r5, r5
 8000628:	eb46 0606 	adc.w	r6, r6, r6
 800062c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000630:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000634:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000638:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800063c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000640:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000644:	bf88      	it	hi
 8000646:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800064a:	d81e      	bhi.n	800068a <__aeabi_dmul+0xde>
 800064c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000650:	bf08      	it	eq
 8000652:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000656:	f150 0000 	adcs.w	r0, r0, #0
 800065a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065e:	bd70      	pop	{r4, r5, r6, pc}
 8000660:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000664:	ea46 0101 	orr.w	r1, r6, r1
 8000668:	ea40 0002 	orr.w	r0, r0, r2
 800066c:	ea81 0103 	eor.w	r1, r1, r3
 8000670:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000674:	bfc2      	ittt	gt
 8000676:	ebd4 050c 	rsbsgt	r5, r4, ip
 800067a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067e:	bd70      	popgt	{r4, r5, r6, pc}
 8000680:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000684:	f04f 0e00 	mov.w	lr, #0
 8000688:	3c01      	subs	r4, #1
 800068a:	f300 80ab 	bgt.w	80007e4 <__aeabi_dmul+0x238>
 800068e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000692:	bfde      	ittt	le
 8000694:	2000      	movle	r0, #0
 8000696:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800069a:	bd70      	pople	{r4, r5, r6, pc}
 800069c:	f1c4 0400 	rsb	r4, r4, #0
 80006a0:	3c20      	subs	r4, #32
 80006a2:	da35      	bge.n	8000710 <__aeabi_dmul+0x164>
 80006a4:	340c      	adds	r4, #12
 80006a6:	dc1b      	bgt.n	80006e0 <__aeabi_dmul+0x134>
 80006a8:	f104 0414 	add.w	r4, r4, #20
 80006ac:	f1c4 0520 	rsb	r5, r4, #32
 80006b0:	fa00 f305 	lsl.w	r3, r0, r5
 80006b4:	fa20 f004 	lsr.w	r0, r0, r4
 80006b8:	fa01 f205 	lsl.w	r2, r1, r5
 80006bc:	ea40 0002 	orr.w	r0, r0, r2
 80006c0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006c8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006cc:	fa21 f604 	lsr.w	r6, r1, r4
 80006d0:	eb42 0106 	adc.w	r1, r2, r6
 80006d4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d8:	bf08      	it	eq
 80006da:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006de:	bd70      	pop	{r4, r5, r6, pc}
 80006e0:	f1c4 040c 	rsb	r4, r4, #12
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f304 	lsl.w	r3, r0, r4
 80006ec:	fa20 f005 	lsr.w	r0, r0, r5
 80006f0:	fa01 f204 	lsl.w	r2, r1, r4
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006fc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000700:	f141 0100 	adc.w	r1, r1, #0
 8000704:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000708:	bf08      	it	eq
 800070a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070e:	bd70      	pop	{r4, r5, r6, pc}
 8000710:	f1c4 0520 	rsb	r5, r4, #32
 8000714:	fa00 f205 	lsl.w	r2, r0, r5
 8000718:	ea4e 0e02 	orr.w	lr, lr, r2
 800071c:	fa20 f304 	lsr.w	r3, r0, r4
 8000720:	fa01 f205 	lsl.w	r2, r1, r5
 8000724:	ea43 0302 	orr.w	r3, r3, r2
 8000728:	fa21 f004 	lsr.w	r0, r1, r4
 800072c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000730:	fa21 f204 	lsr.w	r2, r1, r4
 8000734:	ea20 0002 	bic.w	r0, r0, r2
 8000738:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800073c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000740:	bf08      	it	eq
 8000742:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000746:	bd70      	pop	{r4, r5, r6, pc}
 8000748:	f094 0f00 	teq	r4, #0
 800074c:	d10f      	bne.n	800076e <__aeabi_dmul+0x1c2>
 800074e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000752:	0040      	lsls	r0, r0, #1
 8000754:	eb41 0101 	adc.w	r1, r1, r1
 8000758:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800075c:	bf08      	it	eq
 800075e:	3c01      	subeq	r4, #1
 8000760:	d0f7      	beq.n	8000752 <__aeabi_dmul+0x1a6>
 8000762:	ea41 0106 	orr.w	r1, r1, r6
 8000766:	f095 0f00 	teq	r5, #0
 800076a:	bf18      	it	ne
 800076c:	4770      	bxne	lr
 800076e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000772:	0052      	lsls	r2, r2, #1
 8000774:	eb43 0303 	adc.w	r3, r3, r3
 8000778:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800077c:	bf08      	it	eq
 800077e:	3d01      	subeq	r5, #1
 8000780:	d0f7      	beq.n	8000772 <__aeabi_dmul+0x1c6>
 8000782:	ea43 0306 	orr.w	r3, r3, r6
 8000786:	4770      	bx	lr
 8000788:	ea94 0f0c 	teq	r4, ip
 800078c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000790:	bf18      	it	ne
 8000792:	ea95 0f0c 	teqne	r5, ip
 8000796:	d00c      	beq.n	80007b2 <__aeabi_dmul+0x206>
 8000798:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800079c:	bf18      	it	ne
 800079e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a2:	d1d1      	bne.n	8000748 <__aeabi_dmul+0x19c>
 80007a4:	ea81 0103 	eor.w	r1, r1, r3
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	f04f 0000 	mov.w	r0, #0
 80007b0:	bd70      	pop	{r4, r5, r6, pc}
 80007b2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b6:	bf06      	itte	eq
 80007b8:	4610      	moveq	r0, r2
 80007ba:	4619      	moveq	r1, r3
 80007bc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007c0:	d019      	beq.n	80007f6 <__aeabi_dmul+0x24a>
 80007c2:	ea94 0f0c 	teq	r4, ip
 80007c6:	d102      	bne.n	80007ce <__aeabi_dmul+0x222>
 80007c8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007cc:	d113      	bne.n	80007f6 <__aeabi_dmul+0x24a>
 80007ce:	ea95 0f0c 	teq	r5, ip
 80007d2:	d105      	bne.n	80007e0 <__aeabi_dmul+0x234>
 80007d4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d8:	bf1c      	itt	ne
 80007da:	4610      	movne	r0, r2
 80007dc:	4619      	movne	r1, r3
 80007de:	d10a      	bne.n	80007f6 <__aeabi_dmul+0x24a>
 80007e0:	ea81 0103 	eor.w	r1, r1, r3
 80007e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007e8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ec:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f0:	f04f 0000 	mov.w	r0, #0
 80007f4:	bd70      	pop	{r4, r5, r6, pc}
 80007f6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007fa:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007fe:	bd70      	pop	{r4, r5, r6, pc}

08000800 <__aeabi_ddiv>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000806:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800080a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080e:	bf1d      	ittte	ne
 8000810:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000814:	ea94 0f0c 	teqne	r4, ip
 8000818:	ea95 0f0c 	teqne	r5, ip
 800081c:	f000 f8a7 	bleq	800096e <__aeabi_ddiv+0x16e>
 8000820:	eba4 0405 	sub.w	r4, r4, r5
 8000824:	ea81 0e03 	eor.w	lr, r1, r3
 8000828:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800082c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000830:	f000 8088 	beq.w	8000944 <__aeabi_ddiv+0x144>
 8000834:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000838:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800083c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000840:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000844:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000848:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 800084c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000850:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000854:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000858:	429d      	cmp	r5, r3
 800085a:	bf08      	it	eq
 800085c:	4296      	cmpeq	r6, r2
 800085e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000862:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000866:	d202      	bcs.n	800086e <__aeabi_ddiv+0x6e>
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	1ab6      	subs	r6, r6, r2
 8000870:	eb65 0503 	sbc.w	r5, r5, r3
 8000874:	085b      	lsrs	r3, r3, #1
 8000876:	ea4f 0232 	mov.w	r2, r2, rrx
 800087a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800087e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000882:	ebb6 0e02 	subs.w	lr, r6, r2
 8000886:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088a:	bf22      	ittt	cs
 800088c:	1ab6      	subcs	r6, r6, r2
 800088e:	4675      	movcs	r5, lr
 8000890:	ea40 000c 	orrcs.w	r0, r0, ip
 8000894:	085b      	lsrs	r3, r3, #1
 8000896:	ea4f 0232 	mov.w	r2, r2, rrx
 800089a:	ebb6 0e02 	subs.w	lr, r6, r2
 800089e:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a2:	bf22      	ittt	cs
 80008a4:	1ab6      	subcs	r6, r6, r2
 80008a6:	4675      	movcs	r5, lr
 80008a8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008ac:	085b      	lsrs	r3, r3, #1
 80008ae:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ba:	bf22      	ittt	cs
 80008bc:	1ab6      	subcs	r6, r6, r2
 80008be:	4675      	movcs	r5, lr
 80008c0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ce:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d2:	bf22      	ittt	cs
 80008d4:	1ab6      	subcs	r6, r6, r2
 80008d6:	4675      	movcs	r5, lr
 80008d8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008dc:	ea55 0e06 	orrs.w	lr, r5, r6
 80008e0:	d018      	beq.n	8000914 <__aeabi_ddiv+0x114>
 80008e2:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ea:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ee:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008f2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008fa:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fe:	d1c0      	bne.n	8000882 <__aeabi_ddiv+0x82>
 8000900:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000904:	d10b      	bne.n	800091e <__aeabi_ddiv+0x11e>
 8000906:	ea41 0100 	orr.w	r1, r1, r0
 800090a:	f04f 0000 	mov.w	r0, #0
 800090e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000912:	e7b6      	b.n	8000882 <__aeabi_ddiv+0x82>
 8000914:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000918:	bf04      	itt	eq
 800091a:	4301      	orreq	r1, r0
 800091c:	2000      	moveq	r0, #0
 800091e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000922:	bf88      	it	hi
 8000924:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000928:	f63f aeaf 	bhi.w	800068a <__aeabi_dmul+0xde>
 800092c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000930:	bf04      	itt	eq
 8000932:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000936:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800093a:	f150 0000 	adcs.w	r0, r0, #0
 800093e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000942:	bd70      	pop	{r4, r5, r6, pc}
 8000944:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000948:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 800094c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000950:	bfc2      	ittt	gt
 8000952:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000956:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800095a:	bd70      	popgt	{r4, r5, r6, pc}
 800095c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000960:	f04f 0e00 	mov.w	lr, #0
 8000964:	3c01      	subs	r4, #1
 8000966:	e690      	b.n	800068a <__aeabi_dmul+0xde>
 8000968:	ea45 0e06 	orr.w	lr, r5, r6
 800096c:	e68d      	b.n	800068a <__aeabi_dmul+0xde>
 800096e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000972:	ea94 0f0c 	teq	r4, ip
 8000976:	bf08      	it	eq
 8000978:	ea95 0f0c 	teqeq	r5, ip
 800097c:	f43f af3b 	beq.w	80007f6 <__aeabi_dmul+0x24a>
 8000980:	ea94 0f0c 	teq	r4, ip
 8000984:	d10a      	bne.n	800099c <__aeabi_ddiv+0x19c>
 8000986:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800098a:	f47f af34 	bne.w	80007f6 <__aeabi_dmul+0x24a>
 800098e:	ea95 0f0c 	teq	r5, ip
 8000992:	f47f af25 	bne.w	80007e0 <__aeabi_dmul+0x234>
 8000996:	4610      	mov	r0, r2
 8000998:	4619      	mov	r1, r3
 800099a:	e72c      	b.n	80007f6 <__aeabi_dmul+0x24a>
 800099c:	ea95 0f0c 	teq	r5, ip
 80009a0:	d106      	bne.n	80009b0 <__aeabi_ddiv+0x1b0>
 80009a2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a6:	f43f aefd 	beq.w	80007a4 <__aeabi_dmul+0x1f8>
 80009aa:	4610      	mov	r0, r2
 80009ac:	4619      	mov	r1, r3
 80009ae:	e722      	b.n	80007f6 <__aeabi_dmul+0x24a>
 80009b0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b4:	bf18      	it	ne
 80009b6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009ba:	f47f aec5 	bne.w	8000748 <__aeabi_dmul+0x19c>
 80009be:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009c2:	f47f af0d 	bne.w	80007e0 <__aeabi_dmul+0x234>
 80009c6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ca:	f47f aeeb 	bne.w	80007a4 <__aeabi_dmul+0x1f8>
 80009ce:	e712      	b.n	80007f6 <__aeabi_dmul+0x24a>

080009d0 <__aeabi_d2iz>:
 80009d0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80009d4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80009d8:	d215      	bcs.n	8000a06 <__aeabi_d2iz+0x36>
 80009da:	d511      	bpl.n	8000a00 <__aeabi_d2iz+0x30>
 80009dc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80009e0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80009e4:	d912      	bls.n	8000a0c <__aeabi_d2iz+0x3c>
 80009e6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80009ea:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80009ee:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80009f2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80009f6:	fa23 f002 	lsr.w	r0, r3, r2
 80009fa:	bf18      	it	ne
 80009fc:	4240      	negne	r0, r0
 80009fe:	4770      	bx	lr
 8000a00:	f04f 0000 	mov.w	r0, #0
 8000a04:	4770      	bx	lr
 8000a06:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a0a:	d105      	bne.n	8000a18 <__aeabi_d2iz+0x48>
 8000a0c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a10:	bf08      	it	eq
 8000a12:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a16:	4770      	bx	lr
 8000a18:	f04f 0000 	mov.w	r0, #0
 8000a1c:	4770      	bx	lr
 8000a1e:	bf00      	nop

08000a20 <__aeabi_frsub>:
 8000a20:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000a24:	e002      	b.n	8000a2c <__addsf3>
 8000a26:	bf00      	nop

08000a28 <__aeabi_fsub>:
 8000a28:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000a2c <__addsf3>:
 8000a2c:	0042      	lsls	r2, r0, #1
 8000a2e:	bf1f      	itttt	ne
 8000a30:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000a34:	ea92 0f03 	teqne	r2, r3
 8000a38:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000a3c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000a40:	d06a      	beq.n	8000b18 <__addsf3+0xec>
 8000a42:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000a46:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000a4a:	bfc1      	itttt	gt
 8000a4c:	18d2      	addgt	r2, r2, r3
 8000a4e:	4041      	eorgt	r1, r0
 8000a50:	4048      	eorgt	r0, r1
 8000a52:	4041      	eorgt	r1, r0
 8000a54:	bfb8      	it	lt
 8000a56:	425b      	neglt	r3, r3
 8000a58:	2b19      	cmp	r3, #25
 8000a5a:	bf88      	it	hi
 8000a5c:	4770      	bxhi	lr
 8000a5e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000a62:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000a66:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000a6a:	bf18      	it	ne
 8000a6c:	4240      	negne	r0, r0
 8000a6e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a72:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000a76:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000a7a:	bf18      	it	ne
 8000a7c:	4249      	negne	r1, r1
 8000a7e:	ea92 0f03 	teq	r2, r3
 8000a82:	d03f      	beq.n	8000b04 <__addsf3+0xd8>
 8000a84:	f1a2 0201 	sub.w	r2, r2, #1
 8000a88:	fa41 fc03 	asr.w	ip, r1, r3
 8000a8c:	eb10 000c 	adds.w	r0, r0, ip
 8000a90:	f1c3 0320 	rsb	r3, r3, #32
 8000a94:	fa01 f103 	lsl.w	r1, r1, r3
 8000a98:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000a9c:	d502      	bpl.n	8000aa4 <__addsf3+0x78>
 8000a9e:	4249      	negs	r1, r1
 8000aa0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000aa4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000aa8:	d313      	bcc.n	8000ad2 <__addsf3+0xa6>
 8000aaa:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000aae:	d306      	bcc.n	8000abe <__addsf3+0x92>
 8000ab0:	0840      	lsrs	r0, r0, #1
 8000ab2:	ea4f 0131 	mov.w	r1, r1, rrx
 8000ab6:	f102 0201 	add.w	r2, r2, #1
 8000aba:	2afe      	cmp	r2, #254	; 0xfe
 8000abc:	d251      	bcs.n	8000b62 <__addsf3+0x136>
 8000abe:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000ac2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000ac6:	bf08      	it	eq
 8000ac8:	f020 0001 	biceq.w	r0, r0, #1
 8000acc:	ea40 0003 	orr.w	r0, r0, r3
 8000ad0:	4770      	bx	lr
 8000ad2:	0049      	lsls	r1, r1, #1
 8000ad4:	eb40 0000 	adc.w	r0, r0, r0
 8000ad8:	3a01      	subs	r2, #1
 8000ada:	bf28      	it	cs
 8000adc:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000ae0:	d2ed      	bcs.n	8000abe <__addsf3+0x92>
 8000ae2:	fab0 fc80 	clz	ip, r0
 8000ae6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000aea:	ebb2 020c 	subs.w	r2, r2, ip
 8000aee:	fa00 f00c 	lsl.w	r0, r0, ip
 8000af2:	bfaa      	itet	ge
 8000af4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000af8:	4252      	neglt	r2, r2
 8000afa:	4318      	orrge	r0, r3
 8000afc:	bfbc      	itt	lt
 8000afe:	40d0      	lsrlt	r0, r2
 8000b00:	4318      	orrlt	r0, r3
 8000b02:	4770      	bx	lr
 8000b04:	f092 0f00 	teq	r2, #0
 8000b08:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000b0c:	bf06      	itte	eq
 8000b0e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000b12:	3201      	addeq	r2, #1
 8000b14:	3b01      	subne	r3, #1
 8000b16:	e7b5      	b.n	8000a84 <__addsf3+0x58>
 8000b18:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000b1c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000b20:	bf18      	it	ne
 8000b22:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b26:	d021      	beq.n	8000b6c <__addsf3+0x140>
 8000b28:	ea92 0f03 	teq	r2, r3
 8000b2c:	d004      	beq.n	8000b38 <__addsf3+0x10c>
 8000b2e:	f092 0f00 	teq	r2, #0
 8000b32:	bf08      	it	eq
 8000b34:	4608      	moveq	r0, r1
 8000b36:	4770      	bx	lr
 8000b38:	ea90 0f01 	teq	r0, r1
 8000b3c:	bf1c      	itt	ne
 8000b3e:	2000      	movne	r0, #0
 8000b40:	4770      	bxne	lr
 8000b42:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000b46:	d104      	bne.n	8000b52 <__addsf3+0x126>
 8000b48:	0040      	lsls	r0, r0, #1
 8000b4a:	bf28      	it	cs
 8000b4c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000b50:	4770      	bx	lr
 8000b52:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000b56:	bf3c      	itt	cc
 8000b58:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000b5c:	4770      	bxcc	lr
 8000b5e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b62:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000b66:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b6a:	4770      	bx	lr
 8000b6c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000b70:	bf16      	itet	ne
 8000b72:	4608      	movne	r0, r1
 8000b74:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000b78:	4601      	movne	r1, r0
 8000b7a:	0242      	lsls	r2, r0, #9
 8000b7c:	bf06      	itte	eq
 8000b7e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000b82:	ea90 0f01 	teqeq	r0, r1
 8000b86:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000b8a:	4770      	bx	lr

08000b8c <__aeabi_ui2f>:
 8000b8c:	f04f 0300 	mov.w	r3, #0
 8000b90:	e004      	b.n	8000b9c <__aeabi_i2f+0x8>
 8000b92:	bf00      	nop

08000b94 <__aeabi_i2f>:
 8000b94:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000b98:	bf48      	it	mi
 8000b9a:	4240      	negmi	r0, r0
 8000b9c:	ea5f 0c00 	movs.w	ip, r0
 8000ba0:	bf08      	it	eq
 8000ba2:	4770      	bxeq	lr
 8000ba4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000ba8:	4601      	mov	r1, r0
 8000baa:	f04f 0000 	mov.w	r0, #0
 8000bae:	e01c      	b.n	8000bea <__aeabi_l2f+0x2a>

08000bb0 <__aeabi_ul2f>:
 8000bb0:	ea50 0201 	orrs.w	r2, r0, r1
 8000bb4:	bf08      	it	eq
 8000bb6:	4770      	bxeq	lr
 8000bb8:	f04f 0300 	mov.w	r3, #0
 8000bbc:	e00a      	b.n	8000bd4 <__aeabi_l2f+0x14>
 8000bbe:	bf00      	nop

08000bc0 <__aeabi_l2f>:
 8000bc0:	ea50 0201 	orrs.w	r2, r0, r1
 8000bc4:	bf08      	it	eq
 8000bc6:	4770      	bxeq	lr
 8000bc8:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000bcc:	d502      	bpl.n	8000bd4 <__aeabi_l2f+0x14>
 8000bce:	4240      	negs	r0, r0
 8000bd0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000bd4:	ea5f 0c01 	movs.w	ip, r1
 8000bd8:	bf02      	ittt	eq
 8000bda:	4684      	moveq	ip, r0
 8000bdc:	4601      	moveq	r1, r0
 8000bde:	2000      	moveq	r0, #0
 8000be0:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000be4:	bf08      	it	eq
 8000be6:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000bea:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000bee:	fabc f28c 	clz	r2, ip
 8000bf2:	3a08      	subs	r2, #8
 8000bf4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000bf8:	db10      	blt.n	8000c1c <__aeabi_l2f+0x5c>
 8000bfa:	fa01 fc02 	lsl.w	ip, r1, r2
 8000bfe:	4463      	add	r3, ip
 8000c00:	fa00 fc02 	lsl.w	ip, r0, r2
 8000c04:	f1c2 0220 	rsb	r2, r2, #32
 8000c08:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000c0c:	fa20 f202 	lsr.w	r2, r0, r2
 8000c10:	eb43 0002 	adc.w	r0, r3, r2
 8000c14:	bf08      	it	eq
 8000c16:	f020 0001 	biceq.w	r0, r0, #1
 8000c1a:	4770      	bx	lr
 8000c1c:	f102 0220 	add.w	r2, r2, #32
 8000c20:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c24:	f1c2 0220 	rsb	r2, r2, #32
 8000c28:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000c2c:	fa21 f202 	lsr.w	r2, r1, r2
 8000c30:	eb43 0002 	adc.w	r0, r3, r2
 8000c34:	bf08      	it	eq
 8000c36:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000c3a:	4770      	bx	lr

08000c3c <SH1107_Reset>:

/***************************************************************************//**
* @brief Reset SH1107 with reset pin.
*
*******************************************************************************/
void SH1107_Reset(void) {
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	af00      	add	r7, sp, #0
	SH1107_Off();
 8000c40:	f000 f814 	bl	8000c6c <SH1107_Off>
	HAL_Delay(200);
 8000c44:	20c8      	movs	r0, #200	; 0xc8
 8000c46:	f001 f9a3 	bl	8001f90 <HAL_Delay>
	SH1107_On();
 8000c4a:	f000 f803 	bl	8000c54 <SH1107_On>
}
 8000c4e:	bf00      	nop
 8000c50:	bd80      	pop	{r7, pc}
	...

08000c54 <SH1107_On>:

/***************************************************************************//**
* @brief SH1107 on with reset pin.
*
*******************************************************************************/
void SH1107_On(void) {
 8000c54:	b580      	push	{r7, lr}
 8000c56:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LCD_RES_GPIO_Port, LCD_RES_Pin, GPIO_PIN_SET);
 8000c58:	2201      	movs	r2, #1
 8000c5a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000c5e:	4802      	ldr	r0, [pc, #8]	; (8000c68 <SH1107_On+0x14>)
 8000c60:	f002 f82d 	bl	8002cbe <HAL_GPIO_WritePin>
}
 8000c64:	bf00      	nop
 8000c66:	bd80      	pop	{r7, pc}
 8000c68:	40010c00 	.word	0x40010c00

08000c6c <SH1107_Off>:

/***************************************************************************//**
* @brief SH1107 off with reset pin.
*
*******************************************************************************/
void SH1107_Off(void) {
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LCD_RES_GPIO_Port, LCD_RES_Pin, GPIO_PIN_RESET);
 8000c70:	2200      	movs	r2, #0
 8000c72:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000c76:	4802      	ldr	r0, [pc, #8]	; (8000c80 <SH1107_Off+0x14>)
 8000c78:	f002 f821 	bl	8002cbe <HAL_GPIO_WritePin>
}
 8000c7c:	bf00      	nop
 8000c7e:	bd80      	pop	{r7, pc}
 8000c80:	40010c00 	.word	0x40010c00

08000c84 <SH1107_WriteCommand>:
* @brief  			Send a byte to the command register
*
* @param 	byte	data in byte format for writing
*
*******************************************************************************/
void SH1107_WriteCommand(uint8_t byte) {
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b086      	sub	sp, #24
 8000c88:	af04      	add	r7, sp, #16
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Mem_Write(&SH1107_I2C_PORT, SH1107_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8000c8e:	f04f 33ff 	mov.w	r3, #4294967295
 8000c92:	9302      	str	r3, [sp, #8]
 8000c94:	2301      	movs	r3, #1
 8000c96:	9301      	str	r3, [sp, #4]
 8000c98:	1dfb      	adds	r3, r7, #7
 8000c9a:	9300      	str	r3, [sp, #0]
 8000c9c:	2301      	movs	r3, #1
 8000c9e:	2200      	movs	r2, #0
 8000ca0:	2178      	movs	r1, #120	; 0x78
 8000ca2:	4803      	ldr	r0, [pc, #12]	; (8000cb0 <SH1107_WriteCommand+0x2c>)
 8000ca4:	f002 f980 	bl	8002fa8 <HAL_I2C_Mem_Write>
}
 8000ca8:	bf00      	nop
 8000caa:	3708      	adds	r7, #8
 8000cac:	46bd      	mov	sp, r7
 8000cae:	bd80      	pop	{r7, pc}
 8000cb0:	200004f0 	.word	0x200004f0

08000cb4 <SH1107_WriteData>:
*
* @param 	buffer		data in pointer format for writing
* @param 	buff_size	data size in size_t format for writing
*
*******************************************************************************/
void SH1107_WriteData(uint8_t* buffer, size_t buff_size) {
 8000cb4:	b580      	push	{r7, lr}
 8000cb6:	b086      	sub	sp, #24
 8000cb8:	af04      	add	r7, sp, #16
 8000cba:	6078      	str	r0, [r7, #4]
 8000cbc:	6039      	str	r1, [r7, #0]
	HAL_I2C_Mem_Write(&SH1107_I2C_PORT, SH1107_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8000cbe:	683b      	ldr	r3, [r7, #0]
 8000cc0:	b29b      	uxth	r3, r3
 8000cc2:	f04f 32ff 	mov.w	r2, #4294967295
 8000cc6:	9202      	str	r2, [sp, #8]
 8000cc8:	9301      	str	r3, [sp, #4]
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	9300      	str	r3, [sp, #0]
 8000cce:	2301      	movs	r3, #1
 8000cd0:	2240      	movs	r2, #64	; 0x40
 8000cd2:	2178      	movs	r1, #120	; 0x78
 8000cd4:	4803      	ldr	r0, [pc, #12]	; (8000ce4 <SH1107_WriteData+0x30>)
 8000cd6:	f002 f967 	bl	8002fa8 <HAL_I2C_Mem_Write>
}
 8000cda:	bf00      	nop
 8000cdc:	3708      	adds	r7, #8
 8000cde:	46bd      	mov	sp, r7
 8000ce0:	bd80      	pop	{r7, pc}
 8000ce2:	bf00      	nop
 8000ce4:	200004f0 	.word	0x200004f0

08000ce8 <SH1107_ChangePageAddress>:
*
* @param 	add			page address in unsigned char format between 0~SH1107_PAGE
*
*******************************************************************************/
void SH1107_ChangePageAddress(unsigned char add)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	b086      	sub	sp, #24
 8000cec:	af04      	add	r7, sp, #16
 8000cee:	4603      	mov	r3, r0
 8000cf0:	71fb      	strb	r3, [r7, #7]
	add=0xb0|add;
 8000cf2:	79fb      	ldrb	r3, [r7, #7]
 8000cf4:	f063 034f 	orn	r3, r3, #79	; 0x4f
 8000cf8:	b2db      	uxtb	r3, r3
 8000cfa:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Mem_Write(&SH1107_I2C_PORT, SH1107_I2C_ADDR, 0x80, 1, &add, 1, HAL_MAX_DELAY);
 8000cfc:	f04f 33ff 	mov.w	r3, #4294967295
 8000d00:	9302      	str	r3, [sp, #8]
 8000d02:	2301      	movs	r3, #1
 8000d04:	9301      	str	r3, [sp, #4]
 8000d06:	1dfb      	adds	r3, r7, #7
 8000d08:	9300      	str	r3, [sp, #0]
 8000d0a:	2301      	movs	r3, #1
 8000d0c:	2280      	movs	r2, #128	; 0x80
 8000d0e:	2178      	movs	r1, #120	; 0x78
 8000d10:	4803      	ldr	r0, [pc, #12]	; (8000d20 <SH1107_ChangePageAddress+0x38>)
 8000d12:	f002 f949 	bl	8002fa8 <HAL_I2C_Mem_Write>
	return;
 8000d16:	bf00      	nop
}
 8000d18:	3708      	adds	r7, #8
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	bd80      	pop	{r7, pc}
 8000d1e:	bf00      	nop
 8000d20:	200004f0 	.word	0x200004f0

08000d24 <SH1107_ChangeColumnAddress>:
*
* @param 	add			Column address in unsigned char format between 0~SH1107_HEIGHT
*
*******************************************************************************/
void SH1107_ChangeColumnAddress(unsigned char add)
{
 8000d24:	b580      	push	{r7, lr}
 8000d26:	b084      	sub	sp, #16
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	4603      	mov	r3, r0
 8000d2c:	71fb      	strb	r3, [r7, #7]
	uint8_t byte =(0x10|(add>>4));
 8000d2e:	79fb      	ldrb	r3, [r7, #7]
 8000d30:	091b      	lsrs	r3, r3, #4
 8000d32:	b2db      	uxtb	r3, r3
 8000d34:	f043 0310 	orr.w	r3, r3, #16
 8000d38:	73fb      	strb	r3, [r7, #15]
	SH1107_WriteCommand(byte);
 8000d3a:	7bfb      	ldrb	r3, [r7, #15]
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	f7ff ffa1 	bl	8000c84 <SH1107_WriteCommand>

	byte =(0x0f&add);
 8000d42:	79fb      	ldrb	r3, [r7, #7]
 8000d44:	f003 030f 	and.w	r3, r3, #15
 8000d48:	73fb      	strb	r3, [r7, #15]
	SH1107_WriteCommand(byte);
 8000d4a:	7bfb      	ldrb	r3, [r7, #15]
 8000d4c:	4618      	mov	r0, r3
 8000d4e:	f7ff ff99 	bl	8000c84 <SH1107_WriteCommand>

	return;
 8000d52:	bf00      	nop
}
 8000d54:	3710      	adds	r7, #16
 8000d56:	46bd      	mov	sp, r7
 8000d58:	bd80      	pop	{r7, pc}
	...

08000d5c <SH1107_Init>:

/***************************************************************************//**
* @brief  				Initialize the oled screen
*
*******************************************************************************/
void SH1107_Init(void) {
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	af00      	add	r7, sp, #0

	/* Reset OLED */
	SH1107_Reset();
 8000d60:	f7ff ff6c 	bl	8000c3c <SH1107_Reset>
	/* Wait for the screen to boot */
	HAL_Delay(100);
 8000d64:	2064      	movs	r0, #100	; 0x64
 8000d66:	f001 f913 	bl	8001f90 <HAL_Delay>

	SH1107_On();
 8000d6a:	f7ff ff73 	bl	8000c54 <SH1107_On>
	HAL_Delay(100);
 8000d6e:	2064      	movs	r0, #100	; 0x64
 8000d70:	f001 f90e 	bl	8001f90 <HAL_Delay>

	/* Init OLED */
	SH1107_WriteCommand(SH1107_DISPLAY_OFF); 			/* display off */
 8000d74:	20ae      	movs	r0, #174	; 0xae
 8000d76:	f7ff ff85 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_SET_DISPLAY_CLOCK); 		/* set display clock divide ratio/oscillator frequency */
 8000d7a:	20d5      	movs	r0, #213	; 0xd5
 8000d7c:	f7ff ff82 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x51); 							/* set divide ratio F0 */
 8000d80:	2051      	movs	r0, #81	; 0x51
 8000d82:	f7ff ff7f 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_ADDR_MODE); 				/* Set Memory Addressing Mode */
 8000d86:	2020      	movs	r0, #32
 8000d88:	f7ff ff7c 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x00); 							/* 00b,Horizontal Addressing Mode;
 8000d8c:	2000      	movs	r0, #0
 8000d8e:	f7ff ff79 	bl	8000c84 <SH1107_WriteCommand>
														 * 01b,Vertical Addressing Mode;
														 * 10b,Page Addressing Mode (RESET);
														 * 11b,Invalid */

	SH1107_WriteCommand(SH1107_SET_MULTIPLEX_RATIO); 	/* set multiplex ratio(1 to 64) - CHECK */
 8000d92:	20a8      	movs	r0, #168	; 0xa8
 8000d94:	f7ff ff76 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x3F);
 8000d98:	203f      	movs	r0, #63	; 0x3f
 8000d9a:	f7ff ff73 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_SET_START_LINE); 		/* set start line address - CHECK */
 8000d9e:	20dc      	movs	r0, #220	; 0xdc
 8000da0:	f7ff ff70 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x00);
 8000da4:	2000      	movs	r0, #0
 8000da6:	f7ff ff6d 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_SET_DISPLAY_OFFSET); 	/* set display offset - CHECK */
 8000daa:	20d3      	movs	r0, #211	; 0xd3
 8000dac:	f7ff ff6a 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x60); 							/* not offset */
 8000db0:	2060      	movs	r0, #96	; 0x60
 8000db2:	f7ff ff67 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_SET_DCDC_SETTINGS); 		/* Set DC-DC Setting: */
 8000db6:	20ad      	movs	r0, #173	; 0xad
 8000db8:	f7ff ff64 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x80); 							/* Set external VPP */
 8000dbc:	2080      	movs	r0, #128	; 0x80
 8000dbe:	f7ff ff61 	bl	8000c84 <SH1107_WriteCommand>

#ifdef SH1107_INVERSE_COLOR
	SH1107_WriteCommand(SH1107_INVERT_ON); 				/* set inverse color */
#else
	SH1107_WriteCommand(SH1107_INVERT_OFF); 			/* set normal color */
 8000dc2:	20a6      	movs	r0, #166	; 0xa6
 8000dc4:	f7ff ff5e 	bl	8000c84 <SH1107_WriteCommand>
#endif

	SH1107_WriteCommand(SH1107_RAM_ON); 				/* 0xa4,Output follows RAM content;
 8000dc8:	20a4      	movs	r0, #164	; 0xa4
 8000dca:	f7ff ff5b 	bl	8000c84 <SH1107_WriteCommand>
														 * 0xa5,Output ignores RAM content */

#ifdef SH1107_MIRROR_HORIZ
	SH1107_WriteCommand(SH1107_SET_REMAP_L_TO_R); 		/* Mirror horizontally */
#else
	SH1107_WriteCommand(SH1107_SET_REMAP_R_TO_L); 		/* set segment re-map 0 to 127 - CHECK A1 */
 8000dce:	20a0      	movs	r0, #160	; 0xa0
 8000dd0:	f7ff ff58 	bl	8000c84 <SH1107_WriteCommand>
#endif

#ifdef SH1107_MIRROR_VERT
	SH1107_WriteCommand(SH1107_SET_REMAP_T_TO_D); 		/* Mirror vertically */
#else
	SH1107_WriteCommand(SH1107_SET_REMAP_D_TO_T); 		/* Set COM Output Scan Direction */
 8000dd4:	20c0      	movs	r0, #192	; 0xc0
 8000dd6:	f7ff ff55 	bl	8000c84 <SH1107_WriteCommand>
#endif

	SH1107_WriteCommand(SH1107_SET_CONTRAST); 			/* set contrast control register - CHECK */
 8000dda:	2081      	movs	r0, #129	; 0x81
 8000ddc:	f7ff ff52 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0xFF);
 8000de0:	20ff      	movs	r0, #255	; 0xff
 8000de2:	f7ff ff4f 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_SET_PRECHARGE_PERIOD); 	/* set pre-charge period */
 8000de6:	20d9      	movs	r0, #217	; 0xd9
 8000de8:	f7ff ff4c 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x22);
 8000dec:	2022      	movs	r0, #34	; 0x22
 8000dee:	f7ff ff49 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_SET_VCOM_DESELECT); 		/* set vcomh */
 8000df2:	20db      	movs	r0, #219	; 0xdb
 8000df4:	f7ff ff46 	bl	8000c84 <SH1107_WriteCommand>
	SH1107_WriteCommand(0x20); 							/* 0x20,0.77xVcc */
 8000df8:	2020      	movs	r0, #32
 8000dfa:	f7ff ff43 	bl	8000c84 <SH1107_WriteCommand>

	SH1107_WriteCommand(SH1107_DISPLAY_ON); 			/* turn on SH1107 panel */
 8000dfe:	20af      	movs	r0, #175	; 0xaf
 8000e00:	f7ff ff40 	bl	8000c84 <SH1107_WriteCommand>

	/* Clear screen */
	SH1107_Fill(Black);
 8000e04:	2000      	movs	r0, #0
 8000e06:	f000 f80f 	bl	8000e28 <SH1107_Fill>

	/* Flush buffer to screen */
	SH1107_UpdateScreen();
 8000e0a:	f000 f825 	bl	8000e58 <SH1107_UpdateScreen>

	/* Set default values for screen object */
	SH1107.CurrentX = 0;
 8000e0e:	4b05      	ldr	r3, [pc, #20]	; (8000e24 <SH1107_Init+0xc8>)
 8000e10:	2200      	movs	r2, #0
 8000e12:	801a      	strh	r2, [r3, #0]
	SH1107.CurrentY = 0;
 8000e14:	4b03      	ldr	r3, [pc, #12]	; (8000e24 <SH1107_Init+0xc8>)
 8000e16:	2200      	movs	r2, #0
 8000e18:	805a      	strh	r2, [r3, #2]

	SH1107.Initialized = 1;
 8000e1a:	4b02      	ldr	r3, [pc, #8]	; (8000e24 <SH1107_Init+0xc8>)
 8000e1c:	2201      	movs	r2, #1
 8000e1e:	715a      	strb	r2, [r3, #5]

}
 8000e20:	bf00      	nop
 8000e22:	bd80      	pop	{r7, pc}
 8000e24:	200004dc 	.word	0x200004dc

08000e28 <SH1107_Fill>:
* @brief  			Fill the whole screen with the given color
*
* @param	color	The color of the lines. Color is enumeration with SH1107_COLOR_t. See sh1107.h for more details about color.
*
*******************************************************************************/
void SH1107_Fill(SH1107_COLOR_t color) {
 8000e28:	b580      	push	{r7, lr}
 8000e2a:	b082      	sub	sp, #8
 8000e2c:	af00      	add	r7, sp, #0
 8000e2e:	4603      	mov	r3, r0
 8000e30:	71fb      	strb	r3, [r7, #7]
	/* Set memory */
	memset(SH1107_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(SH1107_Buffer));
 8000e32:	79fb      	ldrb	r3, [r7, #7]
 8000e34:	2b00      	cmp	r3, #0
 8000e36:	d101      	bne.n	8000e3c <SH1107_Fill+0x14>
 8000e38:	2300      	movs	r3, #0
 8000e3a:	e000      	b.n	8000e3e <SH1107_Fill+0x16>
 8000e3c:	23ff      	movs	r3, #255	; 0xff
 8000e3e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000e42:	4619      	mov	r1, r3
 8000e44:	4803      	ldr	r0, [pc, #12]	; (8000e54 <SH1107_Fill+0x2c>)
 8000e46:	f003 fef5 	bl	8004c34 <memset>
}
 8000e4a:	bf00      	nop
 8000e4c:	3708      	adds	r7, #8
 8000e4e:	46bd      	mov	sp, r7
 8000e50:	bd80      	pop	{r7, pc}
 8000e52:	bf00      	nop
 8000e54:	200000dc 	.word	0x200000dc

08000e58 <SH1107_UpdateScreen>:

/***************************************************************************//**
* @brief  			Write the screen buffer with changed to the screen
*
*******************************************************************************/
void SH1107_UpdateScreen(void) {
 8000e58:	b580      	push	{r7, lr}
 8000e5a:	b082      	sub	sp, #8
 8000e5c:	af00      	add	r7, sp, #0

	unsigned char i;
	for(i=0;i<SH1107_PAGE;i++)
 8000e5e:	2300      	movs	r3, #0
 8000e60:	71fb      	strb	r3, [r7, #7]
 8000e62:	e011      	b.n	8000e88 <SH1107_UpdateScreen+0x30>
	{
		SH1107_ChangePageAddress(i);
 8000e64:	79fb      	ldrb	r3, [r7, #7]
 8000e66:	4618      	mov	r0, r3
 8000e68:	f7ff ff3e 	bl	8000ce8 <SH1107_ChangePageAddress>
		SH1107_ChangeColumnAddress(0x00);
 8000e6c:	2000      	movs	r0, #0
 8000e6e:	f7ff ff59 	bl	8000d24 <SH1107_ChangeColumnAddress>
		SH1107_WriteData(&SH1107_Buffer[i*SH1107_WIDTH], SH1107_WIDTH);
 8000e72:	79fb      	ldrb	r3, [r7, #7]
 8000e74:	019b      	lsls	r3, r3, #6
 8000e76:	4a08      	ldr	r2, [pc, #32]	; (8000e98 <SH1107_UpdateScreen+0x40>)
 8000e78:	4413      	add	r3, r2
 8000e7a:	2140      	movs	r1, #64	; 0x40
 8000e7c:	4618      	mov	r0, r3
 8000e7e:	f7ff ff19 	bl	8000cb4 <SH1107_WriteData>
	for(i=0;i<SH1107_PAGE;i++)
 8000e82:	79fb      	ldrb	r3, [r7, #7]
 8000e84:	3301      	adds	r3, #1
 8000e86:	71fb      	strb	r3, [r7, #7]
 8000e88:	79fb      	ldrb	r3, [r7, #7]
 8000e8a:	2b0f      	cmp	r3, #15
 8000e8c:	d9ea      	bls.n	8000e64 <SH1107_UpdateScreen+0xc>
	}
	return;
 8000e8e:	bf00      	nop
}
 8000e90:	3708      	adds	r7, #8
 8000e92:	46bd      	mov	sp, r7
 8000e94:	bd80      	pop	{r7, pc}
 8000e96:	bf00      	nop
 8000e98:	200000dc 	.word	0x200000dc

08000e9c <SH1107_WriteChar>:
* @param	ch		Character in char format for writing
* @param	Font	Font in FontDef_t type for font size. Font is enumeration with FontDef_t. See sh1107_fonts.h for more details about fonts.
* @param	color	The color of the lines. Color is enumeration with SH1107_COLOR_t. See sh1107.h for more details about color.
*
*******************************************************************************/
char SH1107_WriteChar(char ch, FontDef_t* Font, SH1107_COLOR_t color) {
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b086      	sub	sp, #24
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	4603      	mov	r3, r0
 8000ea4:	6039      	str	r1, [r7, #0]
 8000ea6:	71fb      	strb	r3, [r7, #7]
 8000ea8:	4613      	mov	r3, r2
 8000eaa:	71bb      	strb	r3, [r7, #6]
	uint32_t i, b, j;

	/* Check if character is valid */
	if (ch < 32 || ch > 126)
 8000eac:	79fb      	ldrb	r3, [r7, #7]
 8000eae:	2b1f      	cmp	r3, #31
 8000eb0:	d902      	bls.n	8000eb8 <SH1107_WriteChar+0x1c>
 8000eb2:	79fb      	ldrb	r3, [r7, #7]
 8000eb4:	2b7e      	cmp	r3, #126	; 0x7e
 8000eb6:	d901      	bls.n	8000ebc <SH1107_WriteChar+0x20>
		return 0;
 8000eb8:	2300      	movs	r3, #0
 8000eba:	e074      	b.n	8000fa6 <SH1107_WriteChar+0x10a>

	/* Check remaining space on current line */
	if (SH1107_WIDTH < (SH1107.CurrentX + Font->FontWidth) ||
 8000ebc:	4b3c      	ldr	r3, [pc, #240]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000ebe:	881b      	ldrh	r3, [r3, #0]
 8000ec0:	461a      	mov	r2, r3
 8000ec2:	683b      	ldr	r3, [r7, #0]
 8000ec4:	781b      	ldrb	r3, [r3, #0]
 8000ec6:	4413      	add	r3, r2
 8000ec8:	2b40      	cmp	r3, #64	; 0x40
 8000eca:	dc07      	bgt.n	8000edc <SH1107_WriteChar+0x40>
			SH1107_HEIGHT < (SH1107.CurrentY + Font->FontHeight))
 8000ecc:	4b38      	ldr	r3, [pc, #224]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000ece:	885b      	ldrh	r3, [r3, #2]
 8000ed0:	461a      	mov	r2, r3
 8000ed2:	683b      	ldr	r3, [r7, #0]
 8000ed4:	785b      	ldrb	r3, [r3, #1]
 8000ed6:	4413      	add	r3, r2
	if (SH1107_WIDTH < (SH1107.CurrentX + Font->FontWidth) ||
 8000ed8:	2b80      	cmp	r3, #128	; 0x80
 8000eda:	dd01      	ble.n	8000ee0 <SH1107_WriteChar+0x44>
	{
		// Not enough space on current line
		return 0;
 8000edc:	2300      	movs	r3, #0
 8000ede:	e062      	b.n	8000fa6 <SH1107_WriteChar+0x10a>
	}

	/* Use the font to write */
	for(i = 0; i < Font->FontHeight; i++) {
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	617b      	str	r3, [r7, #20]
 8000ee4:	e04f      	b.n	8000f86 <SH1107_WriteChar+0xea>
		b = Font->data[(ch - 32) * Font->FontHeight + i];
 8000ee6:	683b      	ldr	r3, [r7, #0]
 8000ee8:	685a      	ldr	r2, [r3, #4]
 8000eea:	79fb      	ldrb	r3, [r7, #7]
 8000eec:	3b20      	subs	r3, #32
 8000eee:	6839      	ldr	r1, [r7, #0]
 8000ef0:	7849      	ldrb	r1, [r1, #1]
 8000ef2:	fb01 f303 	mul.w	r3, r1, r3
 8000ef6:	4619      	mov	r1, r3
 8000ef8:	697b      	ldr	r3, [r7, #20]
 8000efa:	440b      	add	r3, r1
 8000efc:	005b      	lsls	r3, r3, #1
 8000efe:	4413      	add	r3, r2
 8000f00:	881b      	ldrh	r3, [r3, #0]
 8000f02:	60fb      	str	r3, [r7, #12]
		for(j = 0; j < Font->FontWidth; j++) {
 8000f04:	2300      	movs	r3, #0
 8000f06:	613b      	str	r3, [r7, #16]
 8000f08:	e034      	b.n	8000f74 <SH1107_WriteChar+0xd8>
			if((b << j) & 0x8000)  {
 8000f0a:	68fa      	ldr	r2, [r7, #12]
 8000f0c:	693b      	ldr	r3, [r7, #16]
 8000f0e:	fa02 f303 	lsl.w	r3, r2, r3
 8000f12:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000f16:	2b00      	cmp	r3, #0
 8000f18:	d012      	beq.n	8000f40 <SH1107_WriteChar+0xa4>
				SH1107_DrawPixel(SH1107.CurrentX + j, (SH1107.CurrentY + i), (SH1107_COLOR_t) color);
 8000f1a:	4b25      	ldr	r3, [pc, #148]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000f1c:	881b      	ldrh	r3, [r3, #0]
 8000f1e:	b2da      	uxtb	r2, r3
 8000f20:	693b      	ldr	r3, [r7, #16]
 8000f22:	b2db      	uxtb	r3, r3
 8000f24:	4413      	add	r3, r2
 8000f26:	b2d8      	uxtb	r0, r3
 8000f28:	4b21      	ldr	r3, [pc, #132]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000f2a:	885b      	ldrh	r3, [r3, #2]
 8000f2c:	b2da      	uxtb	r2, r3
 8000f2e:	697b      	ldr	r3, [r7, #20]
 8000f30:	b2db      	uxtb	r3, r3
 8000f32:	4413      	add	r3, r2
 8000f34:	b2db      	uxtb	r3, r3
 8000f36:	79ba      	ldrb	r2, [r7, #6]
 8000f38:	4619      	mov	r1, r3
 8000f3a:	f000 f87b 	bl	8001034 <SH1107_DrawPixel>
 8000f3e:	e016      	b.n	8000f6e <SH1107_WriteChar+0xd2>
			} else {
				SH1107_DrawPixel(SH1107.CurrentX + j, (SH1107.CurrentY + i), (SH1107_COLOR_t)!color);
 8000f40:	4b1b      	ldr	r3, [pc, #108]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000f42:	881b      	ldrh	r3, [r3, #0]
 8000f44:	b2da      	uxtb	r2, r3
 8000f46:	693b      	ldr	r3, [r7, #16]
 8000f48:	b2db      	uxtb	r3, r3
 8000f4a:	4413      	add	r3, r2
 8000f4c:	b2d8      	uxtb	r0, r3
 8000f4e:	4b18      	ldr	r3, [pc, #96]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000f50:	885b      	ldrh	r3, [r3, #2]
 8000f52:	b2da      	uxtb	r2, r3
 8000f54:	697b      	ldr	r3, [r7, #20]
 8000f56:	b2db      	uxtb	r3, r3
 8000f58:	4413      	add	r3, r2
 8000f5a:	b2d9      	uxtb	r1, r3
 8000f5c:	79bb      	ldrb	r3, [r7, #6]
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	bf0c      	ite	eq
 8000f62:	2301      	moveq	r3, #1
 8000f64:	2300      	movne	r3, #0
 8000f66:	b2db      	uxtb	r3, r3
 8000f68:	461a      	mov	r2, r3
 8000f6a:	f000 f863 	bl	8001034 <SH1107_DrawPixel>
		for(j = 0; j < Font->FontWidth; j++) {
 8000f6e:	693b      	ldr	r3, [r7, #16]
 8000f70:	3301      	adds	r3, #1
 8000f72:	613b      	str	r3, [r7, #16]
 8000f74:	683b      	ldr	r3, [r7, #0]
 8000f76:	781b      	ldrb	r3, [r3, #0]
 8000f78:	461a      	mov	r2, r3
 8000f7a:	693b      	ldr	r3, [r7, #16]
 8000f7c:	4293      	cmp	r3, r2
 8000f7e:	d3c4      	bcc.n	8000f0a <SH1107_WriteChar+0x6e>
	for(i = 0; i < Font->FontHeight; i++) {
 8000f80:	697b      	ldr	r3, [r7, #20]
 8000f82:	3301      	adds	r3, #1
 8000f84:	617b      	str	r3, [r7, #20]
 8000f86:	683b      	ldr	r3, [r7, #0]
 8000f88:	785b      	ldrb	r3, [r3, #1]
 8000f8a:	461a      	mov	r2, r3
 8000f8c:	697b      	ldr	r3, [r7, #20]
 8000f8e:	4293      	cmp	r3, r2
 8000f90:	d3a9      	bcc.n	8000ee6 <SH1107_WriteChar+0x4a>
			}
		}
	}

	/* The current space is now taken */
	SH1107.CurrentX += Font->FontWidth;
 8000f92:	4b07      	ldr	r3, [pc, #28]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000f94:	881a      	ldrh	r2, [r3, #0]
 8000f96:	683b      	ldr	r3, [r7, #0]
 8000f98:	781b      	ldrb	r3, [r3, #0]
 8000f9a:	b29b      	uxth	r3, r3
 8000f9c:	4413      	add	r3, r2
 8000f9e:	b29a      	uxth	r2, r3
 8000fa0:	4b03      	ldr	r3, [pc, #12]	; (8000fb0 <SH1107_WriteChar+0x114>)
 8000fa2:	801a      	strh	r2, [r3, #0]

	/* Return written char for validation */
	return ch;
 8000fa4:	79fb      	ldrb	r3, [r7, #7]
}
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	3718      	adds	r7, #24
 8000faa:	46bd      	mov	sp, r7
 8000fac:	bd80      	pop	{r7, pc}
 8000fae:	bf00      	nop
 8000fb0:	200004dc 	.word	0x200004dc

08000fb4 <SH1107_WriteString>:
* @param	str		str in char pointer format for writing
* @param	Font	Font in FontDef_t type for font size. Font is enumeration with FontDef_t. See sh1107_fonts.h for more details about fonts.
* @param	color	The color of the lines. Color is enumeration with SH1107_COLOR_t. See sh1107.h for more details about color.
*
*******************************************************************************/
char SH1107_WriteString(char* str, FontDef_t* Font, SH1107_COLOR_t color) {
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	b084      	sub	sp, #16
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	60f8      	str	r0, [r7, #12]
 8000fbc:	60b9      	str	r1, [r7, #8]
 8000fbe:	4613      	mov	r3, r2
 8000fc0:	71fb      	strb	r3, [r7, #7]
	/* Write until null-byte */
	while (*str) {
 8000fc2:	e012      	b.n	8000fea <SH1107_WriteString+0x36>
		if (SH1107_WriteChar(*str, Font, color) != *str) {
 8000fc4:	68fb      	ldr	r3, [r7, #12]
 8000fc6:	781b      	ldrb	r3, [r3, #0]
 8000fc8:	79fa      	ldrb	r2, [r7, #7]
 8000fca:	68b9      	ldr	r1, [r7, #8]
 8000fcc:	4618      	mov	r0, r3
 8000fce:	f7ff ff65 	bl	8000e9c <SH1107_WriteChar>
 8000fd2:	4603      	mov	r3, r0
 8000fd4:	461a      	mov	r2, r3
 8000fd6:	68fb      	ldr	r3, [r7, #12]
 8000fd8:	781b      	ldrb	r3, [r3, #0]
 8000fda:	429a      	cmp	r2, r3
 8000fdc:	d002      	beq.n	8000fe4 <SH1107_WriteString+0x30>
			/* Char could not be written */
			return *str;
 8000fde:	68fb      	ldr	r3, [r7, #12]
 8000fe0:	781b      	ldrb	r3, [r3, #0]
 8000fe2:	e00a      	b.n	8000ffa <SH1107_WriteString+0x46>
		}

		/* Next char */
		str++;
 8000fe4:	68fb      	ldr	r3, [r7, #12]
 8000fe6:	3301      	adds	r3, #1
 8000fe8:	60fb      	str	r3, [r7, #12]
	while (*str) {
 8000fea:	68fb      	ldr	r3, [r7, #12]
 8000fec:	781b      	ldrb	r3, [r3, #0]
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d1e8      	bne.n	8000fc4 <SH1107_WriteString+0x10>
	}
	SH1107_UpdateScreen();
 8000ff2:	f7ff ff31 	bl	8000e58 <SH1107_UpdateScreen>
	/* Everything ok */
	return *str;
 8000ff6:	68fb      	ldr	r3, [r7, #12]
 8000ff8:	781b      	ldrb	r3, [r3, #0]
}
 8000ffa:	4618      	mov	r0, r3
 8000ffc:	3710      	adds	r7, #16
 8000ffe:	46bd      	mov	sp, r7
 8001000:	bd80      	pop	{r7, pc}
	...

08001004 <SH1107_SetCursor>:
*
* @param	x		x in uint8_t format for row coordinate
* @param	y		y in uint8_t format for column coordinate
*
*******************************************************************************/
void SH1107_SetCursor(uint8_t x, uint8_t y) {
 8001004:	b480      	push	{r7}
 8001006:	b083      	sub	sp, #12
 8001008:	af00      	add	r7, sp, #0
 800100a:	4603      	mov	r3, r0
 800100c:	460a      	mov	r2, r1
 800100e:	71fb      	strb	r3, [r7, #7]
 8001010:	4613      	mov	r3, r2
 8001012:	71bb      	strb	r3, [r7, #6]
	SH1107.CurrentX = x;
 8001014:	79fb      	ldrb	r3, [r7, #7]
 8001016:	b29a      	uxth	r2, r3
 8001018:	4b05      	ldr	r3, [pc, #20]	; (8001030 <SH1107_SetCursor+0x2c>)
 800101a:	801a      	strh	r2, [r3, #0]
	SH1107.CurrentY = y;
 800101c:	79bb      	ldrb	r3, [r7, #6]
 800101e:	b29a      	uxth	r2, r3
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <SH1107_SetCursor+0x2c>)
 8001022:	805a      	strh	r2, [r3, #2]
}
 8001024:	bf00      	nop
 8001026:	370c      	adds	r7, #12
 8001028:	46bd      	mov	sp, r7
 800102a:	bc80      	pop	{r7}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	200004dc 	.word	0x200004dc

08001034 <SH1107_DrawPixel>:
* @param	x		x in uint8_t format for row coordinate
* @param	y		y in uint8_t format for column coordinate
* @param	color	The color of the lines. Color is enumeration with SH1107_COLOR_t. See sh1107.h for more details about color.
*
*******************************************************************************/
void SH1107_DrawPixel(uint8_t x, uint8_t y, SH1107_COLOR_t color) {
 8001034:	b480      	push	{r7}
 8001036:	b083      	sub	sp, #12
 8001038:	af00      	add	r7, sp, #0
 800103a:	4603      	mov	r3, r0
 800103c:	71fb      	strb	r3, [r7, #7]
 800103e:	460b      	mov	r3, r1
 8001040:	71bb      	strb	r3, [r7, #6]
 8001042:	4613      	mov	r3, r2
 8001044:	717b      	strb	r3, [r7, #5]
	if(x >= SH1107_WIDTH || y >= SH1107_HEIGHT) {
 8001046:	79fb      	ldrb	r3, [r7, #7]
 8001048:	2b3f      	cmp	r3, #63	; 0x3f
 800104a:	d849      	bhi.n	80010e0 <SH1107_DrawPixel+0xac>
 800104c:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001050:	2b00      	cmp	r3, #0
 8001052:	db45      	blt.n	80010e0 <SH1107_DrawPixel+0xac>
		/* Don't write outside the buffer */
		return;
	}

	/* Check if pixel should be inverted */
	if(SH1107.Inverted) {
 8001054:	4b25      	ldr	r3, [pc, #148]	; (80010ec <SH1107_DrawPixel+0xb8>)
 8001056:	791b      	ldrb	r3, [r3, #4]
 8001058:	2b00      	cmp	r3, #0
 800105a:	d006      	beq.n	800106a <SH1107_DrawPixel+0x36>
		color = (SH1107_COLOR_t)!color;
 800105c:	797b      	ldrb	r3, [r7, #5]
 800105e:	2b00      	cmp	r3, #0
 8001060:	bf0c      	ite	eq
 8001062:	2301      	moveq	r3, #1
 8001064:	2300      	movne	r3, #0
 8001066:	b2db      	uxtb	r3, r3
 8001068:	717b      	strb	r3, [r7, #5]
	}

	/* Draw in the right color */
	if(color == White) {
 800106a:	797b      	ldrb	r3, [r7, #5]
 800106c:	2b01      	cmp	r3, #1
 800106e:	d11a      	bne.n	80010a6 <SH1107_DrawPixel+0x72>
		SH1107_Buffer[x + (y / 8) * SH1107_WIDTH] |= 1 << (y % 8);
 8001070:	79fa      	ldrb	r2, [r7, #7]
 8001072:	79bb      	ldrb	r3, [r7, #6]
 8001074:	08db      	lsrs	r3, r3, #3
 8001076:	b2d8      	uxtb	r0, r3
 8001078:	4603      	mov	r3, r0
 800107a:	019b      	lsls	r3, r3, #6
 800107c:	4413      	add	r3, r2
 800107e:	4a1c      	ldr	r2, [pc, #112]	; (80010f0 <SH1107_DrawPixel+0xbc>)
 8001080:	5cd3      	ldrb	r3, [r2, r3]
 8001082:	b25a      	sxtb	r2, r3
 8001084:	79bb      	ldrb	r3, [r7, #6]
 8001086:	f003 0307 	and.w	r3, r3, #7
 800108a:	2101      	movs	r1, #1
 800108c:	fa01 f303 	lsl.w	r3, r1, r3
 8001090:	b25b      	sxtb	r3, r3
 8001092:	4313      	orrs	r3, r2
 8001094:	b259      	sxtb	r1, r3
 8001096:	79fa      	ldrb	r2, [r7, #7]
 8001098:	4603      	mov	r3, r0
 800109a:	019b      	lsls	r3, r3, #6
 800109c:	4413      	add	r3, r2
 800109e:	b2c9      	uxtb	r1, r1
 80010a0:	4a13      	ldr	r2, [pc, #76]	; (80010f0 <SH1107_DrawPixel+0xbc>)
 80010a2:	54d1      	strb	r1, [r2, r3]
 80010a4:	e01d      	b.n	80010e2 <SH1107_DrawPixel+0xae>
	} else {
		SH1107_Buffer[x + (y / 8) * SH1107_WIDTH] &= ~(1 << (y % 8));
 80010a6:	79fa      	ldrb	r2, [r7, #7]
 80010a8:	79bb      	ldrb	r3, [r7, #6]
 80010aa:	08db      	lsrs	r3, r3, #3
 80010ac:	b2d8      	uxtb	r0, r3
 80010ae:	4603      	mov	r3, r0
 80010b0:	019b      	lsls	r3, r3, #6
 80010b2:	4413      	add	r3, r2
 80010b4:	4a0e      	ldr	r2, [pc, #56]	; (80010f0 <SH1107_DrawPixel+0xbc>)
 80010b6:	5cd3      	ldrb	r3, [r2, r3]
 80010b8:	b25a      	sxtb	r2, r3
 80010ba:	79bb      	ldrb	r3, [r7, #6]
 80010bc:	f003 0307 	and.w	r3, r3, #7
 80010c0:	2101      	movs	r1, #1
 80010c2:	fa01 f303 	lsl.w	r3, r1, r3
 80010c6:	b25b      	sxtb	r3, r3
 80010c8:	43db      	mvns	r3, r3
 80010ca:	b25b      	sxtb	r3, r3
 80010cc:	4013      	ands	r3, r2
 80010ce:	b259      	sxtb	r1, r3
 80010d0:	79fa      	ldrb	r2, [r7, #7]
 80010d2:	4603      	mov	r3, r0
 80010d4:	019b      	lsls	r3, r3, #6
 80010d6:	4413      	add	r3, r2
 80010d8:	b2c9      	uxtb	r1, r1
 80010da:	4a05      	ldr	r2, [pc, #20]	; (80010f0 <SH1107_DrawPixel+0xbc>)
 80010dc:	54d1      	strb	r1, [r2, r3]
 80010de:	e000      	b.n	80010e2 <SH1107_DrawPixel+0xae>
		return;
 80010e0:	bf00      	nop
	}
}
 80010e2:	370c      	adds	r7, #12
 80010e4:	46bd      	mov	sp, r7
 80010e6:	bc80      	pop	{r7}
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop
 80010ec:	200004dc 	.word	0x200004dc
 80010f0:	200000dc 	.word	0x200000dc

080010f4 <SH1107_TestFPS>:

/***************************************************************************//**
* @brief Changed display frames for fps test.
*
*******************************************************************************/
void SH1107_TestFPS() {
 80010f4:	b5b0      	push	{r4, r5, r7, lr}
 80010f6:	b098      	sub	sp, #96	; 0x60
 80010f8:	af00      	add	r7, sp, #0
	SH1107_Fill(White);
 80010fa:	2001      	movs	r0, #1
 80010fc:	f7ff fe94 	bl	8000e28 <SH1107_Fill>

	uint32_t start = HAL_GetTick();
 8001100:	f000 ff3c 	bl	8001f7c <HAL_GetTick>
 8001104:	65b8      	str	r0, [r7, #88]	; 0x58
	uint32_t end = start;
 8001106:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8001108:	657b      	str	r3, [r7, #84]	; 0x54
	int fps = 0;
 800110a:	2300      	movs	r3, #0
 800110c:	65fb      	str	r3, [r7, #92]	; 0x5c
	char message[] = "ABCDEFGHIJK";
 800110e:	4a3c      	ldr	r2, [pc, #240]	; (8001200 <SH1107_TestFPS+0x10c>)
 8001110:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001114:	ca07      	ldmia	r2, {r0, r1, r2}
 8001116:	e883 0007 	stmia.w	r3, {r0, r1, r2}

	SH1107_SetCursor(2,0);
 800111a:	2100      	movs	r1, #0
 800111c:	2002      	movs	r0, #2
 800111e:	f7ff ff71 	bl	8001004 <SH1107_SetCursor>
	SH1107_WriteString("Testing...", &Font_11x18, Black);
 8001122:	2200      	movs	r2, #0
 8001124:	4937      	ldr	r1, [pc, #220]	; (8001204 <SH1107_TestFPS+0x110>)
 8001126:	4838      	ldr	r0, [pc, #224]	; (8001208 <SH1107_TestFPS+0x114>)
 8001128:	f7ff ff44 	bl	8000fb4 <SH1107_WriteString>

	do {
		SH1107_SetCursor(2, 18);
 800112c:	2112      	movs	r1, #18
 800112e:	2002      	movs	r0, #2
 8001130:	f7ff ff68 	bl	8001004 <SH1107_SetCursor>
		SH1107_WriteString(message, &Font_11x18, Black);
 8001134:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001138:	2200      	movs	r2, #0
 800113a:	4932      	ldr	r1, [pc, #200]	; (8001204 <SH1107_TestFPS+0x110>)
 800113c:	4618      	mov	r0, r3
 800113e:	f7ff ff39 	bl	8000fb4 <SH1107_WriteString>
		SH1107_UpdateScreen();
 8001142:	f7ff fe89 	bl	8000e58 <SH1107_UpdateScreen>

		char ch = message[0];
 8001146:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800114a:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
		memmove(message, message+1, sizeof(message)-2);
 800114e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001152:	3301      	adds	r3, #1
 8001154:	f107 0044 	add.w	r0, r7, #68	; 0x44
 8001158:	220a      	movs	r2, #10
 800115a:	4619      	mov	r1, r3
 800115c:	f003 fd50 	bl	8004c00 <memmove>
		message[sizeof(message)-2] = ch;
 8001160:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8001164:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e

		fps++;
 8001168:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800116a:	3301      	adds	r3, #1
 800116c:	65fb      	str	r3, [r7, #92]	; 0x5c
		end = HAL_GetTick();
 800116e:	f000 ff05 	bl	8001f7c <HAL_GetTick>
 8001172:	6578      	str	r0, [r7, #84]	; 0x54
	} while((end - start) < 5000);
 8001174:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8001176:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8001178:	1ad3      	subs	r3, r2, r3
 800117a:	f241 3287 	movw	r2, #4999	; 0x1387
 800117e:	4293      	cmp	r3, r2
 8001180:	d9d4      	bls.n	800112c <SH1107_TestFPS+0x38>

	HAL_Delay(1000);
 8001182:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001186:	f000 ff03 	bl	8001f90 <HAL_Delay>

	char buff[64];
	fps = (float)fps / ((end - start) / 1000.0);
 800118a:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 800118c:	f7ff fd02 	bl	8000b94 <__aeabi_i2f>
 8001190:	4603      	mov	r3, r0
 8001192:	4618      	mov	r0, r3
 8001194:	f7ff f9b2 	bl	80004fc <__aeabi_f2d>
 8001198:	4604      	mov	r4, r0
 800119a:	460d      	mov	r5, r1
 800119c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800119e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80011a0:	1ad3      	subs	r3, r2, r3
 80011a2:	4618      	mov	r0, r3
 80011a4:	f7ff f988 	bl	80004b8 <__aeabi_ui2d>
 80011a8:	f04f 0200 	mov.w	r2, #0
 80011ac:	4b17      	ldr	r3, [pc, #92]	; (800120c <SH1107_TestFPS+0x118>)
 80011ae:	f7ff fb27 	bl	8000800 <__aeabi_ddiv>
 80011b2:	4602      	mov	r2, r0
 80011b4:	460b      	mov	r3, r1
 80011b6:	4620      	mov	r0, r4
 80011b8:	4629      	mov	r1, r5
 80011ba:	f7ff fb21 	bl	8000800 <__aeabi_ddiv>
 80011be:	4602      	mov	r2, r0
 80011c0:	460b      	mov	r3, r1
 80011c2:	4610      	mov	r0, r2
 80011c4:	4619      	mov	r1, r3
 80011c6:	f7ff fc03 	bl	80009d0 <__aeabi_d2iz>
 80011ca:	4603      	mov	r3, r0
 80011cc:	65fb      	str	r3, [r7, #92]	; 0x5c
	snprintf(buff, sizeof(buff), "~%d FPS", fps);
 80011ce:	1d38      	adds	r0, r7, #4
 80011d0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011d2:	4a0f      	ldr	r2, [pc, #60]	; (8001210 <SH1107_TestFPS+0x11c>)
 80011d4:	2140      	movs	r1, #64	; 0x40
 80011d6:	f003 fd35 	bl	8004c44 <sniprintf>

	SH1107_Fill(White);
 80011da:	2001      	movs	r0, #1
 80011dc:	f7ff fe24 	bl	8000e28 <SH1107_Fill>
	SH1107_SetCursor(2, 18);
 80011e0:	2112      	movs	r1, #18
 80011e2:	2002      	movs	r0, #2
 80011e4:	f7ff ff0e 	bl	8001004 <SH1107_SetCursor>
	SH1107_WriteString(buff, &Font_11x18, Black);
 80011e8:	1d3b      	adds	r3, r7, #4
 80011ea:	2200      	movs	r2, #0
 80011ec:	4905      	ldr	r1, [pc, #20]	; (8001204 <SH1107_TestFPS+0x110>)
 80011ee:	4618      	mov	r0, r3
 80011f0:	f7ff fee0 	bl	8000fb4 <SH1107_WriteString>
	SH1107_UpdateScreen();
 80011f4:	f7ff fe30 	bl	8000e58 <SH1107_UpdateScreen>
}
 80011f8:	bf00      	nop
 80011fa:	3760      	adds	r7, #96	; 0x60
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bdb0      	pop	{r4, r5, r7, pc}
 8001200:	0800552c 	.word	0x0800552c
 8001204:	20000000 	.word	0x20000000
 8001208:	08005518 	.word	0x08005518
 800120c:	408f4000 	.word	0x408f4000
 8001210:	08005524 	.word	0x08005524

08001214 <SPI_Write>:
/*============================================================================*/

/*============================================================================*/
/* Implementation of functions                                                */
/*============================================================================*/
HAL_StatusTypeDef SPI_Write(int id, uint8_t *pData, uint16_t Size){
 8001214:	b580      	push	{r7, lr}
 8001216:	b086      	sub	sp, #24
 8001218:	af00      	add	r7, sp, #0
 800121a:	60f8      	str	r0, [r7, #12]
 800121c:	60b9      	str	r1, [r7, #8]
 800121e:	4613      	mov	r3, r2
 8001220:	80fb      	strh	r3, [r7, #6]
	HAL_StatusTypeDef status = HAL_ERROR;
 8001222:	2301      	movs	r3, #1
 8001224:	75fb      	strb	r3, [r7, #23]
	//HAL_GPIO_TogglePin(SPI3_CS_GPIO_Port, SPI3_CS_Pin);
	HAL_GPIO_WritePin(SPI3_CS_GPIO_Port, SPI3_CS_Pin,0);
 8001226:	2200      	movs	r2, #0
 8001228:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800122c:	480c      	ldr	r0, [pc, #48]	; (8001260 <SPI_Write+0x4c>)
 800122e:	f001 fd46 	bl	8002cbe <HAL_GPIO_WritePin>
	status = HAL_SPI_Transmit(&hspi3, pData, Size, 10000);
 8001232:	88fa      	ldrh	r2, [r7, #6]
 8001234:	f242 7310 	movw	r3, #10000	; 0x2710
 8001238:	68b9      	ldr	r1, [r7, #8]
 800123a:	480a      	ldr	r0, [pc, #40]	; (8001264 <SPI_Write+0x50>)
 800123c:	f002 fe68 	bl	8003f10 <HAL_SPI_Transmit>
 8001240:	4603      	mov	r3, r0
 8001242:	75fb      	strb	r3, [r7, #23]
	HAL_Delay(20);
 8001244:	2014      	movs	r0, #20
 8001246:	f000 fea3 	bl	8001f90 <HAL_Delay>
	HAL_GPIO_WritePin(SPI3_CS_GPIO_Port, SPI3_CS_Pin,1);
 800124a:	2201      	movs	r2, #1
 800124c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001250:	4803      	ldr	r0, [pc, #12]	; (8001260 <SPI_Write+0x4c>)
 8001252:	f001 fd34 	bl	8002cbe <HAL_GPIO_WritePin>
	return status;
 8001256:	7dfb      	ldrb	r3, [r7, #23]
}
 8001258:	4618      	mov	r0, r3
 800125a:	3718      	adds	r7, #24
 800125c:	46bd      	mov	sp, r7
 800125e:	bd80      	pop	{r7, pc}
 8001260:	40010800 	.word	0x40010800
 8001264:	20002acc 	.word	0x20002acc

08001268 <AD529x_SetRegister>:


void AD529x_SetRegister(unsigned char command, unsigned short data)
{
 8001268:	b580      	push	{r7, lr}
 800126a:	b084      	sub	sp, #16
 800126c:	af00      	add	r7, sp, #0
 800126e:	4603      	mov	r3, r0
 8001270:	460a      	mov	r2, r1
 8001272:	71fb      	strb	r3, [r7, #7]
 8001274:	4613      	mov	r3, r2
 8001276:	80bb      	strh	r3, [r7, #4]
	unsigned char dataBuf[2] = {0, 0};
 8001278:	2300      	movs	r3, #0
 800127a:	81bb      	strh	r3, [r7, #12]
	data &= 0x3FF;
 800127c:	88bb      	ldrh	r3, [r7, #4]
 800127e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001282:	80bb      	strh	r3, [r7, #4]
	command &= 0x0F;
 8001284:	79fb      	ldrb	r3, [r7, #7]
 8001286:	f003 030f 	and.w	r3, r3, #15
 800128a:	71fb      	strb	r3, [r7, #7]
	dataBuf[0] = (command << 2) + ((data & 0x0300) >> 8);
 800128c:	79fb      	ldrb	r3, [r7, #7]
 800128e:	009b      	lsls	r3, r3, #2
 8001290:	b2da      	uxtb	r2, r3
 8001292:	88bb      	ldrh	r3, [r7, #4]
 8001294:	121b      	asrs	r3, r3, #8
 8001296:	b2db      	uxtb	r3, r3
 8001298:	f003 0303 	and.w	r3, r3, #3
 800129c:	b2db      	uxtb	r3, r3
 800129e:	4413      	add	r3, r2
 80012a0:	b2db      	uxtb	r3, r3
 80012a2:	733b      	strb	r3, [r7, #12]
	dataBuf[1] = (data & 0x00FF);
 80012a4:	88bb      	ldrh	r3, [r7, #4]
 80012a6:	b2db      	uxtb	r3, r3
 80012a8:	737b      	strb	r3, [r7, #13]
	SPI_Write(AD529x_SLAVE_ID, dataBuf, 2);
 80012aa:	f107 030c 	add.w	r3, r7, #12
 80012ae:	2202      	movs	r2, #2
 80012b0:	4619      	mov	r1, r3
 80012b2:	2001      	movs	r0, #1
 80012b4:	f7ff ffae 	bl	8001214 <SPI_Write>

}
 80012b8:	bf00      	nop
 80012ba:	3710      	adds	r7, #16
 80012bc:	46bd      	mov	sp, r7
 80012be:	bd80      	pop	{r7, pc}

080012c0 <AD529x_Init>:

}


char AD529x_Init()
{
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b082      	sub	sp, #8
 80012c4:	af00      	add	r7, sp, #0
	char status = -1;
 80012c6:	23ff      	movs	r3, #255	; 0xff
 80012c8:	71fb      	strb	r3, [r7, #7]
	//AD527x_RESET_OUT;
	//AD527x_RESET_HIGH;

	/* setup AD527x */
	/* Calibration mode set to normal mode. RDAC register write proction closed. */
	AD529x_SetRegister(AD529x_WRITE_CONTENT,(AD529x_C2 | AD529x_C1));
 80012ca:	2106      	movs	r1, #6
 80012cc:	2006      	movs	r0, #6
 80012ce:	f7ff ffcb 	bl	8001268 <AD529x_SetRegister>

	return status;
 80012d2:	79fb      	ldrb	r3, [r7, #7]
}
 80012d4:	4618      	mov	r0, r3
 80012d6:	3708      	adds	r7, #8
 80012d8:	46bd      	mov	sp, r7
 80012da:	bd80      	pop	{r7, pc}

080012dc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	b082      	sub	sp, #8
 80012e0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80012e2:	4b14      	ldr	r3, [pc, #80]	; (8001334 <MX_DMA_Init+0x58>)
 80012e4:	695b      	ldr	r3, [r3, #20]
 80012e6:	4a13      	ldr	r2, [pc, #76]	; (8001334 <MX_DMA_Init+0x58>)
 80012e8:	f043 0301 	orr.w	r3, r3, #1
 80012ec:	6153      	str	r3, [r2, #20]
 80012ee:	4b11      	ldr	r3, [pc, #68]	; (8001334 <MX_DMA_Init+0x58>)
 80012f0:	695b      	ldr	r3, [r3, #20]
 80012f2:	f003 0301 	and.w	r3, r3, #1
 80012f6:	607b      	str	r3, [r7, #4]
 80012f8:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 80012fa:	2200      	movs	r2, #0
 80012fc:	2100      	movs	r1, #0
 80012fe:	200c      	movs	r0, #12
 8001300:	f000 ff41 	bl	8002186 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 8001304:	200c      	movs	r0, #12
 8001306:	f000 ff5a 	bl	80021be <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 800130a:	2200      	movs	r2, #0
 800130c:	2100      	movs	r1, #0
 800130e:	200d      	movs	r0, #13
 8001310:	f000 ff39 	bl	8002186 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001314:	200d      	movs	r0, #13
 8001316:	f000 ff52 	bl	80021be <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 0, 0);
 800131a:	2200      	movs	r2, #0
 800131c:	2100      	movs	r1, #0
 800131e:	200e      	movs	r0, #14
 8001320:	f000 ff31 	bl	8002186 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 8001324:	200e      	movs	r0, #14
 8001326:	f000 ff4a 	bl	80021be <HAL_NVIC_EnableIRQ>

}
 800132a:	bf00      	nop
 800132c:	3708      	adds	r7, #8
 800132e:	46bd      	mov	sp, r7
 8001330:	bd80      	pop	{r7, pc}
 8001332:	bf00      	nop
 8001334:	40021000 	.word	0x40021000

08001338 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001338:	b580      	push	{r7, lr}
 800133a:	b088      	sub	sp, #32
 800133c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800133e:	f107 0310 	add.w	r3, r7, #16
 8001342:	2200      	movs	r2, #0
 8001344:	601a      	str	r2, [r3, #0]
 8001346:	605a      	str	r2, [r3, #4]
 8001348:	609a      	str	r2, [r3, #8]
 800134a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800134c:	4b52      	ldr	r3, [pc, #328]	; (8001498 <MX_GPIO_Init+0x160>)
 800134e:	699b      	ldr	r3, [r3, #24]
 8001350:	4a51      	ldr	r2, [pc, #324]	; (8001498 <MX_GPIO_Init+0x160>)
 8001352:	f043 0310 	orr.w	r3, r3, #16
 8001356:	6193      	str	r3, [r2, #24]
 8001358:	4b4f      	ldr	r3, [pc, #316]	; (8001498 <MX_GPIO_Init+0x160>)
 800135a:	699b      	ldr	r3, [r3, #24]
 800135c:	f003 0310 	and.w	r3, r3, #16
 8001360:	60fb      	str	r3, [r7, #12]
 8001362:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001364:	4b4c      	ldr	r3, [pc, #304]	; (8001498 <MX_GPIO_Init+0x160>)
 8001366:	699b      	ldr	r3, [r3, #24]
 8001368:	4a4b      	ldr	r2, [pc, #300]	; (8001498 <MX_GPIO_Init+0x160>)
 800136a:	f043 0320 	orr.w	r3, r3, #32
 800136e:	6193      	str	r3, [r2, #24]
 8001370:	4b49      	ldr	r3, [pc, #292]	; (8001498 <MX_GPIO_Init+0x160>)
 8001372:	699b      	ldr	r3, [r3, #24]
 8001374:	f003 0320 	and.w	r3, r3, #32
 8001378:	60bb      	str	r3, [r7, #8]
 800137a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800137c:	4b46      	ldr	r3, [pc, #280]	; (8001498 <MX_GPIO_Init+0x160>)
 800137e:	699b      	ldr	r3, [r3, #24]
 8001380:	4a45      	ldr	r2, [pc, #276]	; (8001498 <MX_GPIO_Init+0x160>)
 8001382:	f043 0304 	orr.w	r3, r3, #4
 8001386:	6193      	str	r3, [r2, #24]
 8001388:	4b43      	ldr	r3, [pc, #268]	; (8001498 <MX_GPIO_Init+0x160>)
 800138a:	699b      	ldr	r3, [r3, #24]
 800138c:	f003 0304 	and.w	r3, r3, #4
 8001390:	607b      	str	r3, [r7, #4]
 8001392:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001394:	4b40      	ldr	r3, [pc, #256]	; (8001498 <MX_GPIO_Init+0x160>)
 8001396:	699b      	ldr	r3, [r3, #24]
 8001398:	4a3f      	ldr	r2, [pc, #252]	; (8001498 <MX_GPIO_Init+0x160>)
 800139a:	f043 0308 	orr.w	r3, r3, #8
 800139e:	6193      	str	r3, [r2, #24]
 80013a0:	4b3d      	ldr	r3, [pc, #244]	; (8001498 <MX_GPIO_Init+0x160>)
 80013a2:	699b      	ldr	r3, [r3, #24]
 80013a4:	f003 0308 	and.w	r3, r3, #8
 80013a8:	603b      	str	r3, [r7, #0]
 80013aa:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, AIN0_MODE_SEL_Pin|AIN1_MODE_SEL_Pin|AIN2_MODE_SEL_Pin|AIN3_MODE_SEL_Pin, GPIO_PIN_SET);
 80013ac:	2201      	movs	r2, #1
 80013ae:	210f      	movs	r1, #15
 80013b0:	483a      	ldr	r0, [pc, #232]	; (800149c <MX_GPIO_Init+0x164>)
 80013b2:	f001 fc84 	bl	8002cbe <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TP1_Pin|TP2_Pin|EXT_LED1_Pin|SPI3_CS_Pin, GPIO_PIN_RESET);
 80013b6:	2200      	movs	r2, #0
 80013b8:	f248 110c 	movw	r1, #33036	; 0x810c
 80013bc:	4838      	ldr	r0, [pc, #224]	; (80014a0 <MX_GPIO_Init+0x168>)
 80013be:	f001 fc7e 	bl	8002cbe <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DAC_20mA_SEL_Pin|DAC_40mA_SEL_Pin|DAC_100mA_SEL_Pin|EXT_LED2_Pin
 80013c2:	2200      	movs	r2, #0
 80013c4:	f649 5107 	movw	r1, #40199	; 0x9d07
 80013c8:	4836      	ldr	r0, [pc, #216]	; (80014a4 <MX_GPIO_Init+0x16c>)
 80013ca:	f001 fc78 	bl	8002cbe <HAL_GPIO_WritePin>
                          |EXT_LED3_Pin|EXT_LED4_Pin|EXP_LATCH_Pin|LCD_RES_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EXP_CLK_Pin|EXP_OEN_Pin|EXP_DOUT_Pin|INT_LED1_Pin
 80013ce:	2200      	movs	r2, #0
 80013d0:	f44f 51ce 	mov.w	r1, #6592	; 0x19c0
 80013d4:	4831      	ldr	r0, [pc, #196]	; (800149c <MX_GPIO_Init+0x164>)
 80013d6:	f001 fc72 	bl	8002cbe <HAL_GPIO_WritePin>
                          |INT_LED2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : PCPin PCPin PCPin PCPin
                           PCPin PCPin PCPin PCPin
                           PCPin */
  GPIO_InitStruct.Pin = AIN0_MODE_SEL_Pin|AIN1_MODE_SEL_Pin|AIN2_MODE_SEL_Pin|AIN3_MODE_SEL_Pin
 80013da:	f641 13cf 	movw	r3, #6607	; 0x19cf
 80013de:	613b      	str	r3, [r7, #16]
                          |EXP_CLK_Pin|EXP_OEN_Pin|EXP_DOUT_Pin|INT_LED1_Pin
                          |INT_LED2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013e0:	2301      	movs	r3, #1
 80013e2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013e4:	2300      	movs	r3, #0
 80013e6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013e8:	2302      	movs	r3, #2
 80013ea:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013ec:	f107 0310 	add.w	r3, r7, #16
 80013f0:	4619      	mov	r1, r3
 80013f2:	482a      	ldr	r0, [pc, #168]	; (800149c <MX_GPIO_Init+0x164>)
 80013f4:	f001 fab8 	bl	8002968 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = TP1_Pin|TP2_Pin|EXT_LED1_Pin|SPI3_CS_Pin;
 80013f8:	f248 130c 	movw	r3, #33036	; 0x810c
 80013fc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013fe:	2301      	movs	r3, #1
 8001400:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001402:	2300      	movs	r3, #0
 8001404:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001406:	2302      	movs	r3, #2
 8001408:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800140a:	f107 0310 	add.w	r3, r7, #16
 800140e:	4619      	mov	r1, r3
 8001410:	4823      	ldr	r0, [pc, #140]	; (80014a0 <MX_GPIO_Init+0x168>)
 8001412:	f001 faa9 	bl	8002968 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = STM_MODE_SEL_Pin;
 8001416:	2320      	movs	r3, #32
 8001418:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800141a:	4b23      	ldr	r3, [pc, #140]	; (80014a8 <MX_GPIO_Init+0x170>)
 800141c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800141e:	2300      	movs	r3, #0
 8001420:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(STM_MODE_SEL_GPIO_Port, &GPIO_InitStruct);
 8001422:	f107 0310 	add.w	r3, r7, #16
 8001426:	4619      	mov	r1, r3
 8001428:	481c      	ldr	r0, [pc, #112]	; (800149c <MX_GPIO_Init+0x164>)
 800142a:	f001 fa9d 	bl	8002968 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin
                           PBPin PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = DAC_20mA_SEL_Pin|DAC_40mA_SEL_Pin|DAC_100mA_SEL_Pin|EXT_LED2_Pin
 800142e:	f649 5307 	movw	r3, #40199	; 0x9d07
 8001432:	613b      	str	r3, [r7, #16]
                          |EXT_LED3_Pin|EXT_LED4_Pin|EXP_LATCH_Pin|LCD_RES_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001434:	2301      	movs	r3, #1
 8001436:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001438:	2300      	movs	r3, #0
 800143a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800143c:	2302      	movs	r3, #2
 800143e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001440:	f107 0310 	add.w	r3, r7, #16
 8001444:	4619      	mov	r1, r3
 8001446:	4817      	ldr	r0, [pc, #92]	; (80014a4 <MX_GPIO_Init+0x16c>)
 8001448:	f001 fa8e 	bl	8002968 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = EXP_DIN_Pin;
 800144c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001450:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001452:	2300      	movs	r3, #0
 8001454:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001456:	2300      	movs	r3, #0
 8001458:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(EXP_DIN_GPIO_Port, &GPIO_InitStruct);
 800145a:	f107 0310 	add.w	r3, r7, #16
 800145e:	4619      	mov	r1, r3
 8001460:	480e      	ldr	r0, [pc, #56]	; (800149c <MX_GPIO_Init+0x164>)
 8001462:	f001 fa81 	bl	8002968 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = EXT_BTN2_Pin|EXT_BTN1_Pin;
 8001466:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 800146a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800146c:	2300      	movs	r3, #0
 800146e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001470:	2300      	movs	r3, #0
 8001472:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001474:	f107 0310 	add.w	r3, r7, #16
 8001478:	4619      	mov	r1, r3
 800147a:	4809      	ldr	r0, [pc, #36]	; (80014a0 <MX_GPIO_Init+0x168>)
 800147c:	f001 fa74 	bl	8002968 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001480:	2200      	movs	r2, #0
 8001482:	2100      	movs	r1, #0
 8001484:	2017      	movs	r0, #23
 8001486:	f000 fe7e 	bl	8002186 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 800148a:	2017      	movs	r0, #23
 800148c:	f000 fe97 	bl	80021be <HAL_NVIC_EnableIRQ>

}
 8001490:	bf00      	nop
 8001492:	3720      	adds	r7, #32
 8001494:	46bd      	mov	sp, r7
 8001496:	bd80      	pop	{r7, pc}
 8001498:	40021000 	.word	0x40021000
 800149c:	40011000 	.word	0x40011000
 80014a0:	40010800 	.word	0x40010800
 80014a4:	40010c00 	.word	0x40010c00
 80014a8:	10110000 	.word	0x10110000

080014ac <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80014ac:	b580      	push	{r7, lr}
 80014ae:	af00      	add	r7, sp, #0

  hi2c1.Instance = I2C1;
 80014b0:	4b12      	ldr	r3, [pc, #72]	; (80014fc <MX_I2C1_Init+0x50>)
 80014b2:	4a13      	ldr	r2, [pc, #76]	; (8001500 <MX_I2C1_Init+0x54>)
 80014b4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80014b6:	4b11      	ldr	r3, [pc, #68]	; (80014fc <MX_I2C1_Init+0x50>)
 80014b8:	4a12      	ldr	r2, [pc, #72]	; (8001504 <MX_I2C1_Init+0x58>)
 80014ba:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80014bc:	4b0f      	ldr	r3, [pc, #60]	; (80014fc <MX_I2C1_Init+0x50>)
 80014be:	2200      	movs	r2, #0
 80014c0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80014c2:	4b0e      	ldr	r3, [pc, #56]	; (80014fc <MX_I2C1_Init+0x50>)
 80014c4:	2200      	movs	r2, #0
 80014c6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014c8:	4b0c      	ldr	r3, [pc, #48]	; (80014fc <MX_I2C1_Init+0x50>)
 80014ca:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80014ce:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014d0:	4b0a      	ldr	r3, [pc, #40]	; (80014fc <MX_I2C1_Init+0x50>)
 80014d2:	2200      	movs	r2, #0
 80014d4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80014d6:	4b09      	ldr	r3, [pc, #36]	; (80014fc <MX_I2C1_Init+0x50>)
 80014d8:	2200      	movs	r2, #0
 80014da:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014dc:	4b07      	ldr	r3, [pc, #28]	; (80014fc <MX_I2C1_Init+0x50>)
 80014de:	2200      	movs	r2, #0
 80014e0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014e2:	4b06      	ldr	r3, [pc, #24]	; (80014fc <MX_I2C1_Init+0x50>)
 80014e4:	2200      	movs	r2, #0
 80014e6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80014e8:	4804      	ldr	r0, [pc, #16]	; (80014fc <MX_I2C1_Init+0x50>)
 80014ea:	f001 fc19 	bl	8002d20 <HAL_I2C_Init>
 80014ee:	4603      	mov	r3, r0
 80014f0:	2b00      	cmp	r3, #0
 80014f2:	d001      	beq.n	80014f8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80014f4:	f000 f952 	bl	800179c <Error_Handler>
  }

}
 80014f8:	bf00      	nop
 80014fa:	bd80      	pop	{r7, pc}
 80014fc:	200004f0 	.word	0x200004f0
 8001500:	40005400 	.word	0x40005400
 8001504:	00061a80 	.word	0x00061a80

08001508 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001508:	b580      	push	{r7, lr}
 800150a:	b088      	sub	sp, #32
 800150c:	af00      	add	r7, sp, #0
 800150e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001510:	f107 0310 	add.w	r3, r7, #16
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
 800151a:	609a      	str	r2, [r3, #8]
 800151c:	60da      	str	r2, [r3, #12]
  if(i2cHandle->Instance==I2C1)
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	4a15      	ldr	r2, [pc, #84]	; (8001578 <HAL_I2C_MspInit+0x70>)
 8001524:	4293      	cmp	r3, r2
 8001526:	d123      	bne.n	8001570 <HAL_I2C_MspInit+0x68>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001528:	4b14      	ldr	r3, [pc, #80]	; (800157c <HAL_I2C_MspInit+0x74>)
 800152a:	699b      	ldr	r3, [r3, #24]
 800152c:	4a13      	ldr	r2, [pc, #76]	; (800157c <HAL_I2C_MspInit+0x74>)
 800152e:	f043 0308 	orr.w	r3, r3, #8
 8001532:	6193      	str	r3, [r2, #24]
 8001534:	4b11      	ldr	r3, [pc, #68]	; (800157c <HAL_I2C_MspInit+0x74>)
 8001536:	699b      	ldr	r3, [r3, #24]
 8001538:	f003 0308 	and.w	r3, r3, #8
 800153c:	60fb      	str	r3, [r7, #12]
 800153e:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = LCD_SCL_Pin|LCD_SDA_Pin;
 8001540:	23c0      	movs	r3, #192	; 0xc0
 8001542:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001544:	2312      	movs	r3, #18
 8001546:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001548:	2303      	movs	r3, #3
 800154a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800154c:	f107 0310 	add.w	r3, r7, #16
 8001550:	4619      	mov	r1, r3
 8001552:	480b      	ldr	r0, [pc, #44]	; (8001580 <HAL_I2C_MspInit+0x78>)
 8001554:	f001 fa08 	bl	8002968 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001558:	4b08      	ldr	r3, [pc, #32]	; (800157c <HAL_I2C_MspInit+0x74>)
 800155a:	69db      	ldr	r3, [r3, #28]
 800155c:	4a07      	ldr	r2, [pc, #28]	; (800157c <HAL_I2C_MspInit+0x74>)
 800155e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001562:	61d3      	str	r3, [r2, #28]
 8001564:	4b05      	ldr	r3, [pc, #20]	; (800157c <HAL_I2C_MspInit+0x74>)
 8001566:	69db      	ldr	r3, [r3, #28]
 8001568:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800156c:	60bb      	str	r3, [r7, #8]
 800156e:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8001570:	bf00      	nop
 8001572:	3720      	adds	r7, #32
 8001574:	46bd      	mov	sp, r7
 8001576:	bd80      	pop	{r7, pc}
 8001578:	40005400 	.word	0x40005400
 800157c:	40021000 	.word	0x40021000
 8001580:	40010c00 	.word	0x40010c00

08001584 <io_update>:
#endif
}


uint8_t io_update(void)
{
 8001584:	b5b0      	push	{r4, r5, r7, lr}
 8001586:	b084      	sub	sp, #16
 8001588:	af02      	add	r7, sp, #8
	HAL_StatusTypeDef status = HAL_ERROR;
 800158a:	2301      	movs	r3, #1
 800158c:	71bb      	strb	r3, [r7, #6]
	unsigned char rxData = 0;
 800158e:	2300      	movs	r3, #0
 8001590:	717b      	strb	r3, [r7, #5]
	unsigned char txData = (unsigned char)(g_PDI.dout & 0xFF);
 8001592:	4b29      	ldr	r3, [pc, #164]	; (8001638 <io_update+0xb4>)
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	b2db      	uxtb	r3, r3
 8001598:	713b      	strb	r3, [r7, #4]
	status = HAL_SPI_TransmitReceive(&hspi3, &txData, &rxData, 1, 10000);
 800159a:	1d7a      	adds	r2, r7, #5
 800159c:	1d39      	adds	r1, r7, #4
 800159e:	f242 7310 	movw	r3, #10000	; 0x2710
 80015a2:	9300      	str	r3, [sp, #0]
 80015a4:	2301      	movs	r3, #1
 80015a6:	4825      	ldr	r0, [pc, #148]	; (800163c <io_update+0xb8>)
 80015a8:	f002 fdee 	bl	8004188 <HAL_SPI_TransmitReceive>
 80015ac:	4603      	mov	r3, r0
 80015ae:	71bb      	strb	r3, [r7, #6]
	HAL_GPIO_WritePin(EXP_LATCH_GPIO_Port, EXP_LATCH_Pin, 0);
 80015b0:	2200      	movs	r2, #0
 80015b2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80015b6:	4822      	ldr	r0, [pc, #136]	; (8001640 <io_update+0xbc>)
 80015b8:	f001 fb81 	bl	8002cbe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EXP_LATCH_GPIO_Port, EXP_LATCH_Pin, 1);
 80015bc:	2201      	movs	r2, #1
 80015be:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80015c2:	481f      	ldr	r0, [pc, #124]	; (8001640 <io_update+0xbc>)
 80015c4:	f001 fb7b 	bl	8002cbe <HAL_GPIO_WritePin>
	uint8_t direct_output = 0;
 80015c8:	2300      	movs	r3, #0
 80015ca:	71fb      	strb	r3, [r7, #7]
	for(direct_output=0;direct_output<DIRECT_OUTPUT_COUNT;direct_output++){
 80015cc:	2300      	movs	r3, #0
 80015ce:	71fb      	strb	r3, [r7, #7]
 80015d0:	e026      	b.n	8001620 <io_update+0x9c>
		HAL_GPIO_WritePin(DIRECT_OUTPUT_PORT_LIST[direct_output],DIRECT_OUTPUT_PIN_LIST[direct_output], (g_PDI.dout & (1<<(((direct_output+INDIRECT_OUTPUT_COUNT)%DIRECT_OUTPUT_COUNT)+8))));
 80015d2:	79fb      	ldrb	r3, [r7, #7]
 80015d4:	4a1b      	ldr	r2, [pc, #108]	; (8001644 <io_update+0xc0>)
 80015d6:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80015da:	79fb      	ldrb	r3, [r7, #7]
 80015dc:	4a1a      	ldr	r2, [pc, #104]	; (8001648 <io_update+0xc4>)
 80015de:	f832 5013 	ldrh.w	r5, [r2, r3, lsl #1]
 80015e2:	4b15      	ldr	r3, [pc, #84]	; (8001638 <io_update+0xb4>)
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	b2d8      	uxtb	r0, r3
 80015e8:	79fb      	ldrb	r3, [r7, #7]
 80015ea:	3308      	adds	r3, #8
 80015ec:	4619      	mov	r1, r3
 80015ee:	4b17      	ldr	r3, [pc, #92]	; (800164c <io_update+0xc8>)
 80015f0:	fba3 2301 	umull	r2, r3, r3, r1
 80015f4:	091a      	lsrs	r2, r3, #4
 80015f6:	4613      	mov	r3, r2
 80015f8:	005b      	lsls	r3, r3, #1
 80015fa:	4413      	add	r3, r2
 80015fc:	00db      	lsls	r3, r3, #3
 80015fe:	1aca      	subs	r2, r1, r3
 8001600:	0853      	lsrs	r3, r2, #1
 8001602:	3308      	adds	r3, #8
 8001604:	2201      	movs	r2, #1
 8001606:	fa02 f303 	lsl.w	r3, r2, r3
 800160a:	b2db      	uxtb	r3, r3
 800160c:	4003      	ands	r3, r0
 800160e:	b2db      	uxtb	r3, r3
 8001610:	461a      	mov	r2, r3
 8001612:	4629      	mov	r1, r5
 8001614:	4620      	mov	r0, r4
 8001616:	f001 fb52 	bl	8002cbe <HAL_GPIO_WritePin>
	for(direct_output=0;direct_output<DIRECT_OUTPUT_COUNT;direct_output++){
 800161a:	79fb      	ldrb	r3, [r7, #7]
 800161c:	3301      	adds	r3, #1
 800161e:	71fb      	strb	r3, [r7, #7]
 8001620:	79fb      	ldrb	r3, [r7, #7]
 8001622:	2b0b      	cmp	r3, #11
 8001624:	d9d5      	bls.n	80015d2 <io_update+0x4e>
	}
	g_PDO.din = rxData & 0x000000FF;
 8001626:	797b      	ldrb	r3, [r7, #5]
 8001628:	461a      	mov	r2, r3
 800162a:	4b09      	ldr	r3, [pc, #36]	; (8001650 <io_update+0xcc>)
 800162c:	601a      	str	r2, [r3, #0]
	return status;
 800162e:	79bb      	ldrb	r3, [r7, #6]
}
 8001630:	4618      	mov	r0, r3
 8001632:	3708      	adds	r7, #8
 8001634:	46bd      	mov	sp, r7
 8001636:	bdb0      	pop	{r4, r5, r7, pc}
 8001638:	20000554 	.word	0x20000554
 800163c:	20002acc 	.word	0x20002acc
 8001640:	40010c00 	.word	0x40010c00
 8001644:	20000008 	.word	0x20000008
 8001648:	20000038 	.word	0x20000038
 800164c:	aaaaaaab 	.word	0xaaaaaaab
 8001650:	20000544 	.word	0x20000544

08001654 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001654:	b580      	push	{r7, lr}
 8001656:	b082      	sub	sp, #8
 8001658:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800165a:	f000 fc37 	bl	8001ecc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800165e:	f000 f82f 	bl	80016c0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001662:	f7ff fe69 	bl	8001338 <MX_GPIO_Init>
  MX_DMA_Init();
 8001666:	f7ff fe39 	bl	80012dc <MX_DMA_Init>
  MX_USART1_UART_Init();
 800166a:	f000 fb2b 	bl	8001cc4 <MX_USART1_UART_Init>
  MX_SPI1_Init();
 800166e:	f000 f8a1 	bl	80017b4 <MX_SPI1_Init>
  MX_SPI2_Init();
 8001672:	f000 f8d3 	bl	800181c <MX_SPI2_Init>
  MX_SPI3_Init();
 8001676:	f000 f909 	bl	800188c <MX_SPI3_Init>
  MX_I2C1_Init();
 800167a:	f7ff ff17 	bl	80014ac <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  AD529x_Init();
 800167e:	f7ff fe1f 	bl	80012c0 <AD529x_Init>
  SH1107_Init();
 8001682:	f7ff fb6b 	bl	8000d5c <SH1107_Init>

  SH1107_TestFPS();
 8001686:	f7ff fd35 	bl	80010f4 <SH1107_TestFPS>

	memset(gSPI_Tx_Buf,0,SPI_TX_BUF_SIZE);
 800168a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800168e:	2100      	movs	r1, #0
 8001690:	4808      	ldr	r0, [pc, #32]	; (80016b4 <main+0x60>)
 8001692:	f003 facf 	bl	8004c34 <memset>
	//HAL_SPI_TransmitReceive_DMA(&hspi1,gSPI_Tx_Buf, gSPI_Rx_Buf, SPI_TX_BUF_SIZE);
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	dbprintf("Rota SPI Test Application");
 8001696:	4808      	ldr	r0, [pc, #32]	; (80016b8 <main+0x64>)
 8001698:	f000 fbe0 	bl	8001e5c <dbprintf>
	uint8_t output_count = 0;
 800169c:	2300      	movs	r3, #0
 800169e:	71fb      	strb	r3, [r7, #7]
		//dbprintf("Output Value: %d",output);
		HAL_GPIO_TogglePin(INT_LED1_GPIO_Port, INT_LED1_Pin);
	}

#endif
	int resVal = 0;
 80016a0:	2300      	movs	r3, #0
 80016a2:	603b      	str	r3, [r7, #0]
	while(1){
		io_update();
 80016a4:	f7ff ff6e 	bl	8001584 <io_update>
		g_PDI.dout = ~g_PDI.dout;
 80016a8:	4b04      	ldr	r3, [pc, #16]	; (80016bc <main+0x68>)
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	43db      	mvns	r3, r3
 80016ae:	4a03      	ldr	r2, [pc, #12]	; (80016bc <main+0x68>)
 80016b0:	6013      	str	r3, [r2, #0]
		io_update();
 80016b2:	e7f7      	b.n	80016a4 <main+0x50>
 80016b4:	20000564 	.word	0x20000564
 80016b8:	08005538 	.word	0x08005538
 80016bc:	20000554 	.word	0x20000554

080016c0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80016c0:	b580      	push	{r7, lr}
 80016c2:	b090      	sub	sp, #64	; 0x40
 80016c4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80016c6:	f107 0318 	add.w	r3, r7, #24
 80016ca:	2228      	movs	r2, #40	; 0x28
 80016cc:	2100      	movs	r1, #0
 80016ce:	4618      	mov	r0, r3
 80016d0:	f003 fab0 	bl	8004c34 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80016d4:	1d3b      	adds	r3, r7, #4
 80016d6:	2200      	movs	r2, #0
 80016d8:	601a      	str	r2, [r3, #0]
 80016da:	605a      	str	r2, [r3, #4]
 80016dc:	609a      	str	r2, [r3, #8]
 80016de:	60da      	str	r2, [r3, #12]
 80016e0:	611a      	str	r2, [r3, #16]

  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80016e2:	2301      	movs	r3, #1
 80016e4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80016e6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016ea:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80016ec:	2300      	movs	r3, #0
 80016ee:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80016f0:	2301      	movs	r3, #1
 80016f2:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016f4:	2302      	movs	r3, #2
 80016f6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016f8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016fc:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 80016fe:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001702:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001704:	f107 0318 	add.w	r3, r7, #24
 8001708:	4618      	mov	r0, r3
 800170a:	f001 ff63 	bl	80035d4 <HAL_RCC_OscConfig>
 800170e:	4603      	mov	r3, r0
 8001710:	2b00      	cmp	r3, #0
 8001712:	d001      	beq.n	8001718 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8001714:	f000 f842 	bl	800179c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001718:	230f      	movs	r3, #15
 800171a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800171c:	2302      	movs	r3, #2
 800171e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001720:	2300      	movs	r3, #0
 8001722:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001724:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001728:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800172a:	2300      	movs	r3, #0
 800172c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800172e:	1d3b      	adds	r3, r7, #4
 8001730:	2101      	movs	r1, #1
 8001732:	4618      	mov	r0, r3
 8001734:	f002 f9ce 	bl	8003ad4 <HAL_RCC_ClockConfig>
 8001738:	4603      	mov	r3, r0
 800173a:	2b00      	cmp	r3, #0
 800173c:	d001      	beq.n	8001742 <SystemClock_Config+0x82>
  {
    Error_Handler();
 800173e:	f000 f82d 	bl	800179c <Error_Handler>
  }
}
 8001742:	bf00      	nop
 8001744:	3740      	adds	r7, #64	; 0x40
 8001746:	46bd      	mov	sp, r7
 8001748:	bd80      	pop	{r7, pc}
	...

0800174c <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800174c:	b580      	push	{r7, lr}
 800174e:	b082      	sub	sp, #8
 8001750:	af00      	add	r7, sp, #0
 8001752:	4603      	mov	r3, r0
 8001754:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == STM_MODE_SEL_Pin){
 8001756:	88fb      	ldrh	r3, [r7, #6]
 8001758:	2b20      	cmp	r3, #32
 800175a:	d113      	bne.n	8001784 <HAL_GPIO_EXTI_Callback+0x38>
		if(HAL_GPIO_ReadPin(STM_MODE_SEL_GPIO_Port, STM_MODE_SEL_Pin)){
 800175c:	2120      	movs	r1, #32
 800175e:	480b      	ldr	r0, [pc, #44]	; (800178c <HAL_GPIO_EXTI_Callback+0x40>)
 8001760:	f001 fa96 	bl	8002c90 <HAL_GPIO_ReadPin>
 8001764:	4603      	mov	r3, r0
 8001766:	2b00      	cmp	r3, #0
 8001768:	d006      	beq.n	8001778 <HAL_GPIO_EXTI_Callback+0x2c>
			g_comms_mode = COMMS_MODE_PDIO;
 800176a:	4b09      	ldr	r3, [pc, #36]	; (8001790 <HAL_GPIO_EXTI_Callback+0x44>)
 800176c:	2200      	movs	r2, #0
 800176e:	701a      	strb	r2, [r3, #0]
			dbprintf("PDIO Mode");
 8001770:	4808      	ldr	r0, [pc, #32]	; (8001794 <HAL_GPIO_EXTI_Callback+0x48>)
 8001772:	f000 fb73 	bl	8001e5c <dbprintf>
		}else{
			g_comms_mode = COMMS_MODE_CONF;
			dbprintf("CONF Mode");
		}
	}
}
 8001776:	e005      	b.n	8001784 <HAL_GPIO_EXTI_Callback+0x38>
			g_comms_mode = COMMS_MODE_CONF;
 8001778:	4b05      	ldr	r3, [pc, #20]	; (8001790 <HAL_GPIO_EXTI_Callback+0x44>)
 800177a:	2201      	movs	r2, #1
 800177c:	701a      	strb	r2, [r3, #0]
			dbprintf("CONF Mode");
 800177e:	4806      	ldr	r0, [pc, #24]	; (8001798 <HAL_GPIO_EXTI_Callback+0x4c>)
 8001780:	f000 fb6c 	bl	8001e5c <dbprintf>
}
 8001784:	bf00      	nop
 8001786:	3708      	adds	r7, #8
 8001788:	46bd      	mov	sp, r7
 800178a:	bd80      	pop	{r7, pc}
 800178c:	40011000 	.word	0x40011000
 8001790:	200004e2 	.word	0x200004e2
 8001794:	08005554 	.word	0x08005554
 8001798:	08005560 	.word	0x08005560

0800179c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800179c:	b580      	push	{r7, lr}
 800179e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	dbprintf("%s",__func__);
 80017a0:	4902      	ldr	r1, [pc, #8]	; (80017ac <Error_Handler+0x10>)
 80017a2:	4803      	ldr	r0, [pc, #12]	; (80017b0 <Error_Handler+0x14>)
 80017a4:	f000 fb5a 	bl	8001e5c <dbprintf>
  /* USER CODE END Error_Handler_Debug */
}
 80017a8:	bf00      	nop
 80017aa:	bd80      	pop	{r7, pc}
 80017ac:	080062e4 	.word	0x080062e4
 80017b0:	0800556c 	.word	0x0800556c

080017b4 <MX_SPI1_Init>:
DMA_HandleTypeDef hdma_spi1_rx;
DMA_HandleTypeDef hdma_spi1_tx;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 80017b4:	b580      	push	{r7, lr}
 80017b6:	af00      	add	r7, sp, #0

  hspi1.Instance = SPI1;
 80017b8:	4b16      	ldr	r3, [pc, #88]	; (8001814 <MX_SPI1_Init+0x60>)
 80017ba:	4a17      	ldr	r2, [pc, #92]	; (8001818 <MX_SPI1_Init+0x64>)
 80017bc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_SLAVE;
 80017be:	4b15      	ldr	r3, [pc, #84]	; (8001814 <MX_SPI1_Init+0x60>)
 80017c0:	2200      	movs	r2, #0
 80017c2:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80017c4:	4b13      	ldr	r3, [pc, #76]	; (8001814 <MX_SPI1_Init+0x60>)
 80017c6:	2200      	movs	r2, #0
 80017c8:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80017ca:	4b12      	ldr	r3, [pc, #72]	; (8001814 <MX_SPI1_Init+0x60>)
 80017cc:	2200      	movs	r2, #0
 80017ce:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80017d0:	4b10      	ldr	r3, [pc, #64]	; (8001814 <MX_SPI1_Init+0x60>)
 80017d2:	2200      	movs	r2, #0
 80017d4:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80017d6:	4b0f      	ldr	r3, [pc, #60]	; (8001814 <MX_SPI1_Init+0x60>)
 80017d8:	2200      	movs	r2, #0
 80017da:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_HARD_INPUT;
 80017dc:	4b0d      	ldr	r3, [pc, #52]	; (8001814 <MX_SPI1_Init+0x60>)
 80017de:	2200      	movs	r2, #0
 80017e0:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 80017e2:	4b0c      	ldr	r3, [pc, #48]	; (8001814 <MX_SPI1_Init+0x60>)
 80017e4:	2208      	movs	r2, #8
 80017e6:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80017e8:	4b0a      	ldr	r3, [pc, #40]	; (8001814 <MX_SPI1_Init+0x60>)
 80017ea:	2200      	movs	r2, #0
 80017ec:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80017ee:	4b09      	ldr	r3, [pc, #36]	; (8001814 <MX_SPI1_Init+0x60>)
 80017f0:	2200      	movs	r2, #0
 80017f2:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80017f4:	4b07      	ldr	r3, [pc, #28]	; (8001814 <MX_SPI1_Init+0x60>)
 80017f6:	2200      	movs	r2, #0
 80017f8:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 80017fa:	4b06      	ldr	r3, [pc, #24]	; (8001814 <MX_SPI1_Init+0x60>)
 80017fc:	220a      	movs	r2, #10
 80017fe:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001800:	4804      	ldr	r0, [pc, #16]	; (8001814 <MX_SPI1_Init+0x60>)
 8001802:	f002 fb01 	bl	8003e08 <HAL_SPI_Init>
 8001806:	4603      	mov	r3, r0
 8001808:	2b00      	cmp	r3, #0
 800180a:	d001      	beq.n	8001810 <MX_SPI1_Init+0x5c>
  {
    Error_Handler();
 800180c:	f7ff ffc6 	bl	800179c <Error_Handler>
  }

}
 8001810:	bf00      	nop
 8001812:	bd80      	pop	{r7, pc}
 8001814:	20002b24 	.word	0x20002b24
 8001818:	40013000 	.word	0x40013000

0800181c <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 800181c:	b580      	push	{r7, lr}
 800181e:	af00      	add	r7, sp, #0

  hspi2.Instance = SPI2;
 8001820:	4b18      	ldr	r3, [pc, #96]	; (8001884 <MX_SPI2_Init+0x68>)
 8001822:	4a19      	ldr	r2, [pc, #100]	; (8001888 <MX_SPI2_Init+0x6c>)
 8001824:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001826:	4b17      	ldr	r3, [pc, #92]	; (8001884 <MX_SPI2_Init+0x68>)
 8001828:	f44f 7282 	mov.w	r2, #260	; 0x104
 800182c:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 800182e:	4b15      	ldr	r3, [pc, #84]	; (8001884 <MX_SPI2_Init+0x68>)
 8001830:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001834:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001836:	4b13      	ldr	r3, [pc, #76]	; (8001884 <MX_SPI2_Init+0x68>)
 8001838:	2200      	movs	r2, #0
 800183a:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 800183c:	4b11      	ldr	r3, [pc, #68]	; (8001884 <MX_SPI2_Init+0x68>)
 800183e:	2202      	movs	r2, #2
 8001840:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001842:	4b10      	ldr	r3, [pc, #64]	; (8001884 <MX_SPI2_Init+0x68>)
 8001844:	2200      	movs	r2, #0
 8001846:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001848:	4b0e      	ldr	r3, [pc, #56]	; (8001884 <MX_SPI2_Init+0x68>)
 800184a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800184e:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8001850:	4b0c      	ldr	r3, [pc, #48]	; (8001884 <MX_SPI2_Init+0x68>)
 8001852:	2220      	movs	r2, #32
 8001854:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001856:	4b0b      	ldr	r3, [pc, #44]	; (8001884 <MX_SPI2_Init+0x68>)
 8001858:	2200      	movs	r2, #0
 800185a:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800185c:	4b09      	ldr	r3, [pc, #36]	; (8001884 <MX_SPI2_Init+0x68>)
 800185e:	2200      	movs	r2, #0
 8001860:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001862:	4b08      	ldr	r3, [pc, #32]	; (8001884 <MX_SPI2_Init+0x68>)
 8001864:	2200      	movs	r2, #0
 8001866:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8001868:	4b06      	ldr	r3, [pc, #24]	; (8001884 <MX_SPI2_Init+0x68>)
 800186a:	220a      	movs	r2, #10
 800186c:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 800186e:	4805      	ldr	r0, [pc, #20]	; (8001884 <MX_SPI2_Init+0x68>)
 8001870:	f002 faca 	bl	8003e08 <HAL_SPI_Init>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d001      	beq.n	800187e <MX_SPI2_Init+0x62>
  {
    Error_Handler();
 800187a:	f7ff ff8f 	bl	800179c <Error_Handler>
  }

}
 800187e:	bf00      	nop
 8001880:	bd80      	pop	{r7, pc}
 8001882:	bf00      	nop
 8001884:	20002a74 	.word	0x20002a74
 8001888:	40003800 	.word	0x40003800

0800188c <MX_SPI3_Init>:
/* SPI3 init function */
void MX_SPI3_Init(void)
{
 800188c:	b580      	push	{r7, lr}
 800188e:	af00      	add	r7, sp, #0

  hspi3.Instance = SPI3;
 8001890:	4b17      	ldr	r3, [pc, #92]	; (80018f0 <MX_SPI3_Init+0x64>)
 8001892:	4a18      	ldr	r2, [pc, #96]	; (80018f4 <MX_SPI3_Init+0x68>)
 8001894:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8001896:	4b16      	ldr	r3, [pc, #88]	; (80018f0 <MX_SPI3_Init+0x64>)
 8001898:	f44f 7282 	mov.w	r2, #260	; 0x104
 800189c:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 800189e:	4b14      	ldr	r3, [pc, #80]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80018a4:	4b12      	ldr	r3, [pc, #72]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018a6:	2200      	movs	r2, #0
 80018a8:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80018aa:	4b11      	ldr	r3, [pc, #68]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018ac:	2200      	movs	r2, #0
 80018ae:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80018b0:	4b0f      	ldr	r3, [pc, #60]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80018b6:	4b0e      	ldr	r3, [pc, #56]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80018bc:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80018be:	4b0c      	ldr	r3, [pc, #48]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018c0:	2200      	movs	r2, #0
 80018c2:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80018c4:	4b0a      	ldr	r3, [pc, #40]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018c6:	2200      	movs	r2, #0
 80018c8:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 80018ca:	4b09      	ldr	r3, [pc, #36]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018cc:	2200      	movs	r2, #0
 80018ce:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80018d0:	4b07      	ldr	r3, [pc, #28]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018d2:	2200      	movs	r2, #0
 80018d4:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 80018d6:	4b06      	ldr	r3, [pc, #24]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018d8:	220a      	movs	r2, #10
 80018da:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80018dc:	4804      	ldr	r0, [pc, #16]	; (80018f0 <MX_SPI3_Init+0x64>)
 80018de:	f002 fa93 	bl	8003e08 <HAL_SPI_Init>
 80018e2:	4603      	mov	r3, r0
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d001      	beq.n	80018ec <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 80018e8:	f7ff ff58 	bl	800179c <Error_Handler>
  }

}
 80018ec:	bf00      	nop
 80018ee:	bd80      	pop	{r7, pc}
 80018f0:	20002acc 	.word	0x20002acc
 80018f4:	40003c00 	.word	0x40003c00

080018f8 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 80018f8:	b580      	push	{r7, lr}
 80018fa:	b08c      	sub	sp, #48	; 0x30
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001900:	f107 0320 	add.w	r3, r7, #32
 8001904:	2200      	movs	r2, #0
 8001906:	601a      	str	r2, [r3, #0]
 8001908:	605a      	str	r2, [r3, #4]
 800190a:	609a      	str	r2, [r3, #8]
 800190c:	60da      	str	r2, [r3, #12]
  if(spiHandle->Instance==SPI1)
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	4a7e      	ldr	r2, [pc, #504]	; (8001b0c <HAL_SPI_MspInit+0x214>)
 8001914:	4293      	cmp	r3, r2
 8001916:	f040 8087 	bne.w	8001a28 <HAL_SPI_MspInit+0x130>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800191a:	4b7d      	ldr	r3, [pc, #500]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 800191c:	699b      	ldr	r3, [r3, #24]
 800191e:	4a7c      	ldr	r2, [pc, #496]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001920:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001924:	6193      	str	r3, [r2, #24]
 8001926:	4b7a      	ldr	r3, [pc, #488]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001928:	699b      	ldr	r3, [r3, #24]
 800192a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800192e:	61fb      	str	r3, [r7, #28]
 8001930:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001932:	4b77      	ldr	r3, [pc, #476]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001934:	699b      	ldr	r3, [r3, #24]
 8001936:	4a76      	ldr	r2, [pc, #472]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001938:	f043 0304 	orr.w	r3, r3, #4
 800193c:	6193      	str	r3, [r2, #24]
 800193e:	4b74      	ldr	r3, [pc, #464]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001940:	699b      	ldr	r3, [r3, #24]
 8001942:	f003 0304 	and.w	r3, r3, #4
 8001946:	61bb      	str	r3, [r7, #24]
 8001948:	69bb      	ldr	r3, [r7, #24]
    PA4     ------> SPI1_NSS
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 800194a:	23b0      	movs	r3, #176	; 0xb0
 800194c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800194e:	2300      	movs	r3, #0
 8001950:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001952:	2300      	movs	r3, #0
 8001954:	62bb      	str	r3, [r7, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001956:	f107 0320 	add.w	r3, r7, #32
 800195a:	4619      	mov	r1, r3
 800195c:	486d      	ldr	r0, [pc, #436]	; (8001b14 <HAL_SPI_MspInit+0x21c>)
 800195e:	f001 f803 	bl	8002968 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001962:	2340      	movs	r3, #64	; 0x40
 8001964:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001966:	2302      	movs	r3, #2
 8001968:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800196a:	2303      	movs	r3, #3
 800196c:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800196e:	f107 0320 	add.w	r3, r7, #32
 8001972:	4619      	mov	r1, r3
 8001974:	4867      	ldr	r0, [pc, #412]	; (8001b14 <HAL_SPI_MspInit+0x21c>)
 8001976:	f000 fff7 	bl	8002968 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_RX Init */
    hdma_spi1_rx.Instance = DMA1_Channel2;
 800197a:	4b67      	ldr	r3, [pc, #412]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 800197c:	4a67      	ldr	r2, [pc, #412]	; (8001b1c <HAL_SPI_MspInit+0x224>)
 800197e:	601a      	str	r2, [r3, #0]
    hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001980:	4b65      	ldr	r3, [pc, #404]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 8001982:	2200      	movs	r2, #0
 8001984:	605a      	str	r2, [r3, #4]
    hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001986:	4b64      	ldr	r3, [pc, #400]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 8001988:	2200      	movs	r2, #0
 800198a:	609a      	str	r2, [r3, #8]
    hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800198c:	4b62      	ldr	r3, [pc, #392]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 800198e:	2280      	movs	r2, #128	; 0x80
 8001990:	60da      	str	r2, [r3, #12]
    hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001992:	4b61      	ldr	r3, [pc, #388]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 8001994:	2200      	movs	r2, #0
 8001996:	611a      	str	r2, [r3, #16]
    hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001998:	4b5f      	ldr	r3, [pc, #380]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 800199a:	2200      	movs	r2, #0
 800199c:	615a      	str	r2, [r3, #20]
    hdma_spi1_rx.Init.Mode = DMA_CIRCULAR;
 800199e:	4b5e      	ldr	r3, [pc, #376]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 80019a0:	2220      	movs	r2, #32
 80019a2:	619a      	str	r2, [r3, #24]
    hdma_spi1_rx.Init.Priority = DMA_PRIORITY_MEDIUM;
 80019a4:	4b5c      	ldr	r3, [pc, #368]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 80019a6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80019aa:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 80019ac:	485a      	ldr	r0, [pc, #360]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 80019ae:	f000 fc21 	bl	80021f4 <HAL_DMA_Init>
 80019b2:	4603      	mov	r3, r0
 80019b4:	2b00      	cmp	r3, #0
 80019b6:	d001      	beq.n	80019bc <HAL_SPI_MspInit+0xc4>
    {
      Error_Handler();
 80019b8:	f7ff fef0 	bl	800179c <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmarx,hdma_spi1_rx);
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	4a56      	ldr	r2, [pc, #344]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 80019c0:	64da      	str	r2, [r3, #76]	; 0x4c
 80019c2:	4a55      	ldr	r2, [pc, #340]	; (8001b18 <HAL_SPI_MspInit+0x220>)
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	6253      	str	r3, [r2, #36]	; 0x24

    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA1_Channel3;
 80019c8:	4b55      	ldr	r3, [pc, #340]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019ca:	4a56      	ldr	r2, [pc, #344]	; (8001b24 <HAL_SPI_MspInit+0x22c>)
 80019cc:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80019ce:	4b54      	ldr	r3, [pc, #336]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019d0:	2210      	movs	r2, #16
 80019d2:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80019d4:	4b52      	ldr	r3, [pc, #328]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019d6:	2200      	movs	r2, #0
 80019d8:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80019da:	4b51      	ldr	r3, [pc, #324]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019dc:	2280      	movs	r2, #128	; 0x80
 80019de:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80019e0:	4b4f      	ldr	r3, [pc, #316]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019e2:	2200      	movs	r2, #0
 80019e4:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80019e6:	4b4e      	ldr	r3, [pc, #312]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019e8:	2200      	movs	r2, #0
 80019ea:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.Mode = DMA_CIRCULAR;
 80019ec:	4b4c      	ldr	r3, [pc, #304]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019ee:	2220      	movs	r2, #32
 80019f0:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80019f2:	4b4b      	ldr	r3, [pc, #300]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019f4:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 80019f8:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 80019fa:	4849      	ldr	r0, [pc, #292]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 80019fc:	f000 fbfa 	bl	80021f4 <HAL_DMA_Init>
 8001a00:	4603      	mov	r3, r0
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d001      	beq.n	8001a0a <HAL_SPI_MspInit+0x112>
    {
      Error_Handler();
 8001a06:	f7ff fec9 	bl	800179c <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi1_tx);
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	4a44      	ldr	r2, [pc, #272]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 8001a0e:	649a      	str	r2, [r3, #72]	; 0x48
 8001a10:	4a43      	ldr	r2, [pc, #268]	; (8001b20 <HAL_SPI_MspInit+0x228>)
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	6253      	str	r3, [r2, #36]	; 0x24

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8001a16:	2200      	movs	r2, #0
 8001a18:	2100      	movs	r1, #0
 8001a1a:	2023      	movs	r0, #35	; 0x23
 8001a1c:	f000 fbb3 	bl	8002186 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8001a20:	2023      	movs	r0, #35	; 0x23
 8001a22:	f000 fbcc 	bl	80021be <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }
}
 8001a26:	e06c      	b.n	8001b02 <HAL_SPI_MspInit+0x20a>
  else if(spiHandle->Instance==SPI2)
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	4a3e      	ldr	r2, [pc, #248]	; (8001b28 <HAL_SPI_MspInit+0x230>)
 8001a2e:	4293      	cmp	r3, r2
 8001a30:	d132      	bne.n	8001a98 <HAL_SPI_MspInit+0x1a0>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001a32:	4b37      	ldr	r3, [pc, #220]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001a34:	69db      	ldr	r3, [r3, #28]
 8001a36:	4a36      	ldr	r2, [pc, #216]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001a38:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001a3c:	61d3      	str	r3, [r2, #28]
 8001a3e:	4b34      	ldr	r3, [pc, #208]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001a40:	69db      	ldr	r3, [r3, #28]
 8001a42:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001a46:	617b      	str	r3, [r7, #20]
 8001a48:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a4a:	4b31      	ldr	r3, [pc, #196]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001a4c:	699b      	ldr	r3, [r3, #24]
 8001a4e:	4a30      	ldr	r2, [pc, #192]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001a50:	f043 0308 	orr.w	r3, r3, #8
 8001a54:	6193      	str	r3, [r2, #24]
 8001a56:	4b2e      	ldr	r3, [pc, #184]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001a58:	699b      	ldr	r3, [r3, #24]
 8001a5a:	f003 0308 	and.w	r3, r3, #8
 8001a5e:	613b      	str	r3, [r7, #16]
 8001a60:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001a62:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001a66:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a68:	2302      	movs	r3, #2
 8001a6a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a6c:	2303      	movs	r3, #3
 8001a6e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a70:	f107 0320 	add.w	r3, r7, #32
 8001a74:	4619      	mov	r1, r3
 8001a76:	482d      	ldr	r0, [pc, #180]	; (8001b2c <HAL_SPI_MspInit+0x234>)
 8001a78:	f000 ff76 	bl	8002968 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_14;
 8001a7c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001a80:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001a82:	2300      	movs	r3, #0
 8001a84:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a86:	2300      	movs	r3, #0
 8001a88:	62bb      	str	r3, [r7, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a8a:	f107 0320 	add.w	r3, r7, #32
 8001a8e:	4619      	mov	r1, r3
 8001a90:	4826      	ldr	r0, [pc, #152]	; (8001b2c <HAL_SPI_MspInit+0x234>)
 8001a92:	f000 ff69 	bl	8002968 <HAL_GPIO_Init>
}
 8001a96:	e034      	b.n	8001b02 <HAL_SPI_MspInit+0x20a>
  else if(spiHandle->Instance==SPI3)
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	4a24      	ldr	r2, [pc, #144]	; (8001b30 <HAL_SPI_MspInit+0x238>)
 8001a9e:	4293      	cmp	r3, r2
 8001aa0:	d12f      	bne.n	8001b02 <HAL_SPI_MspInit+0x20a>
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001aa2:	4b1b      	ldr	r3, [pc, #108]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001aa4:	69db      	ldr	r3, [r3, #28]
 8001aa6:	4a1a      	ldr	r2, [pc, #104]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001aa8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001aac:	61d3      	str	r3, [r2, #28]
 8001aae:	4b18      	ldr	r3, [pc, #96]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001ab0:	69db      	ldr	r3, [r3, #28]
 8001ab2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001ab6:	60fb      	str	r3, [r7, #12]
 8001ab8:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001aba:	4b15      	ldr	r3, [pc, #84]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001abc:	699b      	ldr	r3, [r3, #24]
 8001abe:	4a14      	ldr	r2, [pc, #80]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001ac0:	f043 0308 	orr.w	r3, r3, #8
 8001ac4:	6193      	str	r3, [r2, #24]
 8001ac6:	4b12      	ldr	r3, [pc, #72]	; (8001b10 <HAL_SPI_MspInit+0x218>)
 8001ac8:	699b      	ldr	r3, [r3, #24]
 8001aca:	f003 0308 	and.w	r3, r3, #8
 8001ace:	60bb      	str	r3, [r7, #8]
 8001ad0:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_5;
 8001ad2:	2328      	movs	r3, #40	; 0x28
 8001ad4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ad6:	2302      	movs	r3, #2
 8001ad8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ada:	2303      	movs	r3, #3
 8001adc:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ade:	f107 0320 	add.w	r3, r7, #32
 8001ae2:	4619      	mov	r1, r3
 8001ae4:	4811      	ldr	r0, [pc, #68]	; (8001b2c <HAL_SPI_MspInit+0x234>)
 8001ae6:	f000 ff3f 	bl	8002968 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001aea:	2310      	movs	r3, #16
 8001aec:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001aee:	2300      	movs	r3, #0
 8001af0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001af2:	2300      	movs	r3, #0
 8001af4:	62bb      	str	r3, [r7, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001af6:	f107 0320 	add.w	r3, r7, #32
 8001afa:	4619      	mov	r1, r3
 8001afc:	480b      	ldr	r0, [pc, #44]	; (8001b2c <HAL_SPI_MspInit+0x234>)
 8001afe:	f000 ff33 	bl	8002968 <HAL_GPIO_Init>
}
 8001b02:	bf00      	nop
 8001b04:	3730      	adds	r7, #48	; 0x30
 8001b06:	46bd      	mov	sp, r7
 8001b08:	bd80      	pop	{r7, pc}
 8001b0a:	bf00      	nop
 8001b0c:	40013000 	.word	0x40013000
 8001b10:	40021000 	.word	0x40021000
 8001b14:	40010800 	.word	0x40010800
 8001b18:	20002b7c 	.word	0x20002b7c
 8001b1c:	4002001c 	.word	0x4002001c
 8001b20:	20002bc0 	.word	0x20002bc0
 8001b24:	40020030 	.word	0x40020030
 8001b28:	40003800 	.word	0x40003800
 8001b2c:	40010c00 	.word	0x40010c00
 8001b30:	40003c00 	.word	0x40003c00

08001b34 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b34:	b480      	push	{r7}
 8001b36:	b085      	sub	sp, #20
 8001b38:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001b3a:	4b15      	ldr	r3, [pc, #84]	; (8001b90 <HAL_MspInit+0x5c>)
 8001b3c:	699b      	ldr	r3, [r3, #24]
 8001b3e:	4a14      	ldr	r2, [pc, #80]	; (8001b90 <HAL_MspInit+0x5c>)
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	6193      	str	r3, [r2, #24]
 8001b46:	4b12      	ldr	r3, [pc, #72]	; (8001b90 <HAL_MspInit+0x5c>)
 8001b48:	699b      	ldr	r3, [r3, #24]
 8001b4a:	f003 0301 	and.w	r3, r3, #1
 8001b4e:	60bb      	str	r3, [r7, #8]
 8001b50:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b52:	4b0f      	ldr	r3, [pc, #60]	; (8001b90 <HAL_MspInit+0x5c>)
 8001b54:	69db      	ldr	r3, [r3, #28]
 8001b56:	4a0e      	ldr	r2, [pc, #56]	; (8001b90 <HAL_MspInit+0x5c>)
 8001b58:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001b5c:	61d3      	str	r3, [r2, #28]
 8001b5e:	4b0c      	ldr	r3, [pc, #48]	; (8001b90 <HAL_MspInit+0x5c>)
 8001b60:	69db      	ldr	r3, [r3, #28]
 8001b62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b66:	607b      	str	r3, [r7, #4]
 8001b68:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8001b6a:	4b0a      	ldr	r3, [pc, #40]	; (8001b94 <HAL_MspInit+0x60>)
 8001b6c:	685b      	ldr	r3, [r3, #4]
 8001b6e:	60fb      	str	r3, [r7, #12]
 8001b70:	68fb      	ldr	r3, [r7, #12]
 8001b72:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001b76:	60fb      	str	r3, [r7, #12]
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001b7e:	60fb      	str	r3, [r7, #12]
 8001b80:	4a04      	ldr	r2, [pc, #16]	; (8001b94 <HAL_MspInit+0x60>)
 8001b82:	68fb      	ldr	r3, [r7, #12]
 8001b84:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b86:	bf00      	nop
 8001b88:	3714      	adds	r7, #20
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	bc80      	pop	{r7}
 8001b8e:	4770      	bx	lr
 8001b90:	40021000 	.word	0x40021000
 8001b94:	40010000 	.word	0x40010000

08001b98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001b98:	b480      	push	{r7}
 8001b9a:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001b9c:	bf00      	nop
 8001b9e:	46bd      	mov	sp, r7
 8001ba0:	bc80      	pop	{r7}
 8001ba2:	4770      	bx	lr

08001ba4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001ba4:	b580      	push	{r7, lr}
 8001ba6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */
	dbprintf("%s",__func__);
 8001ba8:	4902      	ldr	r1, [pc, #8]	; (8001bb4 <HardFault_Handler+0x10>)
 8001baa:	4803      	ldr	r0, [pc, #12]	; (8001bb8 <HardFault_Handler+0x14>)
 8001bac:	f000 f956 	bl	8001e5c <dbprintf>
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001bb0:	e7fe      	b.n	8001bb0 <HardFault_Handler+0xc>
 8001bb2:	bf00      	nop
 8001bb4:	080062f4 	.word	0x080062f4
 8001bb8:	08005570 	.word	0x08005570

08001bbc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001bbc:	b480      	push	{r7}
 8001bbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001bc0:	e7fe      	b.n	8001bc0 <MemManage_Handler+0x4>

08001bc2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001bc2:	b480      	push	{r7}
 8001bc4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001bc6:	e7fe      	b.n	8001bc6 <BusFault_Handler+0x4>

08001bc8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001bc8:	b480      	push	{r7}
 8001bca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001bcc:	e7fe      	b.n	8001bcc <UsageFault_Handler+0x4>

08001bce <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001bce:	b480      	push	{r7}
 8001bd0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001bd2:	bf00      	nop
 8001bd4:	46bd      	mov	sp, r7
 8001bd6:	bc80      	pop	{r7}
 8001bd8:	4770      	bx	lr

08001bda <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001bda:	b480      	push	{r7}
 8001bdc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001bde:	bf00      	nop
 8001be0:	46bd      	mov	sp, r7
 8001be2:	bc80      	pop	{r7}
 8001be4:	4770      	bx	lr

08001be6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001be6:	b480      	push	{r7}
 8001be8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001bea:	bf00      	nop
 8001bec:	46bd      	mov	sp, r7
 8001bee:	bc80      	pop	{r7}
 8001bf0:	4770      	bx	lr

08001bf2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001bf2:	b580      	push	{r7, lr}
 8001bf4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001bf6:	f000 f9af 	bl	8001f58 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001bfa:	bf00      	nop
 8001bfc:	bd80      	pop	{r7, pc}
	...

08001c00 <DMA1_Channel2_IRQHandler>:

/**
  * @brief This function handles DMA1 channel2 global interrupt.
  */
void DMA1_Channel2_IRQHandler(void)
{
 8001c00:	b580      	push	{r7, lr}
 8001c02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_rx);
 8001c04:	4802      	ldr	r0, [pc, #8]	; (8001c10 <DMA1_Channel2_IRQHandler+0x10>)
 8001c06:	f000 fc73 	bl	80024f0 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */

  /* USER CODE END DMA1_Channel2_IRQn 1 */
}
 8001c0a:	bf00      	nop
 8001c0c:	bd80      	pop	{r7, pc}
 8001c0e:	bf00      	nop
 8001c10:	20002b7c 	.word	0x20002b7c

08001c14 <DMA1_Channel3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel3 global interrupt.
  */
void DMA1_Channel3_IRQHandler(void)
{
 8001c14:	b580      	push	{r7, lr}
 8001c16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */

  /* USER CODE END DMA1_Channel3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8001c18:	4802      	ldr	r0, [pc, #8]	; (8001c24 <DMA1_Channel3_IRQHandler+0x10>)
 8001c1a:	f000 fc69 	bl	80024f0 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */

  /* USER CODE END DMA1_Channel3_IRQn 1 */
}
 8001c1e:	bf00      	nop
 8001c20:	bd80      	pop	{r7, pc}
 8001c22:	bf00      	nop
 8001c24:	20002bc0 	.word	0x20002bc0

08001c28 <DMA1_Channel4_IRQHandler>:

/**
  * @brief This function handles DMA1 channel4 global interrupt.
  */
void DMA1_Channel4_IRQHandler(void)
{
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */

  /* USER CODE END DMA1_Channel4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 8001c2c:	4802      	ldr	r0, [pc, #8]	; (8001c38 <DMA1_Channel4_IRQHandler+0x10>)
 8001c2e:	f000 fc5f 	bl	80024f0 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */

  /* USER CODE END DMA1_Channel4_IRQn 1 */
}
 8001c32:	bf00      	nop
 8001c34:	bd80      	pop	{r7, pc}
 8001c36:	bf00      	nop
 8001c38:	20002c04 	.word	0x20002c04

08001c3c <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001c3c:	b580      	push	{r7, lr}
 8001c3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 8001c40:	2020      	movs	r0, #32
 8001c42:	f001 f855 	bl	8002cf0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001c46:	bf00      	nop
 8001c48:	bd80      	pop	{r7, pc}
	...

08001c4c <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8001c4c:	b580      	push	{r7, lr}
 8001c4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8001c50:	4802      	ldr	r0, [pc, #8]	; (8001c5c <SPI1_IRQHandler+0x10>)
 8001c52:	f002 fc3b 	bl	80044cc <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */
	//dbprintf("%s",__func__);
  /* USER CODE END SPI1_IRQn 1 */
}
 8001c56:	bf00      	nop
 8001c58:	bd80      	pop	{r7, pc}
 8001c5a:	bf00      	nop
 8001c5c:	20002b24 	.word	0x20002b24

08001c60 <_sbrk>:
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b084      	sub	sp, #16
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	6078      	str	r0, [r7, #4]
 8001c68:	4b11      	ldr	r3, [pc, #68]	; (8001cb0 <_sbrk+0x50>)
 8001c6a:	681b      	ldr	r3, [r3, #0]
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d102      	bne.n	8001c76 <_sbrk+0x16>
 8001c70:	4b0f      	ldr	r3, [pc, #60]	; (8001cb0 <_sbrk+0x50>)
 8001c72:	4a10      	ldr	r2, [pc, #64]	; (8001cb4 <_sbrk+0x54>)
 8001c74:	601a      	str	r2, [r3, #0]
 8001c76:	4b0e      	ldr	r3, [pc, #56]	; (8001cb0 <_sbrk+0x50>)
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	60fb      	str	r3, [r7, #12]
 8001c7c:	4b0c      	ldr	r3, [pc, #48]	; (8001cb0 <_sbrk+0x50>)
 8001c7e:	681a      	ldr	r2, [r3, #0]
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	4413      	add	r3, r2
 8001c84:	466a      	mov	r2, sp
 8001c86:	4293      	cmp	r3, r2
 8001c88:	d907      	bls.n	8001c9a <_sbrk+0x3a>
 8001c8a:	f002 ff81 	bl	8004b90 <__errno>
 8001c8e:	4603      	mov	r3, r0
 8001c90:	220c      	movs	r2, #12
 8001c92:	601a      	str	r2, [r3, #0]
 8001c94:	f04f 33ff 	mov.w	r3, #4294967295
 8001c98:	e006      	b.n	8001ca8 <_sbrk+0x48>
 8001c9a:	4b05      	ldr	r3, [pc, #20]	; (8001cb0 <_sbrk+0x50>)
 8001c9c:	681a      	ldr	r2, [r3, #0]
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	4413      	add	r3, r2
 8001ca2:	4a03      	ldr	r2, [pc, #12]	; (8001cb0 <_sbrk+0x50>)
 8001ca4:	6013      	str	r3, [r2, #0]
 8001ca6:	68fb      	ldr	r3, [r7, #12]
 8001ca8:	4618      	mov	r0, r3
 8001caa:	3710      	adds	r7, #16
 8001cac:	46bd      	mov	sp, r7
 8001cae:	bd80      	pop	{r7, pc}
 8001cb0:	200004e4 	.word	0x200004e4
 8001cb4:	20002ca0 	.word	0x20002ca0

08001cb8 <SystemInit>:
 8001cb8:	b480      	push	{r7}
 8001cba:	af00      	add	r7, sp, #0
 8001cbc:	bf00      	nop
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	bc80      	pop	{r7}
 8001cc2:	4770      	bx	lr

08001cc4 <MX_USART1_UART_Init>:
DMA_HandleTypeDef hdma_usart1_tx;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8001cc4:	b580      	push	{r7, lr}
 8001cc6:	af00      	add	r7, sp, #0

  huart1.Instance = USART1;
 8001cc8:	4b11      	ldr	r3, [pc, #68]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cca:	4a12      	ldr	r2, [pc, #72]	; (8001d14 <MX_USART1_UART_Init+0x50>)
 8001ccc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 921600;
 8001cce:	4b10      	ldr	r3, [pc, #64]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cd0:	f44f 2261 	mov.w	r2, #921600	; 0xe1000
 8001cd4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001cd6:	4b0e      	ldr	r3, [pc, #56]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cd8:	2200      	movs	r2, #0
 8001cda:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001cdc:	4b0c      	ldr	r3, [pc, #48]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cde:	2200      	movs	r2, #0
 8001ce0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001ce2:	4b0b      	ldr	r3, [pc, #44]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001ce8:	4b09      	ldr	r3, [pc, #36]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cea:	220c      	movs	r2, #12
 8001cec:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001cee:	4b08      	ldr	r3, [pc, #32]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cf0:	2200      	movs	r2, #0
 8001cf2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001cf4:	4b06      	ldr	r3, [pc, #24]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cf6:	2200      	movs	r2, #0
 8001cf8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001cfa:	4805      	ldr	r0, [pc, #20]	; (8001d10 <MX_USART1_UART_Init+0x4c>)
 8001cfc:	f002 fd90 	bl	8004820 <HAL_UART_Init>
 8001d00:	4603      	mov	r3, r0
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d001      	beq.n	8001d0a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001d06:	f7ff fd49 	bl	800179c <Error_Handler>
  }

}
 8001d0a:	bf00      	nop
 8001d0c:	bd80      	pop	{r7, pc}
 8001d0e:	bf00      	nop
 8001d10:	20002c48 	.word	0x20002c48
 8001d14:	40013800 	.word	0x40013800

08001d18 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001d18:	b580      	push	{r7, lr}
 8001d1a:	b088      	sub	sp, #32
 8001d1c:	af00      	add	r7, sp, #0
 8001d1e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d20:	f107 0310 	add.w	r3, r7, #16
 8001d24:	2200      	movs	r2, #0
 8001d26:	601a      	str	r2, [r3, #0]
 8001d28:	605a      	str	r2, [r3, #4]
 8001d2a:	609a      	str	r2, [r3, #8]
 8001d2c:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART1)
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	4a2f      	ldr	r2, [pc, #188]	; (8001df0 <HAL_UART_MspInit+0xd8>)
 8001d34:	4293      	cmp	r3, r2
 8001d36:	d157      	bne.n	8001de8 <HAL_UART_MspInit+0xd0>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001d38:	4b2e      	ldr	r3, [pc, #184]	; (8001df4 <HAL_UART_MspInit+0xdc>)
 8001d3a:	699b      	ldr	r3, [r3, #24]
 8001d3c:	4a2d      	ldr	r2, [pc, #180]	; (8001df4 <HAL_UART_MspInit+0xdc>)
 8001d3e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001d42:	6193      	str	r3, [r2, #24]
 8001d44:	4b2b      	ldr	r3, [pc, #172]	; (8001df4 <HAL_UART_MspInit+0xdc>)
 8001d46:	699b      	ldr	r3, [r3, #24]
 8001d48:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001d4c:	60fb      	str	r3, [r7, #12]
 8001d4e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d50:	4b28      	ldr	r3, [pc, #160]	; (8001df4 <HAL_UART_MspInit+0xdc>)
 8001d52:	699b      	ldr	r3, [r3, #24]
 8001d54:	4a27      	ldr	r2, [pc, #156]	; (8001df4 <HAL_UART_MspInit+0xdc>)
 8001d56:	f043 0304 	orr.w	r3, r3, #4
 8001d5a:	6193      	str	r3, [r2, #24]
 8001d5c:	4b25      	ldr	r3, [pc, #148]	; (8001df4 <HAL_UART_MspInit+0xdc>)
 8001d5e:	699b      	ldr	r3, [r3, #24]
 8001d60:	f003 0304 	and.w	r3, r3, #4
 8001d64:	60bb      	str	r3, [r7, #8]
 8001d66:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = DBG_TX_Pin;
 8001d68:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001d6c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6e:	2302      	movs	r3, #2
 8001d70:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d72:	2303      	movs	r3, #3
 8001d74:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DBG_TX_GPIO_Port, &GPIO_InitStruct);
 8001d76:	f107 0310 	add.w	r3, r7, #16
 8001d7a:	4619      	mov	r1, r3
 8001d7c:	481e      	ldr	r0, [pc, #120]	; (8001df8 <HAL_UART_MspInit+0xe0>)
 8001d7e:	f000 fdf3 	bl	8002968 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DBG_RX_Pin;
 8001d82:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001d86:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001d88:	2300      	movs	r3, #0
 8001d8a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(DBG_RX_GPIO_Port, &GPIO_InitStruct);
 8001d90:	f107 0310 	add.w	r3, r7, #16
 8001d94:	4619      	mov	r1, r3
 8001d96:	4818      	ldr	r0, [pc, #96]	; (8001df8 <HAL_UART_MspInit+0xe0>)
 8001d98:	f000 fde6 	bl	8002968 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA1_Channel4;
 8001d9c:	4b17      	ldr	r3, [pc, #92]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001d9e:	4a18      	ldr	r2, [pc, #96]	; (8001e00 <HAL_UART_MspInit+0xe8>)
 8001da0:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001da2:	4b16      	ldr	r3, [pc, #88]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001da4:	2210      	movs	r2, #16
 8001da6:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001da8:	4b14      	ldr	r3, [pc, #80]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001daa:	2200      	movs	r2, #0
 8001dac:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001dae:	4b13      	ldr	r3, [pc, #76]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001db0:	2280      	movs	r2, #128	; 0x80
 8001db2:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001db4:	4b11      	ldr	r3, [pc, #68]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001db6:	2200      	movs	r2, #0
 8001db8:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001dba:	4b10      	ldr	r3, [pc, #64]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001dbc:	2200      	movs	r2, #0
 8001dbe:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 8001dc0:	4b0e      	ldr	r3, [pc, #56]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001dc2:	2200      	movs	r2, #0
 8001dc4:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001dc6:	4b0d      	ldr	r3, [pc, #52]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001dc8:	2200      	movs	r2, #0
 8001dca:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 8001dcc:	480b      	ldr	r0, [pc, #44]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001dce:	f000 fa11 	bl	80021f4 <HAL_DMA_Init>
 8001dd2:	4603      	mov	r3, r0
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d001      	beq.n	8001ddc <HAL_UART_MspInit+0xc4>
    {
      Error_Handler();
 8001dd8:	f7ff fce0 	bl	800179c <Error_Handler>
    }

    __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	4a07      	ldr	r2, [pc, #28]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001de0:	631a      	str	r2, [r3, #48]	; 0x30
 8001de2:	4a06      	ldr	r2, [pc, #24]	; (8001dfc <HAL_UART_MspInit+0xe4>)
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	6253      	str	r3, [r2, #36]	; 0x24

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8001de8:	bf00      	nop
 8001dea:	3720      	adds	r7, #32
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bd80      	pop	{r7, pc}
 8001df0:	40013800 	.word	0x40013800
 8001df4:	40021000 	.word	0x40021000
 8001df8:	40010800 	.word	0x40010800
 8001dfc:	20002c04 	.word	0x20002c04
 8001e00:	40020044 	.word	0x40020044

08001e04 <vprintln>:
        HAL_UART_Transmit(&huart1, (uint8_t*)string, strlen(string), 0xffffff); // send message via UART
    }
}

void vprintln(const char *fmt, va_list argp)
{
 8001e04:	b580      	push	{r7, lr}
 8001e06:	b0b4      	sub	sp, #208	; 0xd0
 8001e08:	af00      	add	r7, sp, #0
 8001e0a:	6078      	str	r0, [r7, #4]
 8001e0c:	6039      	str	r1, [r7, #0]
    char string[200];
    if(0 < vsprintf(string,fmt,argp)) // build string
 8001e0e:	f107 0308 	add.w	r3, r7, #8
 8001e12:	683a      	ldr	r2, [r7, #0]
 8001e14:	6879      	ldr	r1, [r7, #4]
 8001e16:	4618      	mov	r0, r3
 8001e18:	f002 ff5e 	bl	8004cd8 <vsiprintf>
 8001e1c:	4603      	mov	r3, r0
 8001e1e:	2b00      	cmp	r3, #0
 8001e20:	dd14      	ble.n	8001e4c <vprintln+0x48>
    {
        HAL_UART_Transmit(&huart1, (uint8_t*)string, strlen(string), 0xffffff); // send message via UART
 8001e22:	f107 0308 	add.w	r3, r7, #8
 8001e26:	4618      	mov	r0, r3
 8001e28:	f7fe f9fc 	bl	8000224 <strlen>
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	b29a      	uxth	r2, r3
 8001e30:	f107 0108 	add.w	r1, r7, #8
 8001e34:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
 8001e38:	4806      	ldr	r0, [pc, #24]	; (8001e54 <vprintln+0x50>)
 8001e3a:	f002 fd3e 	bl	80048ba <HAL_UART_Transmit>
        HAL_UART_Transmit(&huart1, (uint8_t*)"\n\r",2, 0xffffff);
 8001e3e:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
 8001e42:	2202      	movs	r2, #2
 8001e44:	4904      	ldr	r1, [pc, #16]	; (8001e58 <vprintln+0x54>)
 8001e46:	4803      	ldr	r0, [pc, #12]	; (8001e54 <vprintln+0x50>)
 8001e48:	f002 fd37 	bl	80048ba <HAL_UART_Transmit>
    }
}
 8001e4c:	bf00      	nop
 8001e4e:	37d0      	adds	r7, #208	; 0xd0
 8001e50:	46bd      	mov	sp, r7
 8001e52:	bd80      	pop	{r7, pc}
 8001e54:	20002c48 	.word	0x20002c48
 8001e58:	08005574 	.word	0x08005574

08001e5c <dbprintf>:

void dbprintf(const char *fmt, ...)
{
 8001e5c:	b40f      	push	{r0, r1, r2, r3}
 8001e5e:	b580      	push	{r7, lr}
 8001e60:	b082      	sub	sp, #8
 8001e62:	af00      	add	r7, sp, #0
    va_list argp;
    va_start(argp, fmt);
 8001e64:	f107 0314 	add.w	r3, r7, #20
 8001e68:	607b      	str	r3, [r7, #4]
    vprintln((const char *)fmt, argp);
 8001e6a:	6879      	ldr	r1, [r7, #4]
 8001e6c:	6938      	ldr	r0, [r7, #16]
 8001e6e:	f7ff ffc9 	bl	8001e04 <vprintln>
    va_end(argp);
}
 8001e72:	bf00      	nop
 8001e74:	3708      	adds	r7, #8
 8001e76:	46bd      	mov	sp, r7
 8001e78:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8001e7c:	b004      	add	sp, #16
 8001e7e:	4770      	bx	lr

08001e80 <Reset_Handler>:
 8001e80:	2100      	movs	r1, #0
 8001e82:	e003      	b.n	8001e8c <LoopCopyDataInit>

08001e84 <CopyDataInit>:
 8001e84:	4b0b      	ldr	r3, [pc, #44]	; (8001eb4 <LoopFillZerobss+0x14>)
 8001e86:	585b      	ldr	r3, [r3, r1]
 8001e88:	5043      	str	r3, [r0, r1]
 8001e8a:	3104      	adds	r1, #4

08001e8c <LoopCopyDataInit>:
 8001e8c:	480a      	ldr	r0, [pc, #40]	; (8001eb8 <LoopFillZerobss+0x18>)
 8001e8e:	4b0b      	ldr	r3, [pc, #44]	; (8001ebc <LoopFillZerobss+0x1c>)
 8001e90:	1842      	adds	r2, r0, r1
 8001e92:	429a      	cmp	r2, r3
 8001e94:	d3f6      	bcc.n	8001e84 <CopyDataInit>
 8001e96:	4a0a      	ldr	r2, [pc, #40]	; (8001ec0 <LoopFillZerobss+0x20>)
 8001e98:	e002      	b.n	8001ea0 <LoopFillZerobss>

08001e9a <FillZerobss>:
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	f842 3b04 	str.w	r3, [r2], #4

08001ea0 <LoopFillZerobss>:
 8001ea0:	4b08      	ldr	r3, [pc, #32]	; (8001ec4 <LoopFillZerobss+0x24>)
 8001ea2:	429a      	cmp	r2, r3
 8001ea4:	d3f9      	bcc.n	8001e9a <FillZerobss>
 8001ea6:	f7ff ff07 	bl	8001cb8 <SystemInit>
 8001eaa:	f002 fe77 	bl	8004b9c <__libc_init_array>
 8001eae:	f7ff fbd1 	bl	8001654 <main>
 8001eb2:	4770      	bx	lr
 8001eb4:	0800635c 	.word	0x0800635c
 8001eb8:	20000000 	.word	0x20000000
 8001ebc:	200000c0 	.word	0x200000c0
 8001ec0:	200000c0 	.word	0x200000c0
 8001ec4:	20002c9c 	.word	0x20002c9c

08001ec8 <ADC1_2_IRQHandler>:
 8001ec8:	e7fe      	b.n	8001ec8 <ADC1_2_IRQHandler>
	...

08001ecc <HAL_Init>:
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	af00      	add	r7, sp, #0
 8001ed0:	4b08      	ldr	r3, [pc, #32]	; (8001ef4 <HAL_Init+0x28>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	4a07      	ldr	r2, [pc, #28]	; (8001ef4 <HAL_Init+0x28>)
 8001ed6:	f043 0310 	orr.w	r3, r3, #16
 8001eda:	6013      	str	r3, [r2, #0]
 8001edc:	2003      	movs	r0, #3
 8001ede:	f000 f947 	bl	8002170 <HAL_NVIC_SetPriorityGrouping>
 8001ee2:	2000      	movs	r0, #0
 8001ee4:	f000 f808 	bl	8001ef8 <HAL_InitTick>
 8001ee8:	f7ff fe24 	bl	8001b34 <HAL_MspInit>
 8001eec:	2300      	movs	r3, #0
 8001eee:	4618      	mov	r0, r3
 8001ef0:	bd80      	pop	{r7, pc}
 8001ef2:	bf00      	nop
 8001ef4:	40022000 	.word	0x40022000

08001ef8 <HAL_InitTick>:
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b082      	sub	sp, #8
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	6078      	str	r0, [r7, #4]
 8001f00:	4b12      	ldr	r3, [pc, #72]	; (8001f4c <HAL_InitTick+0x54>)
 8001f02:	681a      	ldr	r2, [r3, #0]
 8001f04:	4b12      	ldr	r3, [pc, #72]	; (8001f50 <HAL_InitTick+0x58>)
 8001f06:	781b      	ldrb	r3, [r3, #0]
 8001f08:	4619      	mov	r1, r3
 8001f0a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001f0e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001f12:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f16:	4618      	mov	r0, r3
 8001f18:	f000 f95f 	bl	80021da <HAL_SYSTICK_Config>
 8001f1c:	4603      	mov	r3, r0
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d001      	beq.n	8001f26 <HAL_InitTick+0x2e>
 8001f22:	2301      	movs	r3, #1
 8001f24:	e00e      	b.n	8001f44 <HAL_InitTick+0x4c>
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	2b0f      	cmp	r3, #15
 8001f2a:	d80a      	bhi.n	8001f42 <HAL_InitTick+0x4a>
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	6879      	ldr	r1, [r7, #4]
 8001f30:	f04f 30ff 	mov.w	r0, #4294967295
 8001f34:	f000 f927 	bl	8002186 <HAL_NVIC_SetPriority>
 8001f38:	4a06      	ldr	r2, [pc, #24]	; (8001f54 <HAL_InitTick+0x5c>)
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	6013      	str	r3, [r2, #0]
 8001f3e:	2300      	movs	r3, #0
 8001f40:	e000      	b.n	8001f44 <HAL_InitTick+0x4c>
 8001f42:	2301      	movs	r3, #1
 8001f44:	4618      	mov	r0, r3
 8001f46:	3708      	adds	r7, #8
 8001f48:	46bd      	mov	sp, r7
 8001f4a:	bd80      	pop	{r7, pc}
 8001f4c:	20000050 	.word	0x20000050
 8001f50:	20000058 	.word	0x20000058
 8001f54:	20000054 	.word	0x20000054

08001f58 <HAL_IncTick>:
 8001f58:	b480      	push	{r7}
 8001f5a:	af00      	add	r7, sp, #0
 8001f5c:	4b05      	ldr	r3, [pc, #20]	; (8001f74 <HAL_IncTick+0x1c>)
 8001f5e:	781b      	ldrb	r3, [r3, #0]
 8001f60:	461a      	mov	r2, r3
 8001f62:	4b05      	ldr	r3, [pc, #20]	; (8001f78 <HAL_IncTick+0x20>)
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	4413      	add	r3, r2
 8001f68:	4a03      	ldr	r2, [pc, #12]	; (8001f78 <HAL_IncTick+0x20>)
 8001f6a:	6013      	str	r3, [r2, #0]
 8001f6c:	bf00      	nop
 8001f6e:	46bd      	mov	sp, r7
 8001f70:	bc80      	pop	{r7}
 8001f72:	4770      	bx	lr
 8001f74:	20000058 	.word	0x20000058
 8001f78:	20002c88 	.word	0x20002c88

08001f7c <HAL_GetTick>:
 8001f7c:	b480      	push	{r7}
 8001f7e:	af00      	add	r7, sp, #0
 8001f80:	4b02      	ldr	r3, [pc, #8]	; (8001f8c <HAL_GetTick+0x10>)
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	4618      	mov	r0, r3
 8001f86:	46bd      	mov	sp, r7
 8001f88:	bc80      	pop	{r7}
 8001f8a:	4770      	bx	lr
 8001f8c:	20002c88 	.word	0x20002c88

08001f90 <HAL_Delay>:
 8001f90:	b580      	push	{r7, lr}
 8001f92:	b084      	sub	sp, #16
 8001f94:	af00      	add	r7, sp, #0
 8001f96:	6078      	str	r0, [r7, #4]
 8001f98:	f7ff fff0 	bl	8001f7c <HAL_GetTick>
 8001f9c:	60b8      	str	r0, [r7, #8]
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	60fb      	str	r3, [r7, #12]
 8001fa2:	68fb      	ldr	r3, [r7, #12]
 8001fa4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001fa8:	d005      	beq.n	8001fb6 <HAL_Delay+0x26>
 8001faa:	4b0a      	ldr	r3, [pc, #40]	; (8001fd4 <HAL_Delay+0x44>)
 8001fac:	781b      	ldrb	r3, [r3, #0]
 8001fae:	461a      	mov	r2, r3
 8001fb0:	68fb      	ldr	r3, [r7, #12]
 8001fb2:	4413      	add	r3, r2
 8001fb4:	60fb      	str	r3, [r7, #12]
 8001fb6:	bf00      	nop
 8001fb8:	f7ff ffe0 	bl	8001f7c <HAL_GetTick>
 8001fbc:	4602      	mov	r2, r0
 8001fbe:	68bb      	ldr	r3, [r7, #8]
 8001fc0:	1ad3      	subs	r3, r2, r3
 8001fc2:	68fa      	ldr	r2, [r7, #12]
 8001fc4:	429a      	cmp	r2, r3
 8001fc6:	d8f7      	bhi.n	8001fb8 <HAL_Delay+0x28>
 8001fc8:	bf00      	nop
 8001fca:	bf00      	nop
 8001fcc:	3710      	adds	r7, #16
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bd80      	pop	{r7, pc}
 8001fd2:	bf00      	nop
 8001fd4:	20000058 	.word	0x20000058

08001fd8 <__NVIC_SetPriorityGrouping>:
 8001fd8:	b480      	push	{r7}
 8001fda:	b085      	sub	sp, #20
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	6078      	str	r0, [r7, #4]
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	f003 0307 	and.w	r3, r3, #7
 8001fe6:	60fb      	str	r3, [r7, #12]
 8001fe8:	4b0c      	ldr	r3, [pc, #48]	; (800201c <__NVIC_SetPriorityGrouping+0x44>)
 8001fea:	68db      	ldr	r3, [r3, #12]
 8001fec:	60bb      	str	r3, [r7, #8]
 8001fee:	68ba      	ldr	r2, [r7, #8]
 8001ff0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001ff4:	4013      	ands	r3, r2
 8001ff6:	60bb      	str	r3, [r7, #8]
 8001ff8:	68fb      	ldr	r3, [r7, #12]
 8001ffa:	021a      	lsls	r2, r3, #8
 8001ffc:	68bb      	ldr	r3, [r7, #8]
 8001ffe:	4313      	orrs	r3, r2
 8002000:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002004:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002008:	60bb      	str	r3, [r7, #8]
 800200a:	4a04      	ldr	r2, [pc, #16]	; (800201c <__NVIC_SetPriorityGrouping+0x44>)
 800200c:	68bb      	ldr	r3, [r7, #8]
 800200e:	60d3      	str	r3, [r2, #12]
 8002010:	bf00      	nop
 8002012:	3714      	adds	r7, #20
 8002014:	46bd      	mov	sp, r7
 8002016:	bc80      	pop	{r7}
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop
 800201c:	e000ed00 	.word	0xe000ed00

08002020 <__NVIC_GetPriorityGrouping>:
 8002020:	b480      	push	{r7}
 8002022:	af00      	add	r7, sp, #0
 8002024:	4b04      	ldr	r3, [pc, #16]	; (8002038 <__NVIC_GetPriorityGrouping+0x18>)
 8002026:	68db      	ldr	r3, [r3, #12]
 8002028:	0a1b      	lsrs	r3, r3, #8
 800202a:	f003 0307 	and.w	r3, r3, #7
 800202e:	4618      	mov	r0, r3
 8002030:	46bd      	mov	sp, r7
 8002032:	bc80      	pop	{r7}
 8002034:	4770      	bx	lr
 8002036:	bf00      	nop
 8002038:	e000ed00 	.word	0xe000ed00

0800203c <__NVIC_EnableIRQ>:
 800203c:	b480      	push	{r7}
 800203e:	b083      	sub	sp, #12
 8002040:	af00      	add	r7, sp, #0
 8002042:	4603      	mov	r3, r0
 8002044:	71fb      	strb	r3, [r7, #7]
 8002046:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800204a:	2b00      	cmp	r3, #0
 800204c:	db0b      	blt.n	8002066 <__NVIC_EnableIRQ+0x2a>
 800204e:	79fb      	ldrb	r3, [r7, #7]
 8002050:	f003 021f 	and.w	r2, r3, #31
 8002054:	4906      	ldr	r1, [pc, #24]	; (8002070 <__NVIC_EnableIRQ+0x34>)
 8002056:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800205a:	095b      	lsrs	r3, r3, #5
 800205c:	2001      	movs	r0, #1
 800205e:	fa00 f202 	lsl.w	r2, r0, r2
 8002062:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002066:	bf00      	nop
 8002068:	370c      	adds	r7, #12
 800206a:	46bd      	mov	sp, r7
 800206c:	bc80      	pop	{r7}
 800206e:	4770      	bx	lr
 8002070:	e000e100 	.word	0xe000e100

08002074 <__NVIC_SetPriority>:
 8002074:	b480      	push	{r7}
 8002076:	b083      	sub	sp, #12
 8002078:	af00      	add	r7, sp, #0
 800207a:	4603      	mov	r3, r0
 800207c:	6039      	str	r1, [r7, #0]
 800207e:	71fb      	strb	r3, [r7, #7]
 8002080:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002084:	2b00      	cmp	r3, #0
 8002086:	db0a      	blt.n	800209e <__NVIC_SetPriority+0x2a>
 8002088:	683b      	ldr	r3, [r7, #0]
 800208a:	b2da      	uxtb	r2, r3
 800208c:	490c      	ldr	r1, [pc, #48]	; (80020c0 <__NVIC_SetPriority+0x4c>)
 800208e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002092:	0112      	lsls	r2, r2, #4
 8002094:	b2d2      	uxtb	r2, r2
 8002096:	440b      	add	r3, r1
 8002098:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800209c:	e00a      	b.n	80020b4 <__NVIC_SetPriority+0x40>
 800209e:	683b      	ldr	r3, [r7, #0]
 80020a0:	b2da      	uxtb	r2, r3
 80020a2:	4908      	ldr	r1, [pc, #32]	; (80020c4 <__NVIC_SetPriority+0x50>)
 80020a4:	79fb      	ldrb	r3, [r7, #7]
 80020a6:	f003 030f 	and.w	r3, r3, #15
 80020aa:	3b04      	subs	r3, #4
 80020ac:	0112      	lsls	r2, r2, #4
 80020ae:	b2d2      	uxtb	r2, r2
 80020b0:	440b      	add	r3, r1
 80020b2:	761a      	strb	r2, [r3, #24]
 80020b4:	bf00      	nop
 80020b6:	370c      	adds	r7, #12
 80020b8:	46bd      	mov	sp, r7
 80020ba:	bc80      	pop	{r7}
 80020bc:	4770      	bx	lr
 80020be:	bf00      	nop
 80020c0:	e000e100 	.word	0xe000e100
 80020c4:	e000ed00 	.word	0xe000ed00

080020c8 <NVIC_EncodePriority>:
 80020c8:	b480      	push	{r7}
 80020ca:	b089      	sub	sp, #36	; 0x24
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	60f8      	str	r0, [r7, #12]
 80020d0:	60b9      	str	r1, [r7, #8]
 80020d2:	607a      	str	r2, [r7, #4]
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	f003 0307 	and.w	r3, r3, #7
 80020da:	61fb      	str	r3, [r7, #28]
 80020dc:	69fb      	ldr	r3, [r7, #28]
 80020de:	f1c3 0307 	rsb	r3, r3, #7
 80020e2:	2b04      	cmp	r3, #4
 80020e4:	bf28      	it	cs
 80020e6:	2304      	movcs	r3, #4
 80020e8:	61bb      	str	r3, [r7, #24]
 80020ea:	69fb      	ldr	r3, [r7, #28]
 80020ec:	3304      	adds	r3, #4
 80020ee:	2b06      	cmp	r3, #6
 80020f0:	d902      	bls.n	80020f8 <NVIC_EncodePriority+0x30>
 80020f2:	69fb      	ldr	r3, [r7, #28]
 80020f4:	3b03      	subs	r3, #3
 80020f6:	e000      	b.n	80020fa <NVIC_EncodePriority+0x32>
 80020f8:	2300      	movs	r3, #0
 80020fa:	617b      	str	r3, [r7, #20]
 80020fc:	f04f 32ff 	mov.w	r2, #4294967295
 8002100:	69bb      	ldr	r3, [r7, #24]
 8002102:	fa02 f303 	lsl.w	r3, r2, r3
 8002106:	43da      	mvns	r2, r3
 8002108:	68bb      	ldr	r3, [r7, #8]
 800210a:	401a      	ands	r2, r3
 800210c:	697b      	ldr	r3, [r7, #20]
 800210e:	409a      	lsls	r2, r3
 8002110:	f04f 31ff 	mov.w	r1, #4294967295
 8002114:	697b      	ldr	r3, [r7, #20]
 8002116:	fa01 f303 	lsl.w	r3, r1, r3
 800211a:	43d9      	mvns	r1, r3
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	400b      	ands	r3, r1
 8002120:	4313      	orrs	r3, r2
 8002122:	4618      	mov	r0, r3
 8002124:	3724      	adds	r7, #36	; 0x24
 8002126:	46bd      	mov	sp, r7
 8002128:	bc80      	pop	{r7}
 800212a:	4770      	bx	lr

0800212c <SysTick_Config>:
 800212c:	b580      	push	{r7, lr}
 800212e:	b082      	sub	sp, #8
 8002130:	af00      	add	r7, sp, #0
 8002132:	6078      	str	r0, [r7, #4]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	3b01      	subs	r3, #1
 8002138:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800213c:	d301      	bcc.n	8002142 <SysTick_Config+0x16>
 800213e:	2301      	movs	r3, #1
 8002140:	e00f      	b.n	8002162 <SysTick_Config+0x36>
 8002142:	4a0a      	ldr	r2, [pc, #40]	; (800216c <SysTick_Config+0x40>)
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	3b01      	subs	r3, #1
 8002148:	6053      	str	r3, [r2, #4]
 800214a:	210f      	movs	r1, #15
 800214c:	f04f 30ff 	mov.w	r0, #4294967295
 8002150:	f7ff ff90 	bl	8002074 <__NVIC_SetPriority>
 8002154:	4b05      	ldr	r3, [pc, #20]	; (800216c <SysTick_Config+0x40>)
 8002156:	2200      	movs	r2, #0
 8002158:	609a      	str	r2, [r3, #8]
 800215a:	4b04      	ldr	r3, [pc, #16]	; (800216c <SysTick_Config+0x40>)
 800215c:	2207      	movs	r2, #7
 800215e:	601a      	str	r2, [r3, #0]
 8002160:	2300      	movs	r3, #0
 8002162:	4618      	mov	r0, r3
 8002164:	3708      	adds	r7, #8
 8002166:	46bd      	mov	sp, r7
 8002168:	bd80      	pop	{r7, pc}
 800216a:	bf00      	nop
 800216c:	e000e010 	.word	0xe000e010

08002170 <HAL_NVIC_SetPriorityGrouping>:
 8002170:	b580      	push	{r7, lr}
 8002172:	b082      	sub	sp, #8
 8002174:	af00      	add	r7, sp, #0
 8002176:	6078      	str	r0, [r7, #4]
 8002178:	6878      	ldr	r0, [r7, #4]
 800217a:	f7ff ff2d 	bl	8001fd8 <__NVIC_SetPriorityGrouping>
 800217e:	bf00      	nop
 8002180:	3708      	adds	r7, #8
 8002182:	46bd      	mov	sp, r7
 8002184:	bd80      	pop	{r7, pc}

08002186 <HAL_NVIC_SetPriority>:
 8002186:	b580      	push	{r7, lr}
 8002188:	b086      	sub	sp, #24
 800218a:	af00      	add	r7, sp, #0
 800218c:	4603      	mov	r3, r0
 800218e:	60b9      	str	r1, [r7, #8]
 8002190:	607a      	str	r2, [r7, #4]
 8002192:	73fb      	strb	r3, [r7, #15]
 8002194:	2300      	movs	r3, #0
 8002196:	617b      	str	r3, [r7, #20]
 8002198:	f7ff ff42 	bl	8002020 <__NVIC_GetPriorityGrouping>
 800219c:	6178      	str	r0, [r7, #20]
 800219e:	687a      	ldr	r2, [r7, #4]
 80021a0:	68b9      	ldr	r1, [r7, #8]
 80021a2:	6978      	ldr	r0, [r7, #20]
 80021a4:	f7ff ff90 	bl	80020c8 <NVIC_EncodePriority>
 80021a8:	4602      	mov	r2, r0
 80021aa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80021ae:	4611      	mov	r1, r2
 80021b0:	4618      	mov	r0, r3
 80021b2:	f7ff ff5f 	bl	8002074 <__NVIC_SetPriority>
 80021b6:	bf00      	nop
 80021b8:	3718      	adds	r7, #24
 80021ba:	46bd      	mov	sp, r7
 80021bc:	bd80      	pop	{r7, pc}

080021be <HAL_NVIC_EnableIRQ>:
 80021be:	b580      	push	{r7, lr}
 80021c0:	b082      	sub	sp, #8
 80021c2:	af00      	add	r7, sp, #0
 80021c4:	4603      	mov	r3, r0
 80021c6:	71fb      	strb	r3, [r7, #7]
 80021c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021cc:	4618      	mov	r0, r3
 80021ce:	f7ff ff35 	bl	800203c <__NVIC_EnableIRQ>
 80021d2:	bf00      	nop
 80021d4:	3708      	adds	r7, #8
 80021d6:	46bd      	mov	sp, r7
 80021d8:	bd80      	pop	{r7, pc}

080021da <HAL_SYSTICK_Config>:
 80021da:	b580      	push	{r7, lr}
 80021dc:	b082      	sub	sp, #8
 80021de:	af00      	add	r7, sp, #0
 80021e0:	6078      	str	r0, [r7, #4]
 80021e2:	6878      	ldr	r0, [r7, #4]
 80021e4:	f7ff ffa2 	bl	800212c <SysTick_Config>
 80021e8:	4603      	mov	r3, r0
 80021ea:	4618      	mov	r0, r3
 80021ec:	3708      	adds	r7, #8
 80021ee:	46bd      	mov	sp, r7
 80021f0:	bd80      	pop	{r7, pc}
	...

080021f4 <HAL_DMA_Init>:
 80021f4:	b480      	push	{r7}
 80021f6:	b085      	sub	sp, #20
 80021f8:	af00      	add	r7, sp, #0
 80021fa:	6078      	str	r0, [r7, #4]
 80021fc:	2300      	movs	r3, #0
 80021fe:	60fb      	str	r3, [r7, #12]
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	2b00      	cmp	r3, #0
 8002204:	d101      	bne.n	800220a <HAL_DMA_Init+0x16>
 8002206:	2301      	movs	r3, #1
 8002208:	e059      	b.n	80022be <HAL_DMA_Init+0xca>
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	461a      	mov	r2, r3
 8002210:	4b2d      	ldr	r3, [pc, #180]	; (80022c8 <HAL_DMA_Init+0xd4>)
 8002212:	429a      	cmp	r2, r3
 8002214:	d80f      	bhi.n	8002236 <HAL_DMA_Init+0x42>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	461a      	mov	r2, r3
 800221c:	4b2b      	ldr	r3, [pc, #172]	; (80022cc <HAL_DMA_Init+0xd8>)
 800221e:	4413      	add	r3, r2
 8002220:	4a2b      	ldr	r2, [pc, #172]	; (80022d0 <HAL_DMA_Init+0xdc>)
 8002222:	fba2 2303 	umull	r2, r3, r2, r3
 8002226:	091b      	lsrs	r3, r3, #4
 8002228:	009a      	lsls	r2, r3, #2
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	641a      	str	r2, [r3, #64]	; 0x40
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	4a28      	ldr	r2, [pc, #160]	; (80022d4 <HAL_DMA_Init+0xe0>)
 8002232:	63da      	str	r2, [r3, #60]	; 0x3c
 8002234:	e00e      	b.n	8002254 <HAL_DMA_Init+0x60>
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	461a      	mov	r2, r3
 800223c:	4b26      	ldr	r3, [pc, #152]	; (80022d8 <HAL_DMA_Init+0xe4>)
 800223e:	4413      	add	r3, r2
 8002240:	4a23      	ldr	r2, [pc, #140]	; (80022d0 <HAL_DMA_Init+0xdc>)
 8002242:	fba2 2303 	umull	r2, r3, r2, r3
 8002246:	091b      	lsrs	r3, r3, #4
 8002248:	009a      	lsls	r2, r3, #2
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	641a      	str	r2, [r3, #64]	; 0x40
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	4a22      	ldr	r2, [pc, #136]	; (80022dc <HAL_DMA_Init+0xe8>)
 8002252:	63da      	str	r2, [r3, #60]	; 0x3c
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2202      	movs	r2, #2
 8002258:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	60fb      	str	r3, [r7, #12]
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800226a:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800226e:	60fb      	str	r3, [r7, #12]
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	685a      	ldr	r2, [r3, #4]
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	689b      	ldr	r3, [r3, #8]
 8002278:	431a      	orrs	r2, r3
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	68db      	ldr	r3, [r3, #12]
 800227e:	431a      	orrs	r2, r3
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	691b      	ldr	r3, [r3, #16]
 8002284:	431a      	orrs	r2, r3
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	695b      	ldr	r3, [r3, #20]
 800228a:	431a      	orrs	r2, r3
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	699b      	ldr	r3, [r3, #24]
 8002290:	431a      	orrs	r2, r3
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	69db      	ldr	r3, [r3, #28]
 8002296:	4313      	orrs	r3, r2
 8002298:	68fa      	ldr	r2, [r7, #12]
 800229a:	4313      	orrs	r3, r2
 800229c:	60fb      	str	r3, [r7, #12]
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	68fa      	ldr	r2, [r7, #12]
 80022a4:	601a      	str	r2, [r3, #0]
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	2200      	movs	r2, #0
 80022aa:	639a      	str	r2, [r3, #56]	; 0x38
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2201      	movs	r2, #1
 80022b0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	2200      	movs	r2, #0
 80022b8:	f883 2020 	strb.w	r2, [r3, #32]
 80022bc:	2300      	movs	r3, #0
 80022be:	4618      	mov	r0, r3
 80022c0:	3714      	adds	r7, #20
 80022c2:	46bd      	mov	sp, r7
 80022c4:	bc80      	pop	{r7}
 80022c6:	4770      	bx	lr
 80022c8:	40020407 	.word	0x40020407
 80022cc:	bffdfff8 	.word	0xbffdfff8
 80022d0:	cccccccd 	.word	0xcccccccd
 80022d4:	40020000 	.word	0x40020000
 80022d8:	bffdfbf8 	.word	0xbffdfbf8
 80022dc:	40020400 	.word	0x40020400

080022e0 <HAL_DMA_Abort_IT>:
 80022e0:	b580      	push	{r7, lr}
 80022e2:	b084      	sub	sp, #16
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	6078      	str	r0, [r7, #4]
 80022e8:	2300      	movs	r3, #0
 80022ea:	73fb      	strb	r3, [r7, #15]
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80022f2:	2b02      	cmp	r3, #2
 80022f4:	d005      	beq.n	8002302 <HAL_DMA_Abort_IT+0x22>
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	2204      	movs	r2, #4
 80022fa:	639a      	str	r2, [r3, #56]	; 0x38
 80022fc:	2301      	movs	r3, #1
 80022fe:	73fb      	strb	r3, [r7, #15]
 8002300:	e0d6      	b.n	80024b0 <HAL_DMA_Abort_IT+0x1d0>
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	681a      	ldr	r2, [r3, #0]
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	f022 020e 	bic.w	r2, r2, #14
 8002310:	601a      	str	r2, [r3, #0]
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	681a      	ldr	r2, [r3, #0]
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	f022 0201 	bic.w	r2, r2, #1
 8002320:	601a      	str	r2, [r3, #0]
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	461a      	mov	r2, r3
 8002328:	4b64      	ldr	r3, [pc, #400]	; (80024bc <HAL_DMA_Abort_IT+0x1dc>)
 800232a:	429a      	cmp	r2, r3
 800232c:	d958      	bls.n	80023e0 <HAL_DMA_Abort_IT+0x100>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	4a63      	ldr	r2, [pc, #396]	; (80024c0 <HAL_DMA_Abort_IT+0x1e0>)
 8002334:	4293      	cmp	r3, r2
 8002336:	d04f      	beq.n	80023d8 <HAL_DMA_Abort_IT+0xf8>
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	4a61      	ldr	r2, [pc, #388]	; (80024c4 <HAL_DMA_Abort_IT+0x1e4>)
 800233e:	4293      	cmp	r3, r2
 8002340:	d048      	beq.n	80023d4 <HAL_DMA_Abort_IT+0xf4>
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	4a60      	ldr	r2, [pc, #384]	; (80024c8 <HAL_DMA_Abort_IT+0x1e8>)
 8002348:	4293      	cmp	r3, r2
 800234a:	d040      	beq.n	80023ce <HAL_DMA_Abort_IT+0xee>
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	4a5e      	ldr	r2, [pc, #376]	; (80024cc <HAL_DMA_Abort_IT+0x1ec>)
 8002352:	4293      	cmp	r3, r2
 8002354:	d038      	beq.n	80023c8 <HAL_DMA_Abort_IT+0xe8>
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	4a5d      	ldr	r2, [pc, #372]	; (80024d0 <HAL_DMA_Abort_IT+0x1f0>)
 800235c:	4293      	cmp	r3, r2
 800235e:	d030      	beq.n	80023c2 <HAL_DMA_Abort_IT+0xe2>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	4a5b      	ldr	r2, [pc, #364]	; (80024d4 <HAL_DMA_Abort_IT+0x1f4>)
 8002366:	4293      	cmp	r3, r2
 8002368:	d028      	beq.n	80023bc <HAL_DMA_Abort_IT+0xdc>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	4a53      	ldr	r2, [pc, #332]	; (80024bc <HAL_DMA_Abort_IT+0x1dc>)
 8002370:	4293      	cmp	r3, r2
 8002372:	d020      	beq.n	80023b6 <HAL_DMA_Abort_IT+0xd6>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4a57      	ldr	r2, [pc, #348]	; (80024d8 <HAL_DMA_Abort_IT+0x1f8>)
 800237a:	4293      	cmp	r3, r2
 800237c:	d019      	beq.n	80023b2 <HAL_DMA_Abort_IT+0xd2>
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	4a56      	ldr	r2, [pc, #344]	; (80024dc <HAL_DMA_Abort_IT+0x1fc>)
 8002384:	4293      	cmp	r3, r2
 8002386:	d012      	beq.n	80023ae <HAL_DMA_Abort_IT+0xce>
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	4a54      	ldr	r2, [pc, #336]	; (80024e0 <HAL_DMA_Abort_IT+0x200>)
 800238e:	4293      	cmp	r3, r2
 8002390:	d00a      	beq.n	80023a8 <HAL_DMA_Abort_IT+0xc8>
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	4a53      	ldr	r2, [pc, #332]	; (80024e4 <HAL_DMA_Abort_IT+0x204>)
 8002398:	4293      	cmp	r3, r2
 800239a:	d102      	bne.n	80023a2 <HAL_DMA_Abort_IT+0xc2>
 800239c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80023a0:	e01b      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023a2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80023a6:	e018      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80023ac:	e015      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023ae:	2310      	movs	r3, #16
 80023b0:	e013      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023b2:	2301      	movs	r3, #1
 80023b4:	e011      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023b6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80023ba:	e00e      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023bc:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80023c0:	e00b      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023c2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80023c6:	e008      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80023cc:	e005      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023ce:	f44f 7380 	mov.w	r3, #256	; 0x100
 80023d2:	e002      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023d4:	2310      	movs	r3, #16
 80023d6:	e000      	b.n	80023da <HAL_DMA_Abort_IT+0xfa>
 80023d8:	2301      	movs	r3, #1
 80023da:	4a43      	ldr	r2, [pc, #268]	; (80024e8 <HAL_DMA_Abort_IT+0x208>)
 80023dc:	6053      	str	r3, [r2, #4]
 80023de:	e057      	b.n	8002490 <HAL_DMA_Abort_IT+0x1b0>
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	4a36      	ldr	r2, [pc, #216]	; (80024c0 <HAL_DMA_Abort_IT+0x1e0>)
 80023e6:	4293      	cmp	r3, r2
 80023e8:	d04f      	beq.n	800248a <HAL_DMA_Abort_IT+0x1aa>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	4a35      	ldr	r2, [pc, #212]	; (80024c4 <HAL_DMA_Abort_IT+0x1e4>)
 80023f0:	4293      	cmp	r3, r2
 80023f2:	d048      	beq.n	8002486 <HAL_DMA_Abort_IT+0x1a6>
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	4a33      	ldr	r2, [pc, #204]	; (80024c8 <HAL_DMA_Abort_IT+0x1e8>)
 80023fa:	4293      	cmp	r3, r2
 80023fc:	d040      	beq.n	8002480 <HAL_DMA_Abort_IT+0x1a0>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	4a32      	ldr	r2, [pc, #200]	; (80024cc <HAL_DMA_Abort_IT+0x1ec>)
 8002404:	4293      	cmp	r3, r2
 8002406:	d038      	beq.n	800247a <HAL_DMA_Abort_IT+0x19a>
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	4a30      	ldr	r2, [pc, #192]	; (80024d0 <HAL_DMA_Abort_IT+0x1f0>)
 800240e:	4293      	cmp	r3, r2
 8002410:	d030      	beq.n	8002474 <HAL_DMA_Abort_IT+0x194>
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	4a2f      	ldr	r2, [pc, #188]	; (80024d4 <HAL_DMA_Abort_IT+0x1f4>)
 8002418:	4293      	cmp	r3, r2
 800241a:	d028      	beq.n	800246e <HAL_DMA_Abort_IT+0x18e>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	4a26      	ldr	r2, [pc, #152]	; (80024bc <HAL_DMA_Abort_IT+0x1dc>)
 8002422:	4293      	cmp	r3, r2
 8002424:	d020      	beq.n	8002468 <HAL_DMA_Abort_IT+0x188>
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	4a2b      	ldr	r2, [pc, #172]	; (80024d8 <HAL_DMA_Abort_IT+0x1f8>)
 800242c:	4293      	cmp	r3, r2
 800242e:	d019      	beq.n	8002464 <HAL_DMA_Abort_IT+0x184>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	4a29      	ldr	r2, [pc, #164]	; (80024dc <HAL_DMA_Abort_IT+0x1fc>)
 8002436:	4293      	cmp	r3, r2
 8002438:	d012      	beq.n	8002460 <HAL_DMA_Abort_IT+0x180>
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	681b      	ldr	r3, [r3, #0]
 800243e:	4a28      	ldr	r2, [pc, #160]	; (80024e0 <HAL_DMA_Abort_IT+0x200>)
 8002440:	4293      	cmp	r3, r2
 8002442:	d00a      	beq.n	800245a <HAL_DMA_Abort_IT+0x17a>
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	4a26      	ldr	r2, [pc, #152]	; (80024e4 <HAL_DMA_Abort_IT+0x204>)
 800244a:	4293      	cmp	r3, r2
 800244c:	d102      	bne.n	8002454 <HAL_DMA_Abort_IT+0x174>
 800244e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002452:	e01b      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002454:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002458:	e018      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 800245a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800245e:	e015      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002460:	2310      	movs	r3, #16
 8002462:	e013      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002464:	2301      	movs	r3, #1
 8002466:	e011      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002468:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800246c:	e00e      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 800246e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002472:	e00b      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002474:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002478:	e008      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 800247a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800247e:	e005      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002480:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002484:	e002      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 8002486:	2310      	movs	r3, #16
 8002488:	e000      	b.n	800248c <HAL_DMA_Abort_IT+0x1ac>
 800248a:	2301      	movs	r3, #1
 800248c:	4a17      	ldr	r2, [pc, #92]	; (80024ec <HAL_DMA_Abort_IT+0x20c>)
 800248e:	6053      	str	r3, [r2, #4]
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	2201      	movs	r2, #1
 8002494:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	2200      	movs	r2, #0
 800249c:	f883 2020 	strb.w	r2, [r3, #32]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	d003      	beq.n	80024b0 <HAL_DMA_Abort_IT+0x1d0>
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80024ac:	6878      	ldr	r0, [r7, #4]
 80024ae:	4798      	blx	r3
 80024b0:	7bfb      	ldrb	r3, [r7, #15]
 80024b2:	4618      	mov	r0, r3
 80024b4:	3710      	adds	r7, #16
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bd80      	pop	{r7, pc}
 80024ba:	bf00      	nop
 80024bc:	40020080 	.word	0x40020080
 80024c0:	40020008 	.word	0x40020008
 80024c4:	4002001c 	.word	0x4002001c
 80024c8:	40020030 	.word	0x40020030
 80024cc:	40020044 	.word	0x40020044
 80024d0:	40020058 	.word	0x40020058
 80024d4:	4002006c 	.word	0x4002006c
 80024d8:	40020408 	.word	0x40020408
 80024dc:	4002041c 	.word	0x4002041c
 80024e0:	40020430 	.word	0x40020430
 80024e4:	40020444 	.word	0x40020444
 80024e8:	40020400 	.word	0x40020400
 80024ec:	40020000 	.word	0x40020000

080024f0 <HAL_DMA_IRQHandler>:
 80024f0:	b580      	push	{r7, lr}
 80024f2:	b084      	sub	sp, #16
 80024f4:	af00      	add	r7, sp, #0
 80024f6:	6078      	str	r0, [r7, #4]
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	60fb      	str	r3, [r7, #12]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	60bb      	str	r3, [r7, #8]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800250c:	2204      	movs	r2, #4
 800250e:	409a      	lsls	r2, r3
 8002510:	68fb      	ldr	r3, [r7, #12]
 8002512:	4013      	ands	r3, r2
 8002514:	2b00      	cmp	r3, #0
 8002516:	f000 80d6 	beq.w	80026c6 <HAL_DMA_IRQHandler+0x1d6>
 800251a:	68bb      	ldr	r3, [r7, #8]
 800251c:	f003 0304 	and.w	r3, r3, #4
 8002520:	2b00      	cmp	r3, #0
 8002522:	f000 80d0 	beq.w	80026c6 <HAL_DMA_IRQHandler+0x1d6>
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	681b      	ldr	r3, [r3, #0]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	f003 0320 	and.w	r3, r3, #32
 8002530:	2b00      	cmp	r3, #0
 8002532:	d107      	bne.n	8002544 <HAL_DMA_IRQHandler+0x54>
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	681a      	ldr	r2, [r3, #0]
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	f022 0204 	bic.w	r2, r2, #4
 8002542:	601a      	str	r2, [r3, #0]
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	461a      	mov	r2, r3
 800254a:	4b9b      	ldr	r3, [pc, #620]	; (80027b8 <HAL_DMA_IRQHandler+0x2c8>)
 800254c:	429a      	cmp	r2, r3
 800254e:	d958      	bls.n	8002602 <HAL_DMA_IRQHandler+0x112>
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4a99      	ldr	r2, [pc, #612]	; (80027bc <HAL_DMA_IRQHandler+0x2cc>)
 8002556:	4293      	cmp	r3, r2
 8002558:	d04f      	beq.n	80025fa <HAL_DMA_IRQHandler+0x10a>
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	4a98      	ldr	r2, [pc, #608]	; (80027c0 <HAL_DMA_IRQHandler+0x2d0>)
 8002560:	4293      	cmp	r3, r2
 8002562:	d048      	beq.n	80025f6 <HAL_DMA_IRQHandler+0x106>
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	4a96      	ldr	r2, [pc, #600]	; (80027c4 <HAL_DMA_IRQHandler+0x2d4>)
 800256a:	4293      	cmp	r3, r2
 800256c:	d040      	beq.n	80025f0 <HAL_DMA_IRQHandler+0x100>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	4a95      	ldr	r2, [pc, #596]	; (80027c8 <HAL_DMA_IRQHandler+0x2d8>)
 8002574:	4293      	cmp	r3, r2
 8002576:	d038      	beq.n	80025ea <HAL_DMA_IRQHandler+0xfa>
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	4a93      	ldr	r2, [pc, #588]	; (80027cc <HAL_DMA_IRQHandler+0x2dc>)
 800257e:	4293      	cmp	r3, r2
 8002580:	d030      	beq.n	80025e4 <HAL_DMA_IRQHandler+0xf4>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	4a92      	ldr	r2, [pc, #584]	; (80027d0 <HAL_DMA_IRQHandler+0x2e0>)
 8002588:	4293      	cmp	r3, r2
 800258a:	d028      	beq.n	80025de <HAL_DMA_IRQHandler+0xee>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	4a89      	ldr	r2, [pc, #548]	; (80027b8 <HAL_DMA_IRQHandler+0x2c8>)
 8002592:	4293      	cmp	r3, r2
 8002594:	d020      	beq.n	80025d8 <HAL_DMA_IRQHandler+0xe8>
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	4a8e      	ldr	r2, [pc, #568]	; (80027d4 <HAL_DMA_IRQHandler+0x2e4>)
 800259c:	4293      	cmp	r3, r2
 800259e:	d019      	beq.n	80025d4 <HAL_DMA_IRQHandler+0xe4>
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	681b      	ldr	r3, [r3, #0]
 80025a4:	4a8c      	ldr	r2, [pc, #560]	; (80027d8 <HAL_DMA_IRQHandler+0x2e8>)
 80025a6:	4293      	cmp	r3, r2
 80025a8:	d012      	beq.n	80025d0 <HAL_DMA_IRQHandler+0xe0>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	4a8b      	ldr	r2, [pc, #556]	; (80027dc <HAL_DMA_IRQHandler+0x2ec>)
 80025b0:	4293      	cmp	r3, r2
 80025b2:	d00a      	beq.n	80025ca <HAL_DMA_IRQHandler+0xda>
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	4a89      	ldr	r2, [pc, #548]	; (80027e0 <HAL_DMA_IRQHandler+0x2f0>)
 80025ba:	4293      	cmp	r3, r2
 80025bc:	d102      	bne.n	80025c4 <HAL_DMA_IRQHandler+0xd4>
 80025be:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80025c2:	e01b      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025c4:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80025c8:	e018      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80025ce:	e015      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025d0:	2340      	movs	r3, #64	; 0x40
 80025d2:	e013      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025d4:	2304      	movs	r3, #4
 80025d6:	e011      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025d8:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 80025dc:	e00e      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025de:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80025e2:	e00b      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025e4:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80025e8:	e008      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025ea:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80025ee:	e005      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80025f4:	e002      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025f6:	2340      	movs	r3, #64	; 0x40
 80025f8:	e000      	b.n	80025fc <HAL_DMA_IRQHandler+0x10c>
 80025fa:	2304      	movs	r3, #4
 80025fc:	4a79      	ldr	r2, [pc, #484]	; (80027e4 <HAL_DMA_IRQHandler+0x2f4>)
 80025fe:	6053      	str	r3, [r2, #4]
 8002600:	e057      	b.n	80026b2 <HAL_DMA_IRQHandler+0x1c2>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	4a6d      	ldr	r2, [pc, #436]	; (80027bc <HAL_DMA_IRQHandler+0x2cc>)
 8002608:	4293      	cmp	r3, r2
 800260a:	d04f      	beq.n	80026ac <HAL_DMA_IRQHandler+0x1bc>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	4a6b      	ldr	r2, [pc, #428]	; (80027c0 <HAL_DMA_IRQHandler+0x2d0>)
 8002612:	4293      	cmp	r3, r2
 8002614:	d048      	beq.n	80026a8 <HAL_DMA_IRQHandler+0x1b8>
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	4a6a      	ldr	r2, [pc, #424]	; (80027c4 <HAL_DMA_IRQHandler+0x2d4>)
 800261c:	4293      	cmp	r3, r2
 800261e:	d040      	beq.n	80026a2 <HAL_DMA_IRQHandler+0x1b2>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	4a68      	ldr	r2, [pc, #416]	; (80027c8 <HAL_DMA_IRQHandler+0x2d8>)
 8002626:	4293      	cmp	r3, r2
 8002628:	d038      	beq.n	800269c <HAL_DMA_IRQHandler+0x1ac>
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	681b      	ldr	r3, [r3, #0]
 800262e:	4a67      	ldr	r2, [pc, #412]	; (80027cc <HAL_DMA_IRQHandler+0x2dc>)
 8002630:	4293      	cmp	r3, r2
 8002632:	d030      	beq.n	8002696 <HAL_DMA_IRQHandler+0x1a6>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	4a65      	ldr	r2, [pc, #404]	; (80027d0 <HAL_DMA_IRQHandler+0x2e0>)
 800263a:	4293      	cmp	r3, r2
 800263c:	d028      	beq.n	8002690 <HAL_DMA_IRQHandler+0x1a0>
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	4a5d      	ldr	r2, [pc, #372]	; (80027b8 <HAL_DMA_IRQHandler+0x2c8>)
 8002644:	4293      	cmp	r3, r2
 8002646:	d020      	beq.n	800268a <HAL_DMA_IRQHandler+0x19a>
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4a61      	ldr	r2, [pc, #388]	; (80027d4 <HAL_DMA_IRQHandler+0x2e4>)
 800264e:	4293      	cmp	r3, r2
 8002650:	d019      	beq.n	8002686 <HAL_DMA_IRQHandler+0x196>
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	4a60      	ldr	r2, [pc, #384]	; (80027d8 <HAL_DMA_IRQHandler+0x2e8>)
 8002658:	4293      	cmp	r3, r2
 800265a:	d012      	beq.n	8002682 <HAL_DMA_IRQHandler+0x192>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	4a5e      	ldr	r2, [pc, #376]	; (80027dc <HAL_DMA_IRQHandler+0x2ec>)
 8002662:	4293      	cmp	r3, r2
 8002664:	d00a      	beq.n	800267c <HAL_DMA_IRQHandler+0x18c>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	4a5d      	ldr	r2, [pc, #372]	; (80027e0 <HAL_DMA_IRQHandler+0x2f0>)
 800266c:	4293      	cmp	r3, r2
 800266e:	d102      	bne.n	8002676 <HAL_DMA_IRQHandler+0x186>
 8002670:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002674:	e01b      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 8002676:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800267a:	e018      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 800267c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002680:	e015      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 8002682:	2340      	movs	r3, #64	; 0x40
 8002684:	e013      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 8002686:	2304      	movs	r3, #4
 8002688:	e011      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 800268a:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 800268e:	e00e      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 8002690:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002694:	e00b      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 8002696:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800269a:	e008      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 800269c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80026a0:	e005      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 80026a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80026a6:	e002      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 80026a8:	2340      	movs	r3, #64	; 0x40
 80026aa:	e000      	b.n	80026ae <HAL_DMA_IRQHandler+0x1be>
 80026ac:	2304      	movs	r3, #4
 80026ae:	4a4e      	ldr	r2, [pc, #312]	; (80027e8 <HAL_DMA_IRQHandler+0x2f8>)
 80026b0:	6053      	str	r3, [r2, #4]
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	f000 8136 	beq.w	8002928 <HAL_DMA_IRQHandler+0x438>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026c0:	6878      	ldr	r0, [r7, #4]
 80026c2:	4798      	blx	r3
 80026c4:	e130      	b.n	8002928 <HAL_DMA_IRQHandler+0x438>
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026ca:	2202      	movs	r2, #2
 80026cc:	409a      	lsls	r2, r3
 80026ce:	68fb      	ldr	r3, [r7, #12]
 80026d0:	4013      	ands	r3, r2
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	f000 80f8 	beq.w	80028c8 <HAL_DMA_IRQHandler+0x3d8>
 80026d8:	68bb      	ldr	r3, [r7, #8]
 80026da:	f003 0302 	and.w	r3, r3, #2
 80026de:	2b00      	cmp	r3, #0
 80026e0:	f000 80f2 	beq.w	80028c8 <HAL_DMA_IRQHandler+0x3d8>
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	f003 0320 	and.w	r3, r3, #32
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d10b      	bne.n	800270a <HAL_DMA_IRQHandler+0x21a>
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	681a      	ldr	r2, [r3, #0]
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	f022 020a 	bic.w	r2, r2, #10
 8002700:	601a      	str	r2, [r3, #0]
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	2201      	movs	r2, #1
 8002706:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800270a:	687b      	ldr	r3, [r7, #4]
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	461a      	mov	r2, r3
 8002710:	4b29      	ldr	r3, [pc, #164]	; (80027b8 <HAL_DMA_IRQHandler+0x2c8>)
 8002712:	429a      	cmp	r2, r3
 8002714:	d973      	bls.n	80027fe <HAL_DMA_IRQHandler+0x30e>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	4a28      	ldr	r2, [pc, #160]	; (80027bc <HAL_DMA_IRQHandler+0x2cc>)
 800271c:	4293      	cmp	r3, r2
 800271e:	d06a      	beq.n	80027f6 <HAL_DMA_IRQHandler+0x306>
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	4a26      	ldr	r2, [pc, #152]	; (80027c0 <HAL_DMA_IRQHandler+0x2d0>)
 8002726:	4293      	cmp	r3, r2
 8002728:	d063      	beq.n	80027f2 <HAL_DMA_IRQHandler+0x302>
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	4a25      	ldr	r2, [pc, #148]	; (80027c4 <HAL_DMA_IRQHandler+0x2d4>)
 8002730:	4293      	cmp	r3, r2
 8002732:	d05b      	beq.n	80027ec <HAL_DMA_IRQHandler+0x2fc>
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	4a23      	ldr	r2, [pc, #140]	; (80027c8 <HAL_DMA_IRQHandler+0x2d8>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d038      	beq.n	80027b0 <HAL_DMA_IRQHandler+0x2c0>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	4a22      	ldr	r2, [pc, #136]	; (80027cc <HAL_DMA_IRQHandler+0x2dc>)
 8002744:	4293      	cmp	r3, r2
 8002746:	d030      	beq.n	80027aa <HAL_DMA_IRQHandler+0x2ba>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	4a20      	ldr	r2, [pc, #128]	; (80027d0 <HAL_DMA_IRQHandler+0x2e0>)
 800274e:	4293      	cmp	r3, r2
 8002750:	d028      	beq.n	80027a4 <HAL_DMA_IRQHandler+0x2b4>
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	4a18      	ldr	r2, [pc, #96]	; (80027b8 <HAL_DMA_IRQHandler+0x2c8>)
 8002758:	4293      	cmp	r3, r2
 800275a:	d020      	beq.n	800279e <HAL_DMA_IRQHandler+0x2ae>
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	4a1c      	ldr	r2, [pc, #112]	; (80027d4 <HAL_DMA_IRQHandler+0x2e4>)
 8002762:	4293      	cmp	r3, r2
 8002764:	d019      	beq.n	800279a <HAL_DMA_IRQHandler+0x2aa>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	4a1b      	ldr	r2, [pc, #108]	; (80027d8 <HAL_DMA_IRQHandler+0x2e8>)
 800276c:	4293      	cmp	r3, r2
 800276e:	d012      	beq.n	8002796 <HAL_DMA_IRQHandler+0x2a6>
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	4a19      	ldr	r2, [pc, #100]	; (80027dc <HAL_DMA_IRQHandler+0x2ec>)
 8002776:	4293      	cmp	r3, r2
 8002778:	d00a      	beq.n	8002790 <HAL_DMA_IRQHandler+0x2a0>
 800277a:	687b      	ldr	r3, [r7, #4]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	4a18      	ldr	r2, [pc, #96]	; (80027e0 <HAL_DMA_IRQHandler+0x2f0>)
 8002780:	4293      	cmp	r3, r2
 8002782:	d102      	bne.n	800278a <HAL_DMA_IRQHandler+0x29a>
 8002784:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002788:	e036      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 800278a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800278e:	e033      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 8002790:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002794:	e030      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 8002796:	2320      	movs	r3, #32
 8002798:	e02e      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 800279a:	2302      	movs	r3, #2
 800279c:	e02c      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 800279e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80027a2:	e029      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 80027a4:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 80027a8:	e026      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 80027aa:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80027ae:	e023      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 80027b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80027b4:	e020      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 80027b6:	bf00      	nop
 80027b8:	40020080 	.word	0x40020080
 80027bc:	40020008 	.word	0x40020008
 80027c0:	4002001c 	.word	0x4002001c
 80027c4:	40020030 	.word	0x40020030
 80027c8:	40020044 	.word	0x40020044
 80027cc:	40020058 	.word	0x40020058
 80027d0:	4002006c 	.word	0x4002006c
 80027d4:	40020408 	.word	0x40020408
 80027d8:	4002041c 	.word	0x4002041c
 80027dc:	40020430 	.word	0x40020430
 80027e0:	40020444 	.word	0x40020444
 80027e4:	40020400 	.word	0x40020400
 80027e8:	40020000 	.word	0x40020000
 80027ec:	f44f 7300 	mov.w	r3, #512	; 0x200
 80027f0:	e002      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 80027f2:	2320      	movs	r3, #32
 80027f4:	e000      	b.n	80027f8 <HAL_DMA_IRQHandler+0x308>
 80027f6:	2302      	movs	r3, #2
 80027f8:	4a4e      	ldr	r2, [pc, #312]	; (8002934 <HAL_DMA_IRQHandler+0x444>)
 80027fa:	6053      	str	r3, [r2, #4]
 80027fc:	e057      	b.n	80028ae <HAL_DMA_IRQHandler+0x3be>
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	4a4d      	ldr	r2, [pc, #308]	; (8002938 <HAL_DMA_IRQHandler+0x448>)
 8002804:	4293      	cmp	r3, r2
 8002806:	d04f      	beq.n	80028a8 <HAL_DMA_IRQHandler+0x3b8>
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	4a4b      	ldr	r2, [pc, #300]	; (800293c <HAL_DMA_IRQHandler+0x44c>)
 800280e:	4293      	cmp	r3, r2
 8002810:	d048      	beq.n	80028a4 <HAL_DMA_IRQHandler+0x3b4>
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	4a4a      	ldr	r2, [pc, #296]	; (8002940 <HAL_DMA_IRQHandler+0x450>)
 8002818:	4293      	cmp	r3, r2
 800281a:	d040      	beq.n	800289e <HAL_DMA_IRQHandler+0x3ae>
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	4a48      	ldr	r2, [pc, #288]	; (8002944 <HAL_DMA_IRQHandler+0x454>)
 8002822:	4293      	cmp	r3, r2
 8002824:	d038      	beq.n	8002898 <HAL_DMA_IRQHandler+0x3a8>
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	4a47      	ldr	r2, [pc, #284]	; (8002948 <HAL_DMA_IRQHandler+0x458>)
 800282c:	4293      	cmp	r3, r2
 800282e:	d030      	beq.n	8002892 <HAL_DMA_IRQHandler+0x3a2>
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	4a45      	ldr	r2, [pc, #276]	; (800294c <HAL_DMA_IRQHandler+0x45c>)
 8002836:	4293      	cmp	r3, r2
 8002838:	d028      	beq.n	800288c <HAL_DMA_IRQHandler+0x39c>
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	4a44      	ldr	r2, [pc, #272]	; (8002950 <HAL_DMA_IRQHandler+0x460>)
 8002840:	4293      	cmp	r3, r2
 8002842:	d020      	beq.n	8002886 <HAL_DMA_IRQHandler+0x396>
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	4a42      	ldr	r2, [pc, #264]	; (8002954 <HAL_DMA_IRQHandler+0x464>)
 800284a:	4293      	cmp	r3, r2
 800284c:	d019      	beq.n	8002882 <HAL_DMA_IRQHandler+0x392>
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	4a41      	ldr	r2, [pc, #260]	; (8002958 <HAL_DMA_IRQHandler+0x468>)
 8002854:	4293      	cmp	r3, r2
 8002856:	d012      	beq.n	800287e <HAL_DMA_IRQHandler+0x38e>
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	4a3f      	ldr	r2, [pc, #252]	; (800295c <HAL_DMA_IRQHandler+0x46c>)
 800285e:	4293      	cmp	r3, r2
 8002860:	d00a      	beq.n	8002878 <HAL_DMA_IRQHandler+0x388>
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	4a3e      	ldr	r2, [pc, #248]	; (8002960 <HAL_DMA_IRQHandler+0x470>)
 8002868:	4293      	cmp	r3, r2
 800286a:	d102      	bne.n	8002872 <HAL_DMA_IRQHandler+0x382>
 800286c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002870:	e01b      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 8002872:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002876:	e018      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 8002878:	f44f 7300 	mov.w	r3, #512	; 0x200
 800287c:	e015      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 800287e:	2320      	movs	r3, #32
 8002880:	e013      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 8002882:	2302      	movs	r3, #2
 8002884:	e011      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 8002886:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800288a:	e00e      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 800288c:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 8002890:	e00b      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 8002892:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002896:	e008      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 8002898:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800289c:	e005      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 800289e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80028a2:	e002      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 80028a4:	2320      	movs	r3, #32
 80028a6:	e000      	b.n	80028aa <HAL_DMA_IRQHandler+0x3ba>
 80028a8:	2302      	movs	r3, #2
 80028aa:	4a2e      	ldr	r2, [pc, #184]	; (8002964 <HAL_DMA_IRQHandler+0x474>)
 80028ac:	6053      	str	r3, [r2, #4]
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	2200      	movs	r2, #0
 80028b2:	f883 2020 	strb.w	r2, [r3, #32]
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d034      	beq.n	8002928 <HAL_DMA_IRQHandler+0x438>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80028c2:	6878      	ldr	r0, [r7, #4]
 80028c4:	4798      	blx	r3
 80028c6:	e02f      	b.n	8002928 <HAL_DMA_IRQHandler+0x438>
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028cc:	2208      	movs	r2, #8
 80028ce:	409a      	lsls	r2, r3
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	4013      	ands	r3, r2
 80028d4:	2b00      	cmp	r3, #0
 80028d6:	d028      	beq.n	800292a <HAL_DMA_IRQHandler+0x43a>
 80028d8:	68bb      	ldr	r3, [r7, #8]
 80028da:	f003 0308 	and.w	r3, r3, #8
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d023      	beq.n	800292a <HAL_DMA_IRQHandler+0x43a>
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	681a      	ldr	r2, [r3, #0]
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	f022 020e 	bic.w	r2, r2, #14
 80028f0:	601a      	str	r2, [r3, #0]
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80028fa:	2101      	movs	r1, #1
 80028fc:	fa01 f202 	lsl.w	r2, r1, r2
 8002900:	605a      	str	r2, [r3, #4]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	2201      	movs	r2, #1
 8002906:	639a      	str	r2, [r3, #56]	; 0x38
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	2201      	movs	r2, #1
 800290c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	2200      	movs	r2, #0
 8002914:	f883 2020 	strb.w	r2, [r3, #32]
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800291c:	2b00      	cmp	r3, #0
 800291e:	d004      	beq.n	800292a <HAL_DMA_IRQHandler+0x43a>
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002924:	6878      	ldr	r0, [r7, #4]
 8002926:	4798      	blx	r3
 8002928:	bf00      	nop
 800292a:	bf00      	nop
 800292c:	3710      	adds	r7, #16
 800292e:	46bd      	mov	sp, r7
 8002930:	bd80      	pop	{r7, pc}
 8002932:	bf00      	nop
 8002934:	40020400 	.word	0x40020400
 8002938:	40020008 	.word	0x40020008
 800293c:	4002001c 	.word	0x4002001c
 8002940:	40020030 	.word	0x40020030
 8002944:	40020044 	.word	0x40020044
 8002948:	40020058 	.word	0x40020058
 800294c:	4002006c 	.word	0x4002006c
 8002950:	40020080 	.word	0x40020080
 8002954:	40020408 	.word	0x40020408
 8002958:	4002041c 	.word	0x4002041c
 800295c:	40020430 	.word	0x40020430
 8002960:	40020444 	.word	0x40020444
 8002964:	40020000 	.word	0x40020000

08002968 <HAL_GPIO_Init>:
 8002968:	b480      	push	{r7}
 800296a:	b08b      	sub	sp, #44	; 0x2c
 800296c:	af00      	add	r7, sp, #0
 800296e:	6078      	str	r0, [r7, #4]
 8002970:	6039      	str	r1, [r7, #0]
 8002972:	2300      	movs	r3, #0
 8002974:	627b      	str	r3, [r7, #36]	; 0x24
 8002976:	2300      	movs	r3, #0
 8002978:	623b      	str	r3, [r7, #32]
 800297a:	e179      	b.n	8002c70 <HAL_GPIO_Init+0x308>
 800297c:	2201      	movs	r2, #1
 800297e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002980:	fa02 f303 	lsl.w	r3, r2, r3
 8002984:	61fb      	str	r3, [r7, #28]
 8002986:	683b      	ldr	r3, [r7, #0]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	69fa      	ldr	r2, [r7, #28]
 800298c:	4013      	ands	r3, r2
 800298e:	61bb      	str	r3, [r7, #24]
 8002990:	69ba      	ldr	r2, [r7, #24]
 8002992:	69fb      	ldr	r3, [r7, #28]
 8002994:	429a      	cmp	r2, r3
 8002996:	f040 8168 	bne.w	8002c6a <HAL_GPIO_Init+0x302>
 800299a:	683b      	ldr	r3, [r7, #0]
 800299c:	685b      	ldr	r3, [r3, #4]
 800299e:	4aa0      	ldr	r2, [pc, #640]	; (8002c20 <HAL_GPIO_Init+0x2b8>)
 80029a0:	4293      	cmp	r3, r2
 80029a2:	d05e      	beq.n	8002a62 <HAL_GPIO_Init+0xfa>
 80029a4:	4a9e      	ldr	r2, [pc, #632]	; (8002c20 <HAL_GPIO_Init+0x2b8>)
 80029a6:	4293      	cmp	r3, r2
 80029a8:	d875      	bhi.n	8002a96 <HAL_GPIO_Init+0x12e>
 80029aa:	4a9e      	ldr	r2, [pc, #632]	; (8002c24 <HAL_GPIO_Init+0x2bc>)
 80029ac:	4293      	cmp	r3, r2
 80029ae:	d058      	beq.n	8002a62 <HAL_GPIO_Init+0xfa>
 80029b0:	4a9c      	ldr	r2, [pc, #624]	; (8002c24 <HAL_GPIO_Init+0x2bc>)
 80029b2:	4293      	cmp	r3, r2
 80029b4:	d86f      	bhi.n	8002a96 <HAL_GPIO_Init+0x12e>
 80029b6:	4a9c      	ldr	r2, [pc, #624]	; (8002c28 <HAL_GPIO_Init+0x2c0>)
 80029b8:	4293      	cmp	r3, r2
 80029ba:	d052      	beq.n	8002a62 <HAL_GPIO_Init+0xfa>
 80029bc:	4a9a      	ldr	r2, [pc, #616]	; (8002c28 <HAL_GPIO_Init+0x2c0>)
 80029be:	4293      	cmp	r3, r2
 80029c0:	d869      	bhi.n	8002a96 <HAL_GPIO_Init+0x12e>
 80029c2:	4a9a      	ldr	r2, [pc, #616]	; (8002c2c <HAL_GPIO_Init+0x2c4>)
 80029c4:	4293      	cmp	r3, r2
 80029c6:	d04c      	beq.n	8002a62 <HAL_GPIO_Init+0xfa>
 80029c8:	4a98      	ldr	r2, [pc, #608]	; (8002c2c <HAL_GPIO_Init+0x2c4>)
 80029ca:	4293      	cmp	r3, r2
 80029cc:	d863      	bhi.n	8002a96 <HAL_GPIO_Init+0x12e>
 80029ce:	4a98      	ldr	r2, [pc, #608]	; (8002c30 <HAL_GPIO_Init+0x2c8>)
 80029d0:	4293      	cmp	r3, r2
 80029d2:	d046      	beq.n	8002a62 <HAL_GPIO_Init+0xfa>
 80029d4:	4a96      	ldr	r2, [pc, #600]	; (8002c30 <HAL_GPIO_Init+0x2c8>)
 80029d6:	4293      	cmp	r3, r2
 80029d8:	d85d      	bhi.n	8002a96 <HAL_GPIO_Init+0x12e>
 80029da:	2b12      	cmp	r3, #18
 80029dc:	d82a      	bhi.n	8002a34 <HAL_GPIO_Init+0xcc>
 80029de:	2b12      	cmp	r3, #18
 80029e0:	d859      	bhi.n	8002a96 <HAL_GPIO_Init+0x12e>
 80029e2:	a201      	add	r2, pc, #4	; (adr r2, 80029e8 <HAL_GPIO_Init+0x80>)
 80029e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80029e8:	08002a63 	.word	0x08002a63
 80029ec:	08002a3d 	.word	0x08002a3d
 80029f0:	08002a4f 	.word	0x08002a4f
 80029f4:	08002a91 	.word	0x08002a91
 80029f8:	08002a97 	.word	0x08002a97
 80029fc:	08002a97 	.word	0x08002a97
 8002a00:	08002a97 	.word	0x08002a97
 8002a04:	08002a97 	.word	0x08002a97
 8002a08:	08002a97 	.word	0x08002a97
 8002a0c:	08002a97 	.word	0x08002a97
 8002a10:	08002a97 	.word	0x08002a97
 8002a14:	08002a97 	.word	0x08002a97
 8002a18:	08002a97 	.word	0x08002a97
 8002a1c:	08002a97 	.word	0x08002a97
 8002a20:	08002a97 	.word	0x08002a97
 8002a24:	08002a97 	.word	0x08002a97
 8002a28:	08002a97 	.word	0x08002a97
 8002a2c:	08002a45 	.word	0x08002a45
 8002a30:	08002a59 	.word	0x08002a59
 8002a34:	4a7f      	ldr	r2, [pc, #508]	; (8002c34 <HAL_GPIO_Init+0x2cc>)
 8002a36:	4293      	cmp	r3, r2
 8002a38:	d013      	beq.n	8002a62 <HAL_GPIO_Init+0xfa>
 8002a3a:	e02c      	b.n	8002a96 <HAL_GPIO_Init+0x12e>
 8002a3c:	683b      	ldr	r3, [r7, #0]
 8002a3e:	68db      	ldr	r3, [r3, #12]
 8002a40:	623b      	str	r3, [r7, #32]
 8002a42:	e029      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a44:	683b      	ldr	r3, [r7, #0]
 8002a46:	68db      	ldr	r3, [r3, #12]
 8002a48:	3304      	adds	r3, #4
 8002a4a:	623b      	str	r3, [r7, #32]
 8002a4c:	e024      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a4e:	683b      	ldr	r3, [r7, #0]
 8002a50:	68db      	ldr	r3, [r3, #12]
 8002a52:	3308      	adds	r3, #8
 8002a54:	623b      	str	r3, [r7, #32]
 8002a56:	e01f      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a58:	683b      	ldr	r3, [r7, #0]
 8002a5a:	68db      	ldr	r3, [r3, #12]
 8002a5c:	330c      	adds	r3, #12
 8002a5e:	623b      	str	r3, [r7, #32]
 8002a60:	e01a      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a62:	683b      	ldr	r3, [r7, #0]
 8002a64:	689b      	ldr	r3, [r3, #8]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d102      	bne.n	8002a70 <HAL_GPIO_Init+0x108>
 8002a6a:	2304      	movs	r3, #4
 8002a6c:	623b      	str	r3, [r7, #32]
 8002a6e:	e013      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a70:	683b      	ldr	r3, [r7, #0]
 8002a72:	689b      	ldr	r3, [r3, #8]
 8002a74:	2b01      	cmp	r3, #1
 8002a76:	d105      	bne.n	8002a84 <HAL_GPIO_Init+0x11c>
 8002a78:	2308      	movs	r3, #8
 8002a7a:	623b      	str	r3, [r7, #32]
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	69fa      	ldr	r2, [r7, #28]
 8002a80:	611a      	str	r2, [r3, #16]
 8002a82:	e009      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a84:	2308      	movs	r3, #8
 8002a86:	623b      	str	r3, [r7, #32]
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	69fa      	ldr	r2, [r7, #28]
 8002a8c:	615a      	str	r2, [r3, #20]
 8002a8e:	e003      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a90:	2300      	movs	r3, #0
 8002a92:	623b      	str	r3, [r7, #32]
 8002a94:	e000      	b.n	8002a98 <HAL_GPIO_Init+0x130>
 8002a96:	bf00      	nop
 8002a98:	69bb      	ldr	r3, [r7, #24]
 8002a9a:	2bff      	cmp	r3, #255	; 0xff
 8002a9c:	d801      	bhi.n	8002aa2 <HAL_GPIO_Init+0x13a>
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	e001      	b.n	8002aa6 <HAL_GPIO_Init+0x13e>
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	3304      	adds	r3, #4
 8002aa6:	617b      	str	r3, [r7, #20]
 8002aa8:	69bb      	ldr	r3, [r7, #24]
 8002aaa:	2bff      	cmp	r3, #255	; 0xff
 8002aac:	d802      	bhi.n	8002ab4 <HAL_GPIO_Init+0x14c>
 8002aae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ab0:	009b      	lsls	r3, r3, #2
 8002ab2:	e002      	b.n	8002aba <HAL_GPIO_Init+0x152>
 8002ab4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ab6:	3b08      	subs	r3, #8
 8002ab8:	009b      	lsls	r3, r3, #2
 8002aba:	613b      	str	r3, [r7, #16]
 8002abc:	697b      	ldr	r3, [r7, #20]
 8002abe:	681a      	ldr	r2, [r3, #0]
 8002ac0:	210f      	movs	r1, #15
 8002ac2:	693b      	ldr	r3, [r7, #16]
 8002ac4:	fa01 f303 	lsl.w	r3, r1, r3
 8002ac8:	43db      	mvns	r3, r3
 8002aca:	401a      	ands	r2, r3
 8002acc:	6a39      	ldr	r1, [r7, #32]
 8002ace:	693b      	ldr	r3, [r7, #16]
 8002ad0:	fa01 f303 	lsl.w	r3, r1, r3
 8002ad4:	431a      	orrs	r2, r3
 8002ad6:	697b      	ldr	r3, [r7, #20]
 8002ad8:	601a      	str	r2, [r3, #0]
 8002ada:	683b      	ldr	r3, [r7, #0]
 8002adc:	685b      	ldr	r3, [r3, #4]
 8002ade:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	f000 80c1 	beq.w	8002c6a <HAL_GPIO_Init+0x302>
 8002ae8:	4b53      	ldr	r3, [pc, #332]	; (8002c38 <HAL_GPIO_Init+0x2d0>)
 8002aea:	699b      	ldr	r3, [r3, #24]
 8002aec:	4a52      	ldr	r2, [pc, #328]	; (8002c38 <HAL_GPIO_Init+0x2d0>)
 8002aee:	f043 0301 	orr.w	r3, r3, #1
 8002af2:	6193      	str	r3, [r2, #24]
 8002af4:	4b50      	ldr	r3, [pc, #320]	; (8002c38 <HAL_GPIO_Init+0x2d0>)
 8002af6:	699b      	ldr	r3, [r3, #24]
 8002af8:	f003 0301 	and.w	r3, r3, #1
 8002afc:	60bb      	str	r3, [r7, #8]
 8002afe:	68bb      	ldr	r3, [r7, #8]
 8002b00:	4a4e      	ldr	r2, [pc, #312]	; (8002c3c <HAL_GPIO_Init+0x2d4>)
 8002b02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b04:	089b      	lsrs	r3, r3, #2
 8002b06:	3302      	adds	r3, #2
 8002b08:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002b0c:	60fb      	str	r3, [r7, #12]
 8002b0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b10:	f003 0303 	and.w	r3, r3, #3
 8002b14:	009b      	lsls	r3, r3, #2
 8002b16:	220f      	movs	r2, #15
 8002b18:	fa02 f303 	lsl.w	r3, r2, r3
 8002b1c:	43db      	mvns	r3, r3
 8002b1e:	68fa      	ldr	r2, [r7, #12]
 8002b20:	4013      	ands	r3, r2
 8002b22:	60fb      	str	r3, [r7, #12]
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	4a46      	ldr	r2, [pc, #280]	; (8002c40 <HAL_GPIO_Init+0x2d8>)
 8002b28:	4293      	cmp	r3, r2
 8002b2a:	d01f      	beq.n	8002b6c <HAL_GPIO_Init+0x204>
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	4a45      	ldr	r2, [pc, #276]	; (8002c44 <HAL_GPIO_Init+0x2dc>)
 8002b30:	4293      	cmp	r3, r2
 8002b32:	d019      	beq.n	8002b68 <HAL_GPIO_Init+0x200>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	4a44      	ldr	r2, [pc, #272]	; (8002c48 <HAL_GPIO_Init+0x2e0>)
 8002b38:	4293      	cmp	r3, r2
 8002b3a:	d013      	beq.n	8002b64 <HAL_GPIO_Init+0x1fc>
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	4a43      	ldr	r2, [pc, #268]	; (8002c4c <HAL_GPIO_Init+0x2e4>)
 8002b40:	4293      	cmp	r3, r2
 8002b42:	d00d      	beq.n	8002b60 <HAL_GPIO_Init+0x1f8>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	4a42      	ldr	r2, [pc, #264]	; (8002c50 <HAL_GPIO_Init+0x2e8>)
 8002b48:	4293      	cmp	r3, r2
 8002b4a:	d007      	beq.n	8002b5c <HAL_GPIO_Init+0x1f4>
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	4a41      	ldr	r2, [pc, #260]	; (8002c54 <HAL_GPIO_Init+0x2ec>)
 8002b50:	4293      	cmp	r3, r2
 8002b52:	d101      	bne.n	8002b58 <HAL_GPIO_Init+0x1f0>
 8002b54:	2305      	movs	r3, #5
 8002b56:	e00a      	b.n	8002b6e <HAL_GPIO_Init+0x206>
 8002b58:	2306      	movs	r3, #6
 8002b5a:	e008      	b.n	8002b6e <HAL_GPIO_Init+0x206>
 8002b5c:	2304      	movs	r3, #4
 8002b5e:	e006      	b.n	8002b6e <HAL_GPIO_Init+0x206>
 8002b60:	2303      	movs	r3, #3
 8002b62:	e004      	b.n	8002b6e <HAL_GPIO_Init+0x206>
 8002b64:	2302      	movs	r3, #2
 8002b66:	e002      	b.n	8002b6e <HAL_GPIO_Init+0x206>
 8002b68:	2301      	movs	r3, #1
 8002b6a:	e000      	b.n	8002b6e <HAL_GPIO_Init+0x206>
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002b70:	f002 0203 	and.w	r2, r2, #3
 8002b74:	0092      	lsls	r2, r2, #2
 8002b76:	4093      	lsls	r3, r2
 8002b78:	68fa      	ldr	r2, [r7, #12]
 8002b7a:	4313      	orrs	r3, r2
 8002b7c:	60fb      	str	r3, [r7, #12]
 8002b7e:	492f      	ldr	r1, [pc, #188]	; (8002c3c <HAL_GPIO_Init+0x2d4>)
 8002b80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b82:	089b      	lsrs	r3, r3, #2
 8002b84:	3302      	adds	r3, #2
 8002b86:	68fa      	ldr	r2, [r7, #12]
 8002b88:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002b8c:	683b      	ldr	r3, [r7, #0]
 8002b8e:	685b      	ldr	r3, [r3, #4]
 8002b90:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d006      	beq.n	8002ba6 <HAL_GPIO_Init+0x23e>
 8002b98:	4b2f      	ldr	r3, [pc, #188]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002b9a:	681a      	ldr	r2, [r3, #0]
 8002b9c:	492e      	ldr	r1, [pc, #184]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002b9e:	69bb      	ldr	r3, [r7, #24]
 8002ba0:	4313      	orrs	r3, r2
 8002ba2:	600b      	str	r3, [r1, #0]
 8002ba4:	e006      	b.n	8002bb4 <HAL_GPIO_Init+0x24c>
 8002ba6:	4b2c      	ldr	r3, [pc, #176]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002ba8:	681a      	ldr	r2, [r3, #0]
 8002baa:	69bb      	ldr	r3, [r7, #24]
 8002bac:	43db      	mvns	r3, r3
 8002bae:	492a      	ldr	r1, [pc, #168]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bb0:	4013      	ands	r3, r2
 8002bb2:	600b      	str	r3, [r1, #0]
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	685b      	ldr	r3, [r3, #4]
 8002bb8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d006      	beq.n	8002bce <HAL_GPIO_Init+0x266>
 8002bc0:	4b25      	ldr	r3, [pc, #148]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bc2:	685a      	ldr	r2, [r3, #4]
 8002bc4:	4924      	ldr	r1, [pc, #144]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bc6:	69bb      	ldr	r3, [r7, #24]
 8002bc8:	4313      	orrs	r3, r2
 8002bca:	604b      	str	r3, [r1, #4]
 8002bcc:	e006      	b.n	8002bdc <HAL_GPIO_Init+0x274>
 8002bce:	4b22      	ldr	r3, [pc, #136]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bd0:	685a      	ldr	r2, [r3, #4]
 8002bd2:	69bb      	ldr	r3, [r7, #24]
 8002bd4:	43db      	mvns	r3, r3
 8002bd6:	4920      	ldr	r1, [pc, #128]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bd8:	4013      	ands	r3, r2
 8002bda:	604b      	str	r3, [r1, #4]
 8002bdc:	683b      	ldr	r3, [r7, #0]
 8002bde:	685b      	ldr	r3, [r3, #4]
 8002be0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002be4:	2b00      	cmp	r3, #0
 8002be6:	d006      	beq.n	8002bf6 <HAL_GPIO_Init+0x28e>
 8002be8:	4b1b      	ldr	r3, [pc, #108]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bea:	689a      	ldr	r2, [r3, #8]
 8002bec:	491a      	ldr	r1, [pc, #104]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bee:	69bb      	ldr	r3, [r7, #24]
 8002bf0:	4313      	orrs	r3, r2
 8002bf2:	608b      	str	r3, [r1, #8]
 8002bf4:	e006      	b.n	8002c04 <HAL_GPIO_Init+0x29c>
 8002bf6:	4b18      	ldr	r3, [pc, #96]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002bf8:	689a      	ldr	r2, [r3, #8]
 8002bfa:	69bb      	ldr	r3, [r7, #24]
 8002bfc:	43db      	mvns	r3, r3
 8002bfe:	4916      	ldr	r1, [pc, #88]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002c00:	4013      	ands	r3, r2
 8002c02:	608b      	str	r3, [r1, #8]
 8002c04:	683b      	ldr	r3, [r7, #0]
 8002c06:	685b      	ldr	r3, [r3, #4]
 8002c08:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d025      	beq.n	8002c5c <HAL_GPIO_Init+0x2f4>
 8002c10:	4b11      	ldr	r3, [pc, #68]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002c12:	68da      	ldr	r2, [r3, #12]
 8002c14:	4910      	ldr	r1, [pc, #64]	; (8002c58 <HAL_GPIO_Init+0x2f0>)
 8002c16:	69bb      	ldr	r3, [r7, #24]
 8002c18:	4313      	orrs	r3, r2
 8002c1a:	60cb      	str	r3, [r1, #12]
 8002c1c:	e025      	b.n	8002c6a <HAL_GPIO_Init+0x302>
 8002c1e:	bf00      	nop
 8002c20:	10320000 	.word	0x10320000
 8002c24:	10310000 	.word	0x10310000
 8002c28:	10220000 	.word	0x10220000
 8002c2c:	10210000 	.word	0x10210000
 8002c30:	10120000 	.word	0x10120000
 8002c34:	10110000 	.word	0x10110000
 8002c38:	40021000 	.word	0x40021000
 8002c3c:	40010000 	.word	0x40010000
 8002c40:	40010800 	.word	0x40010800
 8002c44:	40010c00 	.word	0x40010c00
 8002c48:	40011000 	.word	0x40011000
 8002c4c:	40011400 	.word	0x40011400
 8002c50:	40011800 	.word	0x40011800
 8002c54:	40011c00 	.word	0x40011c00
 8002c58:	40010400 	.word	0x40010400
 8002c5c:	4b0b      	ldr	r3, [pc, #44]	; (8002c8c <HAL_GPIO_Init+0x324>)
 8002c5e:	68da      	ldr	r2, [r3, #12]
 8002c60:	69bb      	ldr	r3, [r7, #24]
 8002c62:	43db      	mvns	r3, r3
 8002c64:	4909      	ldr	r1, [pc, #36]	; (8002c8c <HAL_GPIO_Init+0x324>)
 8002c66:	4013      	ands	r3, r2
 8002c68:	60cb      	str	r3, [r1, #12]
 8002c6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c6c:	3301      	adds	r3, #1
 8002c6e:	627b      	str	r3, [r7, #36]	; 0x24
 8002c70:	683b      	ldr	r3, [r7, #0]
 8002c72:	681a      	ldr	r2, [r3, #0]
 8002c74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c76:	fa22 f303 	lsr.w	r3, r2, r3
 8002c7a:	2b00      	cmp	r3, #0
 8002c7c:	f47f ae7e 	bne.w	800297c <HAL_GPIO_Init+0x14>
 8002c80:	bf00      	nop
 8002c82:	bf00      	nop
 8002c84:	372c      	adds	r7, #44	; 0x2c
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bc80      	pop	{r7}
 8002c8a:	4770      	bx	lr
 8002c8c:	40010400 	.word	0x40010400

08002c90 <HAL_GPIO_ReadPin>:
 8002c90:	b480      	push	{r7}
 8002c92:	b085      	sub	sp, #20
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	6078      	str	r0, [r7, #4]
 8002c98:	460b      	mov	r3, r1
 8002c9a:	807b      	strh	r3, [r7, #2]
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	689a      	ldr	r2, [r3, #8]
 8002ca0:	887b      	ldrh	r3, [r7, #2]
 8002ca2:	4013      	ands	r3, r2
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d002      	beq.n	8002cae <HAL_GPIO_ReadPin+0x1e>
 8002ca8:	2301      	movs	r3, #1
 8002caa:	73fb      	strb	r3, [r7, #15]
 8002cac:	e001      	b.n	8002cb2 <HAL_GPIO_ReadPin+0x22>
 8002cae:	2300      	movs	r3, #0
 8002cb0:	73fb      	strb	r3, [r7, #15]
 8002cb2:	7bfb      	ldrb	r3, [r7, #15]
 8002cb4:	4618      	mov	r0, r3
 8002cb6:	3714      	adds	r7, #20
 8002cb8:	46bd      	mov	sp, r7
 8002cba:	bc80      	pop	{r7}
 8002cbc:	4770      	bx	lr

08002cbe <HAL_GPIO_WritePin>:
 8002cbe:	b480      	push	{r7}
 8002cc0:	b083      	sub	sp, #12
 8002cc2:	af00      	add	r7, sp, #0
 8002cc4:	6078      	str	r0, [r7, #4]
 8002cc6:	460b      	mov	r3, r1
 8002cc8:	807b      	strh	r3, [r7, #2]
 8002cca:	4613      	mov	r3, r2
 8002ccc:	707b      	strb	r3, [r7, #1]
 8002cce:	787b      	ldrb	r3, [r7, #1]
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d003      	beq.n	8002cdc <HAL_GPIO_WritePin+0x1e>
 8002cd4:	887a      	ldrh	r2, [r7, #2]
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	611a      	str	r2, [r3, #16]
 8002cda:	e003      	b.n	8002ce4 <HAL_GPIO_WritePin+0x26>
 8002cdc:	887b      	ldrh	r3, [r7, #2]
 8002cde:	041a      	lsls	r2, r3, #16
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	611a      	str	r2, [r3, #16]
 8002ce4:	bf00      	nop
 8002ce6:	370c      	adds	r7, #12
 8002ce8:	46bd      	mov	sp, r7
 8002cea:	bc80      	pop	{r7}
 8002cec:	4770      	bx	lr
	...

08002cf0 <HAL_GPIO_EXTI_IRQHandler>:
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b082      	sub	sp, #8
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	4603      	mov	r3, r0
 8002cf8:	80fb      	strh	r3, [r7, #6]
 8002cfa:	4b08      	ldr	r3, [pc, #32]	; (8002d1c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002cfc:	695a      	ldr	r2, [r3, #20]
 8002cfe:	88fb      	ldrh	r3, [r7, #6]
 8002d00:	4013      	ands	r3, r2
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d006      	beq.n	8002d14 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8002d06:	4a05      	ldr	r2, [pc, #20]	; (8002d1c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002d08:	88fb      	ldrh	r3, [r7, #6]
 8002d0a:	6153      	str	r3, [r2, #20]
 8002d0c:	88fb      	ldrh	r3, [r7, #6]
 8002d0e:	4618      	mov	r0, r3
 8002d10:	f7fe fd1c 	bl	800174c <HAL_GPIO_EXTI_Callback>
 8002d14:	bf00      	nop
 8002d16:	3708      	adds	r7, #8
 8002d18:	46bd      	mov	sp, r7
 8002d1a:	bd80      	pop	{r7, pc}
 8002d1c:	40010400 	.word	0x40010400

08002d20 <HAL_I2C_Init>:
 8002d20:	b580      	push	{r7, lr}
 8002d22:	b084      	sub	sp, #16
 8002d24:	af00      	add	r7, sp, #0
 8002d26:	6078      	str	r0, [r7, #4]
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d101      	bne.n	8002d32 <HAL_I2C_Init+0x12>
 8002d2e:	2301      	movs	r3, #1
 8002d30:	e12b      	b.n	8002f8a <HAL_I2C_Init+0x26a>
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002d38:	b2db      	uxtb	r3, r3
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d106      	bne.n	8002d4c <HAL_I2C_Init+0x2c>
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	2200      	movs	r2, #0
 8002d42:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d46:	6878      	ldr	r0, [r7, #4]
 8002d48:	f7fe fbde 	bl	8001508 <HAL_I2C_MspInit>
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	2224      	movs	r2, #36	; 0x24
 8002d50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	681a      	ldr	r2, [r3, #0]
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	f022 0201 	bic.w	r2, r2, #1
 8002d62:	601a      	str	r2, [r3, #0]
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	681b      	ldr	r3, [r3, #0]
 8002d68:	681a      	ldr	r2, [r3, #0]
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002d72:	601a      	str	r2, [r3, #0]
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	681a      	ldr	r2, [r3, #0]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002d82:	601a      	str	r2, [r3, #0]
 8002d84:	f000 fffa 	bl	8003d7c <HAL_RCC_GetPCLK1Freq>
 8002d88:	60f8      	str	r0, [r7, #12]
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	685b      	ldr	r3, [r3, #4]
 8002d8e:	4a81      	ldr	r2, [pc, #516]	; (8002f94 <HAL_I2C_Init+0x274>)
 8002d90:	4293      	cmp	r3, r2
 8002d92:	d807      	bhi.n	8002da4 <HAL_I2C_Init+0x84>
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	4a80      	ldr	r2, [pc, #512]	; (8002f98 <HAL_I2C_Init+0x278>)
 8002d98:	4293      	cmp	r3, r2
 8002d9a:	bf94      	ite	ls
 8002d9c:	2301      	movls	r3, #1
 8002d9e:	2300      	movhi	r3, #0
 8002da0:	b2db      	uxtb	r3, r3
 8002da2:	e006      	b.n	8002db2 <HAL_I2C_Init+0x92>
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	4a7d      	ldr	r2, [pc, #500]	; (8002f9c <HAL_I2C_Init+0x27c>)
 8002da8:	4293      	cmp	r3, r2
 8002daa:	bf94      	ite	ls
 8002dac:	2301      	movls	r3, #1
 8002dae:	2300      	movhi	r3, #0
 8002db0:	b2db      	uxtb	r3, r3
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d001      	beq.n	8002dba <HAL_I2C_Init+0x9a>
 8002db6:	2301      	movs	r3, #1
 8002db8:	e0e7      	b.n	8002f8a <HAL_I2C_Init+0x26a>
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	4a78      	ldr	r2, [pc, #480]	; (8002fa0 <HAL_I2C_Init+0x280>)
 8002dbe:	fba2 2303 	umull	r2, r3, r2, r3
 8002dc2:	0c9b      	lsrs	r3, r3, #18
 8002dc4:	60bb      	str	r3, [r7, #8]
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	685b      	ldr	r3, [r3, #4]
 8002dcc:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	68ba      	ldr	r2, [r7, #8]
 8002dd6:	430a      	orrs	r2, r1
 8002dd8:	605a      	str	r2, [r3, #4]
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	6a1b      	ldr	r3, [r3, #32]
 8002de0:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	685b      	ldr	r3, [r3, #4]
 8002de8:	4a6a      	ldr	r2, [pc, #424]	; (8002f94 <HAL_I2C_Init+0x274>)
 8002dea:	4293      	cmp	r3, r2
 8002dec:	d802      	bhi.n	8002df4 <HAL_I2C_Init+0xd4>
 8002dee:	68bb      	ldr	r3, [r7, #8]
 8002df0:	3301      	adds	r3, #1
 8002df2:	e009      	b.n	8002e08 <HAL_I2C_Init+0xe8>
 8002df4:	68bb      	ldr	r3, [r7, #8]
 8002df6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002dfa:	fb02 f303 	mul.w	r3, r2, r3
 8002dfe:	4a69      	ldr	r2, [pc, #420]	; (8002fa4 <HAL_I2C_Init+0x284>)
 8002e00:	fba2 2303 	umull	r2, r3, r2, r3
 8002e04:	099b      	lsrs	r3, r3, #6
 8002e06:	3301      	adds	r3, #1
 8002e08:	687a      	ldr	r2, [r7, #4]
 8002e0a:	6812      	ldr	r2, [r2, #0]
 8002e0c:	430b      	orrs	r3, r1
 8002e0e:	6213      	str	r3, [r2, #32]
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	69db      	ldr	r3, [r3, #28]
 8002e16:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8002e1a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	685b      	ldr	r3, [r3, #4]
 8002e22:	495c      	ldr	r1, [pc, #368]	; (8002f94 <HAL_I2C_Init+0x274>)
 8002e24:	428b      	cmp	r3, r1
 8002e26:	d819      	bhi.n	8002e5c <HAL_I2C_Init+0x13c>
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	1e59      	subs	r1, r3, #1
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	685b      	ldr	r3, [r3, #4]
 8002e30:	005b      	lsls	r3, r3, #1
 8002e32:	fbb1 f3f3 	udiv	r3, r1, r3
 8002e36:	1c59      	adds	r1, r3, #1
 8002e38:	f640 73fc 	movw	r3, #4092	; 0xffc
 8002e3c:	400b      	ands	r3, r1
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d00a      	beq.n	8002e58 <HAL_I2C_Init+0x138>
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	1e59      	subs	r1, r3, #1
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	685b      	ldr	r3, [r3, #4]
 8002e4a:	005b      	lsls	r3, r3, #1
 8002e4c:	fbb1 f3f3 	udiv	r3, r1, r3
 8002e50:	3301      	adds	r3, #1
 8002e52:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e56:	e051      	b.n	8002efc <HAL_I2C_Init+0x1dc>
 8002e58:	2304      	movs	r3, #4
 8002e5a:	e04f      	b.n	8002efc <HAL_I2C_Init+0x1dc>
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	689b      	ldr	r3, [r3, #8]
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d111      	bne.n	8002e88 <HAL_I2C_Init+0x168>
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	1e58      	subs	r0, r3, #1
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	6859      	ldr	r1, [r3, #4]
 8002e6c:	460b      	mov	r3, r1
 8002e6e:	005b      	lsls	r3, r3, #1
 8002e70:	440b      	add	r3, r1
 8002e72:	fbb0 f3f3 	udiv	r3, r0, r3
 8002e76:	3301      	adds	r3, #1
 8002e78:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	bf0c      	ite	eq
 8002e80:	2301      	moveq	r3, #1
 8002e82:	2300      	movne	r3, #0
 8002e84:	b2db      	uxtb	r3, r3
 8002e86:	e012      	b.n	8002eae <HAL_I2C_Init+0x18e>
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	1e58      	subs	r0, r3, #1
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	6859      	ldr	r1, [r3, #4]
 8002e90:	460b      	mov	r3, r1
 8002e92:	009b      	lsls	r3, r3, #2
 8002e94:	440b      	add	r3, r1
 8002e96:	0099      	lsls	r1, r3, #2
 8002e98:	440b      	add	r3, r1
 8002e9a:	fbb0 f3f3 	udiv	r3, r0, r3
 8002e9e:	3301      	adds	r3, #1
 8002ea0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	bf0c      	ite	eq
 8002ea8:	2301      	moveq	r3, #1
 8002eaa:	2300      	movne	r3, #0
 8002eac:	b2db      	uxtb	r3, r3
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d001      	beq.n	8002eb6 <HAL_I2C_Init+0x196>
 8002eb2:	2301      	movs	r3, #1
 8002eb4:	e022      	b.n	8002efc <HAL_I2C_Init+0x1dc>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	689b      	ldr	r3, [r3, #8]
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d10e      	bne.n	8002edc <HAL_I2C_Init+0x1bc>
 8002ebe:	68fb      	ldr	r3, [r7, #12]
 8002ec0:	1e58      	subs	r0, r3, #1
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	6859      	ldr	r1, [r3, #4]
 8002ec6:	460b      	mov	r3, r1
 8002ec8:	005b      	lsls	r3, r3, #1
 8002eca:	440b      	add	r3, r1
 8002ecc:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ed0:	3301      	adds	r3, #1
 8002ed2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ed6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002eda:	e00f      	b.n	8002efc <HAL_I2C_Init+0x1dc>
 8002edc:	68fb      	ldr	r3, [r7, #12]
 8002ede:	1e58      	subs	r0, r3, #1
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	6859      	ldr	r1, [r3, #4]
 8002ee4:	460b      	mov	r3, r1
 8002ee6:	009b      	lsls	r3, r3, #2
 8002ee8:	440b      	add	r3, r1
 8002eea:	0099      	lsls	r1, r3, #2
 8002eec:	440b      	add	r3, r1
 8002eee:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ef2:	3301      	adds	r3, #1
 8002ef4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ef8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002efc:	6879      	ldr	r1, [r7, #4]
 8002efe:	6809      	ldr	r1, [r1, #0]
 8002f00:	4313      	orrs	r3, r2
 8002f02:	61cb      	str	r3, [r1, #28]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	69da      	ldr	r2, [r3, #28]
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	6a1b      	ldr	r3, [r3, #32]
 8002f16:	431a      	orrs	r2, r3
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	430a      	orrs	r2, r1
 8002f1e:	601a      	str	r2, [r3, #0]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	689b      	ldr	r3, [r3, #8]
 8002f26:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8002f2a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8002f2e:	687a      	ldr	r2, [r7, #4]
 8002f30:	6911      	ldr	r1, [r2, #16]
 8002f32:	687a      	ldr	r2, [r7, #4]
 8002f34:	68d2      	ldr	r2, [r2, #12]
 8002f36:	4311      	orrs	r1, r2
 8002f38:	687a      	ldr	r2, [r7, #4]
 8002f3a:	6812      	ldr	r2, [r2, #0]
 8002f3c:	430b      	orrs	r3, r1
 8002f3e:	6093      	str	r3, [r2, #8]
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	68db      	ldr	r3, [r3, #12]
 8002f46:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	695a      	ldr	r2, [r3, #20]
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	699b      	ldr	r3, [r3, #24]
 8002f52:	431a      	orrs	r2, r3
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	430a      	orrs	r2, r1
 8002f5a:	60da      	str	r2, [r3, #12]
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	681a      	ldr	r2, [r3, #0]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	f042 0201 	orr.w	r2, r2, #1
 8002f6a:	601a      	str	r2, [r3, #0]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	2200      	movs	r2, #0
 8002f70:	641a      	str	r2, [r3, #64]	; 0x40
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	2220      	movs	r2, #32
 8002f76:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	2200      	movs	r2, #0
 8002f7e:	631a      	str	r2, [r3, #48]	; 0x30
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	2200      	movs	r2, #0
 8002f84:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002f88:	2300      	movs	r3, #0
 8002f8a:	4618      	mov	r0, r3
 8002f8c:	3710      	adds	r7, #16
 8002f8e:	46bd      	mov	sp, r7
 8002f90:	bd80      	pop	{r7, pc}
 8002f92:	bf00      	nop
 8002f94:	000186a0 	.word	0x000186a0
 8002f98:	001e847f 	.word	0x001e847f
 8002f9c:	003d08ff 	.word	0x003d08ff
 8002fa0:	431bde83 	.word	0x431bde83
 8002fa4:	10624dd3 	.word	0x10624dd3

08002fa8 <HAL_I2C_Mem_Write>:
 8002fa8:	b580      	push	{r7, lr}
 8002faa:	b088      	sub	sp, #32
 8002fac:	af02      	add	r7, sp, #8
 8002fae:	60f8      	str	r0, [r7, #12]
 8002fb0:	4608      	mov	r0, r1
 8002fb2:	4611      	mov	r1, r2
 8002fb4:	461a      	mov	r2, r3
 8002fb6:	4603      	mov	r3, r0
 8002fb8:	817b      	strh	r3, [r7, #10]
 8002fba:	460b      	mov	r3, r1
 8002fbc:	813b      	strh	r3, [r7, #8]
 8002fbe:	4613      	mov	r3, r2
 8002fc0:	80fb      	strh	r3, [r7, #6]
 8002fc2:	f7fe ffdb 	bl	8001f7c <HAL_GetTick>
 8002fc6:	6178      	str	r0, [r7, #20]
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002fce:	b2db      	uxtb	r3, r3
 8002fd0:	2b20      	cmp	r3, #32
 8002fd2:	f040 80d9 	bne.w	8003188 <HAL_I2C_Mem_Write+0x1e0>
 8002fd6:	697b      	ldr	r3, [r7, #20]
 8002fd8:	9300      	str	r3, [sp, #0]
 8002fda:	2319      	movs	r3, #25
 8002fdc:	2201      	movs	r2, #1
 8002fde:	496d      	ldr	r1, [pc, #436]	; (8003194 <HAL_I2C_Mem_Write+0x1ec>)
 8002fe0:	68f8      	ldr	r0, [r7, #12]
 8002fe2:	f000 f971 	bl	80032c8 <I2C_WaitOnFlagUntilTimeout>
 8002fe6:	4603      	mov	r3, r0
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d001      	beq.n	8002ff0 <HAL_I2C_Mem_Write+0x48>
 8002fec:	2302      	movs	r3, #2
 8002fee:	e0cc      	b.n	800318a <HAL_I2C_Mem_Write+0x1e2>
 8002ff0:	68fb      	ldr	r3, [r7, #12]
 8002ff2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002ff6:	2b01      	cmp	r3, #1
 8002ff8:	d101      	bne.n	8002ffe <HAL_I2C_Mem_Write+0x56>
 8002ffa:	2302      	movs	r3, #2
 8002ffc:	e0c5      	b.n	800318a <HAL_I2C_Mem_Write+0x1e2>
 8002ffe:	68fb      	ldr	r3, [r7, #12]
 8003000:	2201      	movs	r2, #1
 8003002:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003006:	68fb      	ldr	r3, [r7, #12]
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	681b      	ldr	r3, [r3, #0]
 800300c:	f003 0301 	and.w	r3, r3, #1
 8003010:	2b01      	cmp	r3, #1
 8003012:	d007      	beq.n	8003024 <HAL_I2C_Mem_Write+0x7c>
 8003014:	68fb      	ldr	r3, [r7, #12]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	681a      	ldr	r2, [r3, #0]
 800301a:	68fb      	ldr	r3, [r7, #12]
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	f042 0201 	orr.w	r2, r2, #1
 8003022:	601a      	str	r2, [r3, #0]
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	681a      	ldr	r2, [r3, #0]
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003032:	601a      	str	r2, [r3, #0]
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	2221      	movs	r2, #33	; 0x21
 8003038:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	2240      	movs	r2, #64	; 0x40
 8003040:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	2200      	movs	r2, #0
 8003048:	641a      	str	r2, [r3, #64]	; 0x40
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	6a3a      	ldr	r2, [r7, #32]
 800304e:	625a      	str	r2, [r3, #36]	; 0x24
 8003050:	68fb      	ldr	r3, [r7, #12]
 8003052:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003054:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800305a:	b29a      	uxth	r2, r3
 800305c:	68fb      	ldr	r3, [r7, #12]
 800305e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	4a4d      	ldr	r2, [pc, #308]	; (8003198 <HAL_I2C_Mem_Write+0x1f0>)
 8003064:	62da      	str	r2, [r3, #44]	; 0x2c
 8003066:	88f8      	ldrh	r0, [r7, #6]
 8003068:	893a      	ldrh	r2, [r7, #8]
 800306a:	8979      	ldrh	r1, [r7, #10]
 800306c:	697b      	ldr	r3, [r7, #20]
 800306e:	9301      	str	r3, [sp, #4]
 8003070:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003072:	9300      	str	r3, [sp, #0]
 8003074:	4603      	mov	r3, r0
 8003076:	68f8      	ldr	r0, [r7, #12]
 8003078:	f000 f890 	bl	800319c <I2C_RequestMemoryWrite>
 800307c:	4603      	mov	r3, r0
 800307e:	2b00      	cmp	r3, #0
 8003080:	d052      	beq.n	8003128 <HAL_I2C_Mem_Write+0x180>
 8003082:	2301      	movs	r3, #1
 8003084:	e081      	b.n	800318a <HAL_I2C_Mem_Write+0x1e2>
 8003086:	697a      	ldr	r2, [r7, #20]
 8003088:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800308a:	68f8      	ldr	r0, [r7, #12]
 800308c:	f000 f9f2 	bl	8003474 <I2C_WaitOnTXEFlagUntilTimeout>
 8003090:	4603      	mov	r3, r0
 8003092:	2b00      	cmp	r3, #0
 8003094:	d00d      	beq.n	80030b2 <HAL_I2C_Mem_Write+0x10a>
 8003096:	68fb      	ldr	r3, [r7, #12]
 8003098:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800309a:	2b04      	cmp	r3, #4
 800309c:	d107      	bne.n	80030ae <HAL_I2C_Mem_Write+0x106>
 800309e:	68fb      	ldr	r3, [r7, #12]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	681a      	ldr	r2, [r3, #0]
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80030ac:	601a      	str	r2, [r3, #0]
 80030ae:	2301      	movs	r3, #1
 80030b0:	e06b      	b.n	800318a <HAL_I2C_Mem_Write+0x1e2>
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030b6:	781a      	ldrb	r2, [r3, #0]
 80030b8:	68fb      	ldr	r3, [r7, #12]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	611a      	str	r2, [r3, #16]
 80030be:	68fb      	ldr	r3, [r7, #12]
 80030c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030c2:	1c5a      	adds	r2, r3, #1
 80030c4:	68fb      	ldr	r3, [r7, #12]
 80030c6:	625a      	str	r2, [r3, #36]	; 0x24
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80030cc:	3b01      	subs	r3, #1
 80030ce:	b29a      	uxth	r2, r3
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	851a      	strh	r2, [r3, #40]	; 0x28
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80030d8:	b29b      	uxth	r3, r3
 80030da:	3b01      	subs	r3, #1
 80030dc:	b29a      	uxth	r2, r3
 80030de:	68fb      	ldr	r3, [r7, #12]
 80030e0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80030e2:	68fb      	ldr	r3, [r7, #12]
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	695b      	ldr	r3, [r3, #20]
 80030e8:	f003 0304 	and.w	r3, r3, #4
 80030ec:	2b04      	cmp	r3, #4
 80030ee:	d11b      	bne.n	8003128 <HAL_I2C_Mem_Write+0x180>
 80030f0:	68fb      	ldr	r3, [r7, #12]
 80030f2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d017      	beq.n	8003128 <HAL_I2C_Mem_Write+0x180>
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030fc:	781a      	ldrb	r2, [r3, #0]
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	611a      	str	r2, [r3, #16]
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003108:	1c5a      	adds	r2, r3, #1
 800310a:	68fb      	ldr	r3, [r7, #12]
 800310c:	625a      	str	r2, [r3, #36]	; 0x24
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003112:	3b01      	subs	r3, #1
 8003114:	b29a      	uxth	r2, r3
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	851a      	strh	r2, [r3, #40]	; 0x28
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800311e:	b29b      	uxth	r3, r3
 8003120:	3b01      	subs	r3, #1
 8003122:	b29a      	uxth	r2, r3
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800312c:	2b00      	cmp	r3, #0
 800312e:	d1aa      	bne.n	8003086 <HAL_I2C_Mem_Write+0xde>
 8003130:	697a      	ldr	r2, [r7, #20]
 8003132:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003134:	68f8      	ldr	r0, [r7, #12]
 8003136:	f000 f9de 	bl	80034f6 <I2C_WaitOnBTFFlagUntilTimeout>
 800313a:	4603      	mov	r3, r0
 800313c:	2b00      	cmp	r3, #0
 800313e:	d00d      	beq.n	800315c <HAL_I2C_Mem_Write+0x1b4>
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003144:	2b04      	cmp	r3, #4
 8003146:	d107      	bne.n	8003158 <HAL_I2C_Mem_Write+0x1b0>
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	681a      	ldr	r2, [r3, #0]
 800314e:	68fb      	ldr	r3, [r7, #12]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003156:	601a      	str	r2, [r3, #0]
 8003158:	2301      	movs	r3, #1
 800315a:	e016      	b.n	800318a <HAL_I2C_Mem_Write+0x1e2>
 800315c:	68fb      	ldr	r3, [r7, #12]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	681a      	ldr	r2, [r3, #0]
 8003162:	68fb      	ldr	r3, [r7, #12]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800316a:	601a      	str	r2, [r3, #0]
 800316c:	68fb      	ldr	r3, [r7, #12]
 800316e:	2220      	movs	r2, #32
 8003170:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003174:	68fb      	ldr	r3, [r7, #12]
 8003176:	2200      	movs	r2, #0
 8003178:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	2200      	movs	r2, #0
 8003180:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003184:	2300      	movs	r3, #0
 8003186:	e000      	b.n	800318a <HAL_I2C_Mem_Write+0x1e2>
 8003188:	2302      	movs	r3, #2
 800318a:	4618      	mov	r0, r3
 800318c:	3718      	adds	r7, #24
 800318e:	46bd      	mov	sp, r7
 8003190:	bd80      	pop	{r7, pc}
 8003192:	bf00      	nop
 8003194:	00100002 	.word	0x00100002
 8003198:	ffff0000 	.word	0xffff0000

0800319c <I2C_RequestMemoryWrite>:
 800319c:	b580      	push	{r7, lr}
 800319e:	b088      	sub	sp, #32
 80031a0:	af02      	add	r7, sp, #8
 80031a2:	60f8      	str	r0, [r7, #12]
 80031a4:	4608      	mov	r0, r1
 80031a6:	4611      	mov	r1, r2
 80031a8:	461a      	mov	r2, r3
 80031aa:	4603      	mov	r3, r0
 80031ac:	817b      	strh	r3, [r7, #10]
 80031ae:	460b      	mov	r3, r1
 80031b0:	813b      	strh	r3, [r7, #8]
 80031b2:	4613      	mov	r3, r2
 80031b4:	80fb      	strh	r3, [r7, #6]
 80031b6:	68fb      	ldr	r3, [r7, #12]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	681a      	ldr	r2, [r3, #0]
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80031c4:	601a      	str	r2, [r3, #0]
 80031c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031c8:	9300      	str	r3, [sp, #0]
 80031ca:	6a3b      	ldr	r3, [r7, #32]
 80031cc:	2200      	movs	r2, #0
 80031ce:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80031d2:	68f8      	ldr	r0, [r7, #12]
 80031d4:	f000 f878 	bl	80032c8 <I2C_WaitOnFlagUntilTimeout>
 80031d8:	4603      	mov	r3, r0
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d00d      	beq.n	80031fa <I2C_RequestMemoryWrite+0x5e>
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031e8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80031ec:	d103      	bne.n	80031f6 <I2C_RequestMemoryWrite+0x5a>
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80031f4:	641a      	str	r2, [r3, #64]	; 0x40
 80031f6:	2303      	movs	r3, #3
 80031f8:	e05f      	b.n	80032ba <I2C_RequestMemoryWrite+0x11e>
 80031fa:	897b      	ldrh	r3, [r7, #10]
 80031fc:	b2db      	uxtb	r3, r3
 80031fe:	461a      	mov	r2, r3
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003208:	611a      	str	r2, [r3, #16]
 800320a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800320c:	6a3a      	ldr	r2, [r7, #32]
 800320e:	492d      	ldr	r1, [pc, #180]	; (80032c4 <I2C_RequestMemoryWrite+0x128>)
 8003210:	68f8      	ldr	r0, [r7, #12]
 8003212:	f000 f8b0 	bl	8003376 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003216:	4603      	mov	r3, r0
 8003218:	2b00      	cmp	r3, #0
 800321a:	d001      	beq.n	8003220 <I2C_RequestMemoryWrite+0x84>
 800321c:	2301      	movs	r3, #1
 800321e:	e04c      	b.n	80032ba <I2C_RequestMemoryWrite+0x11e>
 8003220:	2300      	movs	r3, #0
 8003222:	617b      	str	r3, [r7, #20]
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	695b      	ldr	r3, [r3, #20]
 800322a:	617b      	str	r3, [r7, #20]
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	699b      	ldr	r3, [r3, #24]
 8003232:	617b      	str	r3, [r7, #20]
 8003234:	697b      	ldr	r3, [r7, #20]
 8003236:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003238:	6a39      	ldr	r1, [r7, #32]
 800323a:	68f8      	ldr	r0, [r7, #12]
 800323c:	f000 f91a 	bl	8003474 <I2C_WaitOnTXEFlagUntilTimeout>
 8003240:	4603      	mov	r3, r0
 8003242:	2b00      	cmp	r3, #0
 8003244:	d00d      	beq.n	8003262 <I2C_RequestMemoryWrite+0xc6>
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800324a:	2b04      	cmp	r3, #4
 800324c:	d107      	bne.n	800325e <I2C_RequestMemoryWrite+0xc2>
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	681a      	ldr	r2, [r3, #0]
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800325c:	601a      	str	r2, [r3, #0]
 800325e:	2301      	movs	r3, #1
 8003260:	e02b      	b.n	80032ba <I2C_RequestMemoryWrite+0x11e>
 8003262:	88fb      	ldrh	r3, [r7, #6]
 8003264:	2b01      	cmp	r3, #1
 8003266:	d105      	bne.n	8003274 <I2C_RequestMemoryWrite+0xd8>
 8003268:	893b      	ldrh	r3, [r7, #8]
 800326a:	b2da      	uxtb	r2, r3
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	611a      	str	r2, [r3, #16]
 8003272:	e021      	b.n	80032b8 <I2C_RequestMemoryWrite+0x11c>
 8003274:	893b      	ldrh	r3, [r7, #8]
 8003276:	0a1b      	lsrs	r3, r3, #8
 8003278:	b29b      	uxth	r3, r3
 800327a:	b2da      	uxtb	r2, r3
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	611a      	str	r2, [r3, #16]
 8003282:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003284:	6a39      	ldr	r1, [r7, #32]
 8003286:	68f8      	ldr	r0, [r7, #12]
 8003288:	f000 f8f4 	bl	8003474 <I2C_WaitOnTXEFlagUntilTimeout>
 800328c:	4603      	mov	r3, r0
 800328e:	2b00      	cmp	r3, #0
 8003290:	d00d      	beq.n	80032ae <I2C_RequestMemoryWrite+0x112>
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003296:	2b04      	cmp	r3, #4
 8003298:	d107      	bne.n	80032aa <I2C_RequestMemoryWrite+0x10e>
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	681a      	ldr	r2, [r3, #0]
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80032a8:	601a      	str	r2, [r3, #0]
 80032aa:	2301      	movs	r3, #1
 80032ac:	e005      	b.n	80032ba <I2C_RequestMemoryWrite+0x11e>
 80032ae:	893b      	ldrh	r3, [r7, #8]
 80032b0:	b2da      	uxtb	r2, r3
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	611a      	str	r2, [r3, #16]
 80032b8:	2300      	movs	r3, #0
 80032ba:	4618      	mov	r0, r3
 80032bc:	3718      	adds	r7, #24
 80032be:	46bd      	mov	sp, r7
 80032c0:	bd80      	pop	{r7, pc}
 80032c2:	bf00      	nop
 80032c4:	00010002 	.word	0x00010002

080032c8 <I2C_WaitOnFlagUntilTimeout>:
 80032c8:	b580      	push	{r7, lr}
 80032ca:	b084      	sub	sp, #16
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	60f8      	str	r0, [r7, #12]
 80032d0:	60b9      	str	r1, [r7, #8]
 80032d2:	603b      	str	r3, [r7, #0]
 80032d4:	4613      	mov	r3, r2
 80032d6:	71fb      	strb	r3, [r7, #7]
 80032d8:	e025      	b.n	8003326 <I2C_WaitOnFlagUntilTimeout+0x5e>
 80032da:	683b      	ldr	r3, [r7, #0]
 80032dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80032e0:	d021      	beq.n	8003326 <I2C_WaitOnFlagUntilTimeout+0x5e>
 80032e2:	f7fe fe4b 	bl	8001f7c <HAL_GetTick>
 80032e6:	4602      	mov	r2, r0
 80032e8:	69bb      	ldr	r3, [r7, #24]
 80032ea:	1ad3      	subs	r3, r2, r3
 80032ec:	683a      	ldr	r2, [r7, #0]
 80032ee:	429a      	cmp	r2, r3
 80032f0:	d302      	bcc.n	80032f8 <I2C_WaitOnFlagUntilTimeout+0x30>
 80032f2:	683b      	ldr	r3, [r7, #0]
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d116      	bne.n	8003326 <I2C_WaitOnFlagUntilTimeout+0x5e>
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	2200      	movs	r2, #0
 80032fc:	631a      	str	r2, [r3, #48]	; 0x30
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	2220      	movs	r2, #32
 8003302:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	2200      	movs	r2, #0
 800330a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800330e:	68fb      	ldr	r3, [r7, #12]
 8003310:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003312:	f043 0220 	orr.w	r2, r3, #32
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	641a      	str	r2, [r3, #64]	; 0x40
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	2200      	movs	r2, #0
 800331e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003322:	2301      	movs	r3, #1
 8003324:	e023      	b.n	800336e <I2C_WaitOnFlagUntilTimeout+0xa6>
 8003326:	68bb      	ldr	r3, [r7, #8]
 8003328:	0c1b      	lsrs	r3, r3, #16
 800332a:	b2db      	uxtb	r3, r3
 800332c:	2b01      	cmp	r3, #1
 800332e:	d10d      	bne.n	800334c <I2C_WaitOnFlagUntilTimeout+0x84>
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	695b      	ldr	r3, [r3, #20]
 8003336:	43da      	mvns	r2, r3
 8003338:	68bb      	ldr	r3, [r7, #8]
 800333a:	4013      	ands	r3, r2
 800333c:	b29b      	uxth	r3, r3
 800333e:	2b00      	cmp	r3, #0
 8003340:	bf0c      	ite	eq
 8003342:	2301      	moveq	r3, #1
 8003344:	2300      	movne	r3, #0
 8003346:	b2db      	uxtb	r3, r3
 8003348:	461a      	mov	r2, r3
 800334a:	e00c      	b.n	8003366 <I2C_WaitOnFlagUntilTimeout+0x9e>
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	699b      	ldr	r3, [r3, #24]
 8003352:	43da      	mvns	r2, r3
 8003354:	68bb      	ldr	r3, [r7, #8]
 8003356:	4013      	ands	r3, r2
 8003358:	b29b      	uxth	r3, r3
 800335a:	2b00      	cmp	r3, #0
 800335c:	bf0c      	ite	eq
 800335e:	2301      	moveq	r3, #1
 8003360:	2300      	movne	r3, #0
 8003362:	b2db      	uxtb	r3, r3
 8003364:	461a      	mov	r2, r3
 8003366:	79fb      	ldrb	r3, [r7, #7]
 8003368:	429a      	cmp	r2, r3
 800336a:	d0b6      	beq.n	80032da <I2C_WaitOnFlagUntilTimeout+0x12>
 800336c:	2300      	movs	r3, #0
 800336e:	4618      	mov	r0, r3
 8003370:	3710      	adds	r7, #16
 8003372:	46bd      	mov	sp, r7
 8003374:	bd80      	pop	{r7, pc}

08003376 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003376:	b580      	push	{r7, lr}
 8003378:	b084      	sub	sp, #16
 800337a:	af00      	add	r7, sp, #0
 800337c:	60f8      	str	r0, [r7, #12]
 800337e:	60b9      	str	r1, [r7, #8]
 8003380:	607a      	str	r2, [r7, #4]
 8003382:	603b      	str	r3, [r7, #0]
 8003384:	e051      	b.n	800342a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	695b      	ldr	r3, [r3, #20]
 800338c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003390:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003394:	d123      	bne.n	80033de <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	681a      	ldr	r2, [r3, #0]
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80033a4:	601a      	str	r2, [r3, #0]
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80033ae:	615a      	str	r2, [r3, #20]
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	2200      	movs	r2, #0
 80033b4:	631a      	str	r2, [r3, #48]	; 0x30
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	2220      	movs	r2, #32
 80033ba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	2200      	movs	r2, #0
 80033c2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80033c6:	68fb      	ldr	r3, [r7, #12]
 80033c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033ca:	f043 0204 	orr.w	r2, r3, #4
 80033ce:	68fb      	ldr	r3, [r7, #12]
 80033d0:	641a      	str	r2, [r3, #64]	; 0x40
 80033d2:	68fb      	ldr	r3, [r7, #12]
 80033d4:	2200      	movs	r2, #0
 80033d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80033da:	2301      	movs	r3, #1
 80033dc:	e046      	b.n	800346c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80033e4:	d021      	beq.n	800342a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80033e6:	f7fe fdc9 	bl	8001f7c <HAL_GetTick>
 80033ea:	4602      	mov	r2, r0
 80033ec:	683b      	ldr	r3, [r7, #0]
 80033ee:	1ad3      	subs	r3, r2, r3
 80033f0:	687a      	ldr	r2, [r7, #4]
 80033f2:	429a      	cmp	r2, r3
 80033f4:	d302      	bcc.n	80033fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	d116      	bne.n	800342a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	2200      	movs	r2, #0
 8003400:	631a      	str	r2, [r3, #48]	; 0x30
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	2220      	movs	r2, #32
 8003406:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	2200      	movs	r2, #0
 800340e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003416:	f043 0220 	orr.w	r2, r3, #32
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	641a      	str	r2, [r3, #64]	; 0x40
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	2200      	movs	r2, #0
 8003422:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003426:	2301      	movs	r3, #1
 8003428:	e020      	b.n	800346c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800342a:	68bb      	ldr	r3, [r7, #8]
 800342c:	0c1b      	lsrs	r3, r3, #16
 800342e:	b2db      	uxtb	r3, r3
 8003430:	2b01      	cmp	r3, #1
 8003432:	d10c      	bne.n	800344e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8003434:	68fb      	ldr	r3, [r7, #12]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	695b      	ldr	r3, [r3, #20]
 800343a:	43da      	mvns	r2, r3
 800343c:	68bb      	ldr	r3, [r7, #8]
 800343e:	4013      	ands	r3, r2
 8003440:	b29b      	uxth	r3, r3
 8003442:	2b00      	cmp	r3, #0
 8003444:	bf14      	ite	ne
 8003446:	2301      	movne	r3, #1
 8003448:	2300      	moveq	r3, #0
 800344a:	b2db      	uxtb	r3, r3
 800344c:	e00b      	b.n	8003466 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	699b      	ldr	r3, [r3, #24]
 8003454:	43da      	mvns	r2, r3
 8003456:	68bb      	ldr	r3, [r7, #8]
 8003458:	4013      	ands	r3, r2
 800345a:	b29b      	uxth	r3, r3
 800345c:	2b00      	cmp	r3, #0
 800345e:	bf14      	ite	ne
 8003460:	2301      	movne	r3, #1
 8003462:	2300      	moveq	r3, #0
 8003464:	b2db      	uxtb	r3, r3
 8003466:	2b00      	cmp	r3, #0
 8003468:	d18d      	bne.n	8003386 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800346a:	2300      	movs	r3, #0
 800346c:	4618      	mov	r0, r3
 800346e:	3710      	adds	r7, #16
 8003470:	46bd      	mov	sp, r7
 8003472:	bd80      	pop	{r7, pc}

08003474 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003474:	b580      	push	{r7, lr}
 8003476:	b084      	sub	sp, #16
 8003478:	af00      	add	r7, sp, #0
 800347a:	60f8      	str	r0, [r7, #12]
 800347c:	60b9      	str	r1, [r7, #8]
 800347e:	607a      	str	r2, [r7, #4]
 8003480:	e02d      	b.n	80034de <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003482:	68f8      	ldr	r0, [r7, #12]
 8003484:	f000 f878 	bl	8003578 <I2C_IsAcknowledgeFailed>
 8003488:	4603      	mov	r3, r0
 800348a:	2b00      	cmp	r3, #0
 800348c:	d001      	beq.n	8003492 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800348e:	2301      	movs	r3, #1
 8003490:	e02d      	b.n	80034ee <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003492:	68bb      	ldr	r3, [r7, #8]
 8003494:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003498:	d021      	beq.n	80034de <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800349a:	f7fe fd6f 	bl	8001f7c <HAL_GetTick>
 800349e:	4602      	mov	r2, r0
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	1ad3      	subs	r3, r2, r3
 80034a4:	68ba      	ldr	r2, [r7, #8]
 80034a6:	429a      	cmp	r2, r3
 80034a8:	d302      	bcc.n	80034b0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80034aa:	68bb      	ldr	r3, [r7, #8]
 80034ac:	2b00      	cmp	r3, #0
 80034ae:	d116      	bne.n	80034de <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	2200      	movs	r2, #0
 80034b4:	631a      	str	r2, [r3, #48]	; 0x30
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	2220      	movs	r2, #32
 80034ba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	2200      	movs	r2, #0
 80034c2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034ca:	f043 0220 	orr.w	r2, r3, #32
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	641a      	str	r2, [r3, #64]	; 0x40
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	2200      	movs	r2, #0
 80034d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80034da:	2301      	movs	r3, #1
 80034dc:	e007      	b.n	80034ee <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	695b      	ldr	r3, [r3, #20]
 80034e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80034e8:	2b80      	cmp	r3, #128	; 0x80
 80034ea:	d1ca      	bne.n	8003482 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80034ec:	2300      	movs	r3, #0
 80034ee:	4618      	mov	r0, r3
 80034f0:	3710      	adds	r7, #16
 80034f2:	46bd      	mov	sp, r7
 80034f4:	bd80      	pop	{r7, pc}

080034f6 <I2C_WaitOnBTFFlagUntilTimeout>:
 80034f6:	b580      	push	{r7, lr}
 80034f8:	b084      	sub	sp, #16
 80034fa:	af00      	add	r7, sp, #0
 80034fc:	60f8      	str	r0, [r7, #12]
 80034fe:	60b9      	str	r1, [r7, #8]
 8003500:	607a      	str	r2, [r7, #4]
 8003502:	e02d      	b.n	8003560 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003504:	68f8      	ldr	r0, [r7, #12]
 8003506:	f000 f837 	bl	8003578 <I2C_IsAcknowledgeFailed>
 800350a:	4603      	mov	r3, r0
 800350c:	2b00      	cmp	r3, #0
 800350e:	d001      	beq.n	8003514 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003510:	2301      	movs	r3, #1
 8003512:	e02d      	b.n	8003570 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003514:	68bb      	ldr	r3, [r7, #8]
 8003516:	f1b3 3fff 	cmp.w	r3, #4294967295
 800351a:	d021      	beq.n	8003560 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800351c:	f7fe fd2e 	bl	8001f7c <HAL_GetTick>
 8003520:	4602      	mov	r2, r0
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	1ad3      	subs	r3, r2, r3
 8003526:	68ba      	ldr	r2, [r7, #8]
 8003528:	429a      	cmp	r2, r3
 800352a:	d302      	bcc.n	8003532 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800352c:	68bb      	ldr	r3, [r7, #8]
 800352e:	2b00      	cmp	r3, #0
 8003530:	d116      	bne.n	8003560 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	2200      	movs	r2, #0
 8003536:	631a      	str	r2, [r3, #48]	; 0x30
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	2220      	movs	r2, #32
 800353c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	2200      	movs	r2, #0
 8003544:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003548:	68fb      	ldr	r3, [r7, #12]
 800354a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800354c:	f043 0220 	orr.w	r2, r3, #32
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	641a      	str	r2, [r3, #64]	; 0x40
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	2200      	movs	r2, #0
 8003558:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800355c:	2301      	movs	r3, #1
 800355e:	e007      	b.n	8003570 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	681b      	ldr	r3, [r3, #0]
 8003564:	695b      	ldr	r3, [r3, #20]
 8003566:	f003 0304 	and.w	r3, r3, #4
 800356a:	2b04      	cmp	r3, #4
 800356c:	d1ca      	bne.n	8003504 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800356e:	2300      	movs	r3, #0
 8003570:	4618      	mov	r0, r3
 8003572:	3710      	adds	r7, #16
 8003574:	46bd      	mov	sp, r7
 8003576:	bd80      	pop	{r7, pc}

08003578 <I2C_IsAcknowledgeFailed>:
 8003578:	b480      	push	{r7}
 800357a:	b083      	sub	sp, #12
 800357c:	af00      	add	r7, sp, #0
 800357e:	6078      	str	r0, [r7, #4]
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	695b      	ldr	r3, [r3, #20]
 8003586:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800358a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800358e:	d11b      	bne.n	80035c8 <I2C_IsAcknowledgeFailed+0x50>
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003598:	615a      	str	r2, [r3, #20]
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	2200      	movs	r2, #0
 800359e:	631a      	str	r2, [r3, #48]	; 0x30
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	2220      	movs	r2, #32
 80035a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	2200      	movs	r2, #0
 80035ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035b4:	f043 0204 	orr.w	r2, r3, #4
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	641a      	str	r2, [r3, #64]	; 0x40
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	2200      	movs	r2, #0
 80035c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035c4:	2301      	movs	r3, #1
 80035c6:	e000      	b.n	80035ca <I2C_IsAcknowledgeFailed+0x52>
 80035c8:	2300      	movs	r3, #0
 80035ca:	4618      	mov	r0, r3
 80035cc:	370c      	adds	r7, #12
 80035ce:	46bd      	mov	sp, r7
 80035d0:	bc80      	pop	{r7}
 80035d2:	4770      	bx	lr

080035d4 <HAL_RCC_OscConfig>:
 80035d4:	b580      	push	{r7, lr}
 80035d6:	b086      	sub	sp, #24
 80035d8:	af00      	add	r7, sp, #0
 80035da:	6078      	str	r0, [r7, #4]
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	2b00      	cmp	r3, #0
 80035e0:	d101      	bne.n	80035e6 <HAL_RCC_OscConfig+0x12>
 80035e2:	2301      	movs	r3, #1
 80035e4:	e26c      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	f003 0301 	and.w	r3, r3, #1
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	f000 8087 	beq.w	8003702 <HAL_RCC_OscConfig+0x12e>
 80035f4:	4b92      	ldr	r3, [pc, #584]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 80035f6:	685b      	ldr	r3, [r3, #4]
 80035f8:	f003 030c 	and.w	r3, r3, #12
 80035fc:	2b04      	cmp	r3, #4
 80035fe:	d00c      	beq.n	800361a <HAL_RCC_OscConfig+0x46>
 8003600:	4b8f      	ldr	r3, [pc, #572]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003602:	685b      	ldr	r3, [r3, #4]
 8003604:	f003 030c 	and.w	r3, r3, #12
 8003608:	2b08      	cmp	r3, #8
 800360a:	d112      	bne.n	8003632 <HAL_RCC_OscConfig+0x5e>
 800360c:	4b8c      	ldr	r3, [pc, #560]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800360e:	685b      	ldr	r3, [r3, #4]
 8003610:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003614:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003618:	d10b      	bne.n	8003632 <HAL_RCC_OscConfig+0x5e>
 800361a:	4b89      	ldr	r3, [pc, #548]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800361c:	681b      	ldr	r3, [r3, #0]
 800361e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003622:	2b00      	cmp	r3, #0
 8003624:	d06c      	beq.n	8003700 <HAL_RCC_OscConfig+0x12c>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	685b      	ldr	r3, [r3, #4]
 800362a:	2b00      	cmp	r3, #0
 800362c:	d168      	bne.n	8003700 <HAL_RCC_OscConfig+0x12c>
 800362e:	2301      	movs	r3, #1
 8003630:	e246      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	685b      	ldr	r3, [r3, #4]
 8003636:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800363a:	d106      	bne.n	800364a <HAL_RCC_OscConfig+0x76>
 800363c:	4b80      	ldr	r3, [pc, #512]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	4a7f      	ldr	r2, [pc, #508]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003642:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003646:	6013      	str	r3, [r2, #0]
 8003648:	e02e      	b.n	80036a8 <HAL_RCC_OscConfig+0xd4>
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	685b      	ldr	r3, [r3, #4]
 800364e:	2b00      	cmp	r3, #0
 8003650:	d10c      	bne.n	800366c <HAL_RCC_OscConfig+0x98>
 8003652:	4b7b      	ldr	r3, [pc, #492]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	4a7a      	ldr	r2, [pc, #488]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003658:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800365c:	6013      	str	r3, [r2, #0]
 800365e:	4b78      	ldr	r3, [pc, #480]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	4a77      	ldr	r2, [pc, #476]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003664:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003668:	6013      	str	r3, [r2, #0]
 800366a:	e01d      	b.n	80036a8 <HAL_RCC_OscConfig+0xd4>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	685b      	ldr	r3, [r3, #4]
 8003670:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003674:	d10c      	bne.n	8003690 <HAL_RCC_OscConfig+0xbc>
 8003676:	4b72      	ldr	r3, [pc, #456]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	4a71      	ldr	r2, [pc, #452]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800367c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003680:	6013      	str	r3, [r2, #0]
 8003682:	4b6f      	ldr	r3, [pc, #444]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	4a6e      	ldr	r2, [pc, #440]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003688:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800368c:	6013      	str	r3, [r2, #0]
 800368e:	e00b      	b.n	80036a8 <HAL_RCC_OscConfig+0xd4>
 8003690:	4b6b      	ldr	r3, [pc, #428]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	4a6a      	ldr	r2, [pc, #424]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003696:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800369a:	6013      	str	r3, [r2, #0]
 800369c:	4b68      	ldr	r3, [pc, #416]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	4a67      	ldr	r2, [pc, #412]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 80036a2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80036a6:	6013      	str	r3, [r2, #0]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	685b      	ldr	r3, [r3, #4]
 80036ac:	2b00      	cmp	r3, #0
 80036ae:	d013      	beq.n	80036d8 <HAL_RCC_OscConfig+0x104>
 80036b0:	f7fe fc64 	bl	8001f7c <HAL_GetTick>
 80036b4:	6138      	str	r0, [r7, #16]
 80036b6:	e008      	b.n	80036ca <HAL_RCC_OscConfig+0xf6>
 80036b8:	f7fe fc60 	bl	8001f7c <HAL_GetTick>
 80036bc:	4602      	mov	r2, r0
 80036be:	693b      	ldr	r3, [r7, #16]
 80036c0:	1ad3      	subs	r3, r2, r3
 80036c2:	2b64      	cmp	r3, #100	; 0x64
 80036c4:	d901      	bls.n	80036ca <HAL_RCC_OscConfig+0xf6>
 80036c6:	2303      	movs	r3, #3
 80036c8:	e1fa      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 80036ca:	4b5d      	ldr	r3, [pc, #372]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d0f0      	beq.n	80036b8 <HAL_RCC_OscConfig+0xe4>
 80036d6:	e014      	b.n	8003702 <HAL_RCC_OscConfig+0x12e>
 80036d8:	f7fe fc50 	bl	8001f7c <HAL_GetTick>
 80036dc:	6138      	str	r0, [r7, #16]
 80036de:	e008      	b.n	80036f2 <HAL_RCC_OscConfig+0x11e>
 80036e0:	f7fe fc4c 	bl	8001f7c <HAL_GetTick>
 80036e4:	4602      	mov	r2, r0
 80036e6:	693b      	ldr	r3, [r7, #16]
 80036e8:	1ad3      	subs	r3, r2, r3
 80036ea:	2b64      	cmp	r3, #100	; 0x64
 80036ec:	d901      	bls.n	80036f2 <HAL_RCC_OscConfig+0x11e>
 80036ee:	2303      	movs	r3, #3
 80036f0:	e1e6      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 80036f2:	4b53      	ldr	r3, [pc, #332]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d1f0      	bne.n	80036e0 <HAL_RCC_OscConfig+0x10c>
 80036fe:	e000      	b.n	8003702 <HAL_RCC_OscConfig+0x12e>
 8003700:	bf00      	nop
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	f003 0302 	and.w	r3, r3, #2
 800370a:	2b00      	cmp	r3, #0
 800370c:	d063      	beq.n	80037d6 <HAL_RCC_OscConfig+0x202>
 800370e:	4b4c      	ldr	r3, [pc, #304]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003710:	685b      	ldr	r3, [r3, #4]
 8003712:	f003 030c 	and.w	r3, r3, #12
 8003716:	2b00      	cmp	r3, #0
 8003718:	d00b      	beq.n	8003732 <HAL_RCC_OscConfig+0x15e>
 800371a:	4b49      	ldr	r3, [pc, #292]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800371c:	685b      	ldr	r3, [r3, #4]
 800371e:	f003 030c 	and.w	r3, r3, #12
 8003722:	2b08      	cmp	r3, #8
 8003724:	d11c      	bne.n	8003760 <HAL_RCC_OscConfig+0x18c>
 8003726:	4b46      	ldr	r3, [pc, #280]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003728:	685b      	ldr	r3, [r3, #4]
 800372a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800372e:	2b00      	cmp	r3, #0
 8003730:	d116      	bne.n	8003760 <HAL_RCC_OscConfig+0x18c>
 8003732:	4b43      	ldr	r3, [pc, #268]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	f003 0302 	and.w	r3, r3, #2
 800373a:	2b00      	cmp	r3, #0
 800373c:	d005      	beq.n	800374a <HAL_RCC_OscConfig+0x176>
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	691b      	ldr	r3, [r3, #16]
 8003742:	2b01      	cmp	r3, #1
 8003744:	d001      	beq.n	800374a <HAL_RCC_OscConfig+0x176>
 8003746:	2301      	movs	r3, #1
 8003748:	e1ba      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 800374a:	4b3d      	ldr	r3, [pc, #244]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	695b      	ldr	r3, [r3, #20]
 8003756:	00db      	lsls	r3, r3, #3
 8003758:	4939      	ldr	r1, [pc, #228]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800375a:	4313      	orrs	r3, r2
 800375c:	600b      	str	r3, [r1, #0]
 800375e:	e03a      	b.n	80037d6 <HAL_RCC_OscConfig+0x202>
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	691b      	ldr	r3, [r3, #16]
 8003764:	2b00      	cmp	r3, #0
 8003766:	d020      	beq.n	80037aa <HAL_RCC_OscConfig+0x1d6>
 8003768:	4b36      	ldr	r3, [pc, #216]	; (8003844 <HAL_RCC_OscConfig+0x270>)
 800376a:	2201      	movs	r2, #1
 800376c:	601a      	str	r2, [r3, #0]
 800376e:	f7fe fc05 	bl	8001f7c <HAL_GetTick>
 8003772:	6138      	str	r0, [r7, #16]
 8003774:	e008      	b.n	8003788 <HAL_RCC_OscConfig+0x1b4>
 8003776:	f7fe fc01 	bl	8001f7c <HAL_GetTick>
 800377a:	4602      	mov	r2, r0
 800377c:	693b      	ldr	r3, [r7, #16]
 800377e:	1ad3      	subs	r3, r2, r3
 8003780:	2b02      	cmp	r3, #2
 8003782:	d901      	bls.n	8003788 <HAL_RCC_OscConfig+0x1b4>
 8003784:	2303      	movs	r3, #3
 8003786:	e19b      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003788:	4b2d      	ldr	r3, [pc, #180]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f003 0302 	and.w	r3, r3, #2
 8003790:	2b00      	cmp	r3, #0
 8003792:	d0f0      	beq.n	8003776 <HAL_RCC_OscConfig+0x1a2>
 8003794:	4b2a      	ldr	r3, [pc, #168]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	695b      	ldr	r3, [r3, #20]
 80037a0:	00db      	lsls	r3, r3, #3
 80037a2:	4927      	ldr	r1, [pc, #156]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 80037a4:	4313      	orrs	r3, r2
 80037a6:	600b      	str	r3, [r1, #0]
 80037a8:	e015      	b.n	80037d6 <HAL_RCC_OscConfig+0x202>
 80037aa:	4b26      	ldr	r3, [pc, #152]	; (8003844 <HAL_RCC_OscConfig+0x270>)
 80037ac:	2200      	movs	r2, #0
 80037ae:	601a      	str	r2, [r3, #0]
 80037b0:	f7fe fbe4 	bl	8001f7c <HAL_GetTick>
 80037b4:	6138      	str	r0, [r7, #16]
 80037b6:	e008      	b.n	80037ca <HAL_RCC_OscConfig+0x1f6>
 80037b8:	f7fe fbe0 	bl	8001f7c <HAL_GetTick>
 80037bc:	4602      	mov	r2, r0
 80037be:	693b      	ldr	r3, [r7, #16]
 80037c0:	1ad3      	subs	r3, r2, r3
 80037c2:	2b02      	cmp	r3, #2
 80037c4:	d901      	bls.n	80037ca <HAL_RCC_OscConfig+0x1f6>
 80037c6:	2303      	movs	r3, #3
 80037c8:	e17a      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 80037ca:	4b1d      	ldr	r3, [pc, #116]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	f003 0302 	and.w	r3, r3, #2
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d1f0      	bne.n	80037b8 <HAL_RCC_OscConfig+0x1e4>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	f003 0308 	and.w	r3, r3, #8
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d03a      	beq.n	8003858 <HAL_RCC_OscConfig+0x284>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	699b      	ldr	r3, [r3, #24]
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d019      	beq.n	800381e <HAL_RCC_OscConfig+0x24a>
 80037ea:	4b17      	ldr	r3, [pc, #92]	; (8003848 <HAL_RCC_OscConfig+0x274>)
 80037ec:	2201      	movs	r2, #1
 80037ee:	601a      	str	r2, [r3, #0]
 80037f0:	f7fe fbc4 	bl	8001f7c <HAL_GetTick>
 80037f4:	6138      	str	r0, [r7, #16]
 80037f6:	e008      	b.n	800380a <HAL_RCC_OscConfig+0x236>
 80037f8:	f7fe fbc0 	bl	8001f7c <HAL_GetTick>
 80037fc:	4602      	mov	r2, r0
 80037fe:	693b      	ldr	r3, [r7, #16]
 8003800:	1ad3      	subs	r3, r2, r3
 8003802:	2b02      	cmp	r3, #2
 8003804:	d901      	bls.n	800380a <HAL_RCC_OscConfig+0x236>
 8003806:	2303      	movs	r3, #3
 8003808:	e15a      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 800380a:	4b0d      	ldr	r3, [pc, #52]	; (8003840 <HAL_RCC_OscConfig+0x26c>)
 800380c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800380e:	f003 0302 	and.w	r3, r3, #2
 8003812:	2b00      	cmp	r3, #0
 8003814:	d0f0      	beq.n	80037f8 <HAL_RCC_OscConfig+0x224>
 8003816:	2001      	movs	r0, #1
 8003818:	f000 fad8 	bl	8003dcc <RCC_Delay>
 800381c:	e01c      	b.n	8003858 <HAL_RCC_OscConfig+0x284>
 800381e:	4b0a      	ldr	r3, [pc, #40]	; (8003848 <HAL_RCC_OscConfig+0x274>)
 8003820:	2200      	movs	r2, #0
 8003822:	601a      	str	r2, [r3, #0]
 8003824:	f7fe fbaa 	bl	8001f7c <HAL_GetTick>
 8003828:	6138      	str	r0, [r7, #16]
 800382a:	e00f      	b.n	800384c <HAL_RCC_OscConfig+0x278>
 800382c:	f7fe fba6 	bl	8001f7c <HAL_GetTick>
 8003830:	4602      	mov	r2, r0
 8003832:	693b      	ldr	r3, [r7, #16]
 8003834:	1ad3      	subs	r3, r2, r3
 8003836:	2b02      	cmp	r3, #2
 8003838:	d908      	bls.n	800384c <HAL_RCC_OscConfig+0x278>
 800383a:	2303      	movs	r3, #3
 800383c:	e140      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 800383e:	bf00      	nop
 8003840:	40021000 	.word	0x40021000
 8003844:	42420000 	.word	0x42420000
 8003848:	42420480 	.word	0x42420480
 800384c:	4b9e      	ldr	r3, [pc, #632]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800384e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003850:	f003 0302 	and.w	r3, r3, #2
 8003854:	2b00      	cmp	r3, #0
 8003856:	d1e9      	bne.n	800382c <HAL_RCC_OscConfig+0x258>
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	f003 0304 	and.w	r3, r3, #4
 8003860:	2b00      	cmp	r3, #0
 8003862:	f000 80a6 	beq.w	80039b2 <HAL_RCC_OscConfig+0x3de>
 8003866:	2300      	movs	r3, #0
 8003868:	75fb      	strb	r3, [r7, #23]
 800386a:	4b97      	ldr	r3, [pc, #604]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800386c:	69db      	ldr	r3, [r3, #28]
 800386e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003872:	2b00      	cmp	r3, #0
 8003874:	d10d      	bne.n	8003892 <HAL_RCC_OscConfig+0x2be>
 8003876:	4b94      	ldr	r3, [pc, #592]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003878:	69db      	ldr	r3, [r3, #28]
 800387a:	4a93      	ldr	r2, [pc, #588]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800387c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003880:	61d3      	str	r3, [r2, #28]
 8003882:	4b91      	ldr	r3, [pc, #580]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003884:	69db      	ldr	r3, [r3, #28]
 8003886:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800388a:	60bb      	str	r3, [r7, #8]
 800388c:	68bb      	ldr	r3, [r7, #8]
 800388e:	2301      	movs	r3, #1
 8003890:	75fb      	strb	r3, [r7, #23]
 8003892:	4b8e      	ldr	r3, [pc, #568]	; (8003acc <HAL_RCC_OscConfig+0x4f8>)
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800389a:	2b00      	cmp	r3, #0
 800389c:	d118      	bne.n	80038d0 <HAL_RCC_OscConfig+0x2fc>
 800389e:	4b8b      	ldr	r3, [pc, #556]	; (8003acc <HAL_RCC_OscConfig+0x4f8>)
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	4a8a      	ldr	r2, [pc, #552]	; (8003acc <HAL_RCC_OscConfig+0x4f8>)
 80038a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80038a8:	6013      	str	r3, [r2, #0]
 80038aa:	f7fe fb67 	bl	8001f7c <HAL_GetTick>
 80038ae:	6138      	str	r0, [r7, #16]
 80038b0:	e008      	b.n	80038c4 <HAL_RCC_OscConfig+0x2f0>
 80038b2:	f7fe fb63 	bl	8001f7c <HAL_GetTick>
 80038b6:	4602      	mov	r2, r0
 80038b8:	693b      	ldr	r3, [r7, #16]
 80038ba:	1ad3      	subs	r3, r2, r3
 80038bc:	2b64      	cmp	r3, #100	; 0x64
 80038be:	d901      	bls.n	80038c4 <HAL_RCC_OscConfig+0x2f0>
 80038c0:	2303      	movs	r3, #3
 80038c2:	e0fd      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 80038c4:	4b81      	ldr	r3, [pc, #516]	; (8003acc <HAL_RCC_OscConfig+0x4f8>)
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d0f0      	beq.n	80038b2 <HAL_RCC_OscConfig+0x2de>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	68db      	ldr	r3, [r3, #12]
 80038d4:	2b01      	cmp	r3, #1
 80038d6:	d106      	bne.n	80038e6 <HAL_RCC_OscConfig+0x312>
 80038d8:	4b7b      	ldr	r3, [pc, #492]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80038da:	6a1b      	ldr	r3, [r3, #32]
 80038dc:	4a7a      	ldr	r2, [pc, #488]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80038de:	f043 0301 	orr.w	r3, r3, #1
 80038e2:	6213      	str	r3, [r2, #32]
 80038e4:	e02d      	b.n	8003942 <HAL_RCC_OscConfig+0x36e>
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	68db      	ldr	r3, [r3, #12]
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d10c      	bne.n	8003908 <HAL_RCC_OscConfig+0x334>
 80038ee:	4b76      	ldr	r3, [pc, #472]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80038f0:	6a1b      	ldr	r3, [r3, #32]
 80038f2:	4a75      	ldr	r2, [pc, #468]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80038f4:	f023 0301 	bic.w	r3, r3, #1
 80038f8:	6213      	str	r3, [r2, #32]
 80038fa:	4b73      	ldr	r3, [pc, #460]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80038fc:	6a1b      	ldr	r3, [r3, #32]
 80038fe:	4a72      	ldr	r2, [pc, #456]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003900:	f023 0304 	bic.w	r3, r3, #4
 8003904:	6213      	str	r3, [r2, #32]
 8003906:	e01c      	b.n	8003942 <HAL_RCC_OscConfig+0x36e>
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	68db      	ldr	r3, [r3, #12]
 800390c:	2b05      	cmp	r3, #5
 800390e:	d10c      	bne.n	800392a <HAL_RCC_OscConfig+0x356>
 8003910:	4b6d      	ldr	r3, [pc, #436]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003912:	6a1b      	ldr	r3, [r3, #32]
 8003914:	4a6c      	ldr	r2, [pc, #432]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003916:	f043 0304 	orr.w	r3, r3, #4
 800391a:	6213      	str	r3, [r2, #32]
 800391c:	4b6a      	ldr	r3, [pc, #424]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800391e:	6a1b      	ldr	r3, [r3, #32]
 8003920:	4a69      	ldr	r2, [pc, #420]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003922:	f043 0301 	orr.w	r3, r3, #1
 8003926:	6213      	str	r3, [r2, #32]
 8003928:	e00b      	b.n	8003942 <HAL_RCC_OscConfig+0x36e>
 800392a:	4b67      	ldr	r3, [pc, #412]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800392c:	6a1b      	ldr	r3, [r3, #32]
 800392e:	4a66      	ldr	r2, [pc, #408]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003930:	f023 0301 	bic.w	r3, r3, #1
 8003934:	6213      	str	r3, [r2, #32]
 8003936:	4b64      	ldr	r3, [pc, #400]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003938:	6a1b      	ldr	r3, [r3, #32]
 800393a:	4a63      	ldr	r2, [pc, #396]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800393c:	f023 0304 	bic.w	r3, r3, #4
 8003940:	6213      	str	r3, [r2, #32]
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	68db      	ldr	r3, [r3, #12]
 8003946:	2b00      	cmp	r3, #0
 8003948:	d015      	beq.n	8003976 <HAL_RCC_OscConfig+0x3a2>
 800394a:	f7fe fb17 	bl	8001f7c <HAL_GetTick>
 800394e:	6138      	str	r0, [r7, #16]
 8003950:	e00a      	b.n	8003968 <HAL_RCC_OscConfig+0x394>
 8003952:	f7fe fb13 	bl	8001f7c <HAL_GetTick>
 8003956:	4602      	mov	r2, r0
 8003958:	693b      	ldr	r3, [r7, #16]
 800395a:	1ad3      	subs	r3, r2, r3
 800395c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003960:	4293      	cmp	r3, r2
 8003962:	d901      	bls.n	8003968 <HAL_RCC_OscConfig+0x394>
 8003964:	2303      	movs	r3, #3
 8003966:	e0ab      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003968:	4b57      	ldr	r3, [pc, #348]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 800396a:	6a1b      	ldr	r3, [r3, #32]
 800396c:	f003 0302 	and.w	r3, r3, #2
 8003970:	2b00      	cmp	r3, #0
 8003972:	d0ee      	beq.n	8003952 <HAL_RCC_OscConfig+0x37e>
 8003974:	e014      	b.n	80039a0 <HAL_RCC_OscConfig+0x3cc>
 8003976:	f7fe fb01 	bl	8001f7c <HAL_GetTick>
 800397a:	6138      	str	r0, [r7, #16]
 800397c:	e00a      	b.n	8003994 <HAL_RCC_OscConfig+0x3c0>
 800397e:	f7fe fafd 	bl	8001f7c <HAL_GetTick>
 8003982:	4602      	mov	r2, r0
 8003984:	693b      	ldr	r3, [r7, #16]
 8003986:	1ad3      	subs	r3, r2, r3
 8003988:	f241 3288 	movw	r2, #5000	; 0x1388
 800398c:	4293      	cmp	r3, r2
 800398e:	d901      	bls.n	8003994 <HAL_RCC_OscConfig+0x3c0>
 8003990:	2303      	movs	r3, #3
 8003992:	e095      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003994:	4b4c      	ldr	r3, [pc, #304]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003996:	6a1b      	ldr	r3, [r3, #32]
 8003998:	f003 0302 	and.w	r3, r3, #2
 800399c:	2b00      	cmp	r3, #0
 800399e:	d1ee      	bne.n	800397e <HAL_RCC_OscConfig+0x3aa>
 80039a0:	7dfb      	ldrb	r3, [r7, #23]
 80039a2:	2b01      	cmp	r3, #1
 80039a4:	d105      	bne.n	80039b2 <HAL_RCC_OscConfig+0x3de>
 80039a6:	4b48      	ldr	r3, [pc, #288]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80039a8:	69db      	ldr	r3, [r3, #28]
 80039aa:	4a47      	ldr	r2, [pc, #284]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80039ac:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80039b0:	61d3      	str	r3, [r2, #28]
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	69db      	ldr	r3, [r3, #28]
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	f000 8081 	beq.w	8003abe <HAL_RCC_OscConfig+0x4ea>
 80039bc:	4b42      	ldr	r3, [pc, #264]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80039be:	685b      	ldr	r3, [r3, #4]
 80039c0:	f003 030c 	and.w	r3, r3, #12
 80039c4:	2b08      	cmp	r3, #8
 80039c6:	d061      	beq.n	8003a8c <HAL_RCC_OscConfig+0x4b8>
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	69db      	ldr	r3, [r3, #28]
 80039cc:	2b02      	cmp	r3, #2
 80039ce:	d146      	bne.n	8003a5e <HAL_RCC_OscConfig+0x48a>
 80039d0:	4b3f      	ldr	r3, [pc, #252]	; (8003ad0 <HAL_RCC_OscConfig+0x4fc>)
 80039d2:	2200      	movs	r2, #0
 80039d4:	601a      	str	r2, [r3, #0]
 80039d6:	f7fe fad1 	bl	8001f7c <HAL_GetTick>
 80039da:	6138      	str	r0, [r7, #16]
 80039dc:	e008      	b.n	80039f0 <HAL_RCC_OscConfig+0x41c>
 80039de:	f7fe facd 	bl	8001f7c <HAL_GetTick>
 80039e2:	4602      	mov	r2, r0
 80039e4:	693b      	ldr	r3, [r7, #16]
 80039e6:	1ad3      	subs	r3, r2, r3
 80039e8:	2b02      	cmp	r3, #2
 80039ea:	d901      	bls.n	80039f0 <HAL_RCC_OscConfig+0x41c>
 80039ec:	2303      	movs	r3, #3
 80039ee:	e067      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 80039f0:	4b35      	ldr	r3, [pc, #212]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d1f0      	bne.n	80039de <HAL_RCC_OscConfig+0x40a>
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	6a1b      	ldr	r3, [r3, #32]
 8003a00:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003a04:	d108      	bne.n	8003a18 <HAL_RCC_OscConfig+0x444>
 8003a06:	4b30      	ldr	r3, [pc, #192]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a08:	685b      	ldr	r3, [r3, #4]
 8003a0a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	689b      	ldr	r3, [r3, #8]
 8003a12:	492d      	ldr	r1, [pc, #180]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a14:	4313      	orrs	r3, r2
 8003a16:	604b      	str	r3, [r1, #4]
 8003a18:	4b2b      	ldr	r3, [pc, #172]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a1a:	685b      	ldr	r3, [r3, #4]
 8003a1c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	6a19      	ldr	r1, [r3, #32]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a28:	430b      	orrs	r3, r1
 8003a2a:	4927      	ldr	r1, [pc, #156]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a2c:	4313      	orrs	r3, r2
 8003a2e:	604b      	str	r3, [r1, #4]
 8003a30:	4b27      	ldr	r3, [pc, #156]	; (8003ad0 <HAL_RCC_OscConfig+0x4fc>)
 8003a32:	2201      	movs	r2, #1
 8003a34:	601a      	str	r2, [r3, #0]
 8003a36:	f7fe faa1 	bl	8001f7c <HAL_GetTick>
 8003a3a:	6138      	str	r0, [r7, #16]
 8003a3c:	e008      	b.n	8003a50 <HAL_RCC_OscConfig+0x47c>
 8003a3e:	f7fe fa9d 	bl	8001f7c <HAL_GetTick>
 8003a42:	4602      	mov	r2, r0
 8003a44:	693b      	ldr	r3, [r7, #16]
 8003a46:	1ad3      	subs	r3, r2, r3
 8003a48:	2b02      	cmp	r3, #2
 8003a4a:	d901      	bls.n	8003a50 <HAL_RCC_OscConfig+0x47c>
 8003a4c:	2303      	movs	r3, #3
 8003a4e:	e037      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003a50:	4b1d      	ldr	r3, [pc, #116]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	d0f0      	beq.n	8003a3e <HAL_RCC_OscConfig+0x46a>
 8003a5c:	e02f      	b.n	8003abe <HAL_RCC_OscConfig+0x4ea>
 8003a5e:	4b1c      	ldr	r3, [pc, #112]	; (8003ad0 <HAL_RCC_OscConfig+0x4fc>)
 8003a60:	2200      	movs	r2, #0
 8003a62:	601a      	str	r2, [r3, #0]
 8003a64:	f7fe fa8a 	bl	8001f7c <HAL_GetTick>
 8003a68:	6138      	str	r0, [r7, #16]
 8003a6a:	e008      	b.n	8003a7e <HAL_RCC_OscConfig+0x4aa>
 8003a6c:	f7fe fa86 	bl	8001f7c <HAL_GetTick>
 8003a70:	4602      	mov	r2, r0
 8003a72:	693b      	ldr	r3, [r7, #16]
 8003a74:	1ad3      	subs	r3, r2, r3
 8003a76:	2b02      	cmp	r3, #2
 8003a78:	d901      	bls.n	8003a7e <HAL_RCC_OscConfig+0x4aa>
 8003a7a:	2303      	movs	r3, #3
 8003a7c:	e020      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003a7e:	4b12      	ldr	r3, [pc, #72]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	d1f0      	bne.n	8003a6c <HAL_RCC_OscConfig+0x498>
 8003a8a:	e018      	b.n	8003abe <HAL_RCC_OscConfig+0x4ea>
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	69db      	ldr	r3, [r3, #28]
 8003a90:	2b01      	cmp	r3, #1
 8003a92:	d101      	bne.n	8003a98 <HAL_RCC_OscConfig+0x4c4>
 8003a94:	2301      	movs	r3, #1
 8003a96:	e013      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003a98:	4b0b      	ldr	r3, [pc, #44]	; (8003ac8 <HAL_RCC_OscConfig+0x4f4>)
 8003a9a:	685b      	ldr	r3, [r3, #4]
 8003a9c:	60fb      	str	r3, [r7, #12]
 8003a9e:	68fb      	ldr	r3, [r7, #12]
 8003aa0:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	6a1b      	ldr	r3, [r3, #32]
 8003aa8:	429a      	cmp	r2, r3
 8003aaa:	d106      	bne.n	8003aba <HAL_RCC_OscConfig+0x4e6>
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ab6:	429a      	cmp	r2, r3
 8003ab8:	d001      	beq.n	8003abe <HAL_RCC_OscConfig+0x4ea>
 8003aba:	2301      	movs	r3, #1
 8003abc:	e000      	b.n	8003ac0 <HAL_RCC_OscConfig+0x4ec>
 8003abe:	2300      	movs	r3, #0
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	3718      	adds	r7, #24
 8003ac4:	46bd      	mov	sp, r7
 8003ac6:	bd80      	pop	{r7, pc}
 8003ac8:	40021000 	.word	0x40021000
 8003acc:	40007000 	.word	0x40007000
 8003ad0:	42420060 	.word	0x42420060

08003ad4 <HAL_RCC_ClockConfig>:
 8003ad4:	b580      	push	{r7, lr}
 8003ad6:	b084      	sub	sp, #16
 8003ad8:	af00      	add	r7, sp, #0
 8003ada:	6078      	str	r0, [r7, #4]
 8003adc:	6039      	str	r1, [r7, #0]
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d101      	bne.n	8003ae8 <HAL_RCC_ClockConfig+0x14>
 8003ae4:	2301      	movs	r3, #1
 8003ae6:	e0d0      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003ae8:	4b6a      	ldr	r3, [pc, #424]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	f003 0307 	and.w	r3, r3, #7
 8003af0:	683a      	ldr	r2, [r7, #0]
 8003af2:	429a      	cmp	r2, r3
 8003af4:	d910      	bls.n	8003b18 <HAL_RCC_ClockConfig+0x44>
 8003af6:	4b67      	ldr	r3, [pc, #412]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	f023 0207 	bic.w	r2, r3, #7
 8003afe:	4965      	ldr	r1, [pc, #404]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003b00:	683b      	ldr	r3, [r7, #0]
 8003b02:	4313      	orrs	r3, r2
 8003b04:	600b      	str	r3, [r1, #0]
 8003b06:	4b63      	ldr	r3, [pc, #396]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	f003 0307 	and.w	r3, r3, #7
 8003b0e:	683a      	ldr	r2, [r7, #0]
 8003b10:	429a      	cmp	r2, r3
 8003b12:	d001      	beq.n	8003b18 <HAL_RCC_ClockConfig+0x44>
 8003b14:	2301      	movs	r3, #1
 8003b16:	e0b8      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	f003 0302 	and.w	r3, r3, #2
 8003b20:	2b00      	cmp	r3, #0
 8003b22:	d020      	beq.n	8003b66 <HAL_RCC_ClockConfig+0x92>
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	f003 0304 	and.w	r3, r3, #4
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d005      	beq.n	8003b3c <HAL_RCC_ClockConfig+0x68>
 8003b30:	4b59      	ldr	r3, [pc, #356]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b32:	685b      	ldr	r3, [r3, #4]
 8003b34:	4a58      	ldr	r2, [pc, #352]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b36:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8003b3a:	6053      	str	r3, [r2, #4]
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	f003 0308 	and.w	r3, r3, #8
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d005      	beq.n	8003b54 <HAL_RCC_ClockConfig+0x80>
 8003b48:	4b53      	ldr	r3, [pc, #332]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b4a:	685b      	ldr	r3, [r3, #4]
 8003b4c:	4a52      	ldr	r2, [pc, #328]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b4e:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8003b52:	6053      	str	r3, [r2, #4]
 8003b54:	4b50      	ldr	r3, [pc, #320]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b56:	685b      	ldr	r3, [r3, #4]
 8003b58:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	689b      	ldr	r3, [r3, #8]
 8003b60:	494d      	ldr	r1, [pc, #308]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b62:	4313      	orrs	r3, r2
 8003b64:	604b      	str	r3, [r1, #4]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f003 0301 	and.w	r3, r3, #1
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d040      	beq.n	8003bf4 <HAL_RCC_ClockConfig+0x120>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	685b      	ldr	r3, [r3, #4]
 8003b76:	2b01      	cmp	r3, #1
 8003b78:	d107      	bne.n	8003b8a <HAL_RCC_ClockConfig+0xb6>
 8003b7a:	4b47      	ldr	r3, [pc, #284]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d115      	bne.n	8003bb2 <HAL_RCC_ClockConfig+0xde>
 8003b86:	2301      	movs	r3, #1
 8003b88:	e07f      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	685b      	ldr	r3, [r3, #4]
 8003b8e:	2b02      	cmp	r3, #2
 8003b90:	d107      	bne.n	8003ba2 <HAL_RCC_ClockConfig+0xce>
 8003b92:	4b41      	ldr	r3, [pc, #260]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d109      	bne.n	8003bb2 <HAL_RCC_ClockConfig+0xde>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	e073      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003ba2:	4b3d      	ldr	r3, [pc, #244]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	f003 0302 	and.w	r3, r3, #2
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d101      	bne.n	8003bb2 <HAL_RCC_ClockConfig+0xde>
 8003bae:	2301      	movs	r3, #1
 8003bb0:	e06b      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003bb2:	4b39      	ldr	r3, [pc, #228]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003bb4:	685b      	ldr	r3, [r3, #4]
 8003bb6:	f023 0203 	bic.w	r2, r3, #3
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	685b      	ldr	r3, [r3, #4]
 8003bbe:	4936      	ldr	r1, [pc, #216]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003bc0:	4313      	orrs	r3, r2
 8003bc2:	604b      	str	r3, [r1, #4]
 8003bc4:	f7fe f9da 	bl	8001f7c <HAL_GetTick>
 8003bc8:	60f8      	str	r0, [r7, #12]
 8003bca:	e00a      	b.n	8003be2 <HAL_RCC_ClockConfig+0x10e>
 8003bcc:	f7fe f9d6 	bl	8001f7c <HAL_GetTick>
 8003bd0:	4602      	mov	r2, r0
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	1ad3      	subs	r3, r2, r3
 8003bd6:	f241 3288 	movw	r2, #5000	; 0x1388
 8003bda:	4293      	cmp	r3, r2
 8003bdc:	d901      	bls.n	8003be2 <HAL_RCC_ClockConfig+0x10e>
 8003bde:	2303      	movs	r3, #3
 8003be0:	e053      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003be2:	4b2d      	ldr	r3, [pc, #180]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003be4:	685b      	ldr	r3, [r3, #4]
 8003be6:	f003 020c 	and.w	r2, r3, #12
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	685b      	ldr	r3, [r3, #4]
 8003bee:	009b      	lsls	r3, r3, #2
 8003bf0:	429a      	cmp	r2, r3
 8003bf2:	d1eb      	bne.n	8003bcc <HAL_RCC_ClockConfig+0xf8>
 8003bf4:	4b27      	ldr	r3, [pc, #156]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	f003 0307 	and.w	r3, r3, #7
 8003bfc:	683a      	ldr	r2, [r7, #0]
 8003bfe:	429a      	cmp	r2, r3
 8003c00:	d210      	bcs.n	8003c24 <HAL_RCC_ClockConfig+0x150>
 8003c02:	4b24      	ldr	r3, [pc, #144]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	f023 0207 	bic.w	r2, r3, #7
 8003c0a:	4922      	ldr	r1, [pc, #136]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003c0c:	683b      	ldr	r3, [r7, #0]
 8003c0e:	4313      	orrs	r3, r2
 8003c10:	600b      	str	r3, [r1, #0]
 8003c12:	4b20      	ldr	r3, [pc, #128]	; (8003c94 <HAL_RCC_ClockConfig+0x1c0>)
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	f003 0307 	and.w	r3, r3, #7
 8003c1a:	683a      	ldr	r2, [r7, #0]
 8003c1c:	429a      	cmp	r2, r3
 8003c1e:	d001      	beq.n	8003c24 <HAL_RCC_ClockConfig+0x150>
 8003c20:	2301      	movs	r3, #1
 8003c22:	e032      	b.n	8003c8a <HAL_RCC_ClockConfig+0x1b6>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	f003 0304 	and.w	r3, r3, #4
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d008      	beq.n	8003c42 <HAL_RCC_ClockConfig+0x16e>
 8003c30:	4b19      	ldr	r3, [pc, #100]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003c32:	685b      	ldr	r3, [r3, #4]
 8003c34:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	68db      	ldr	r3, [r3, #12]
 8003c3c:	4916      	ldr	r1, [pc, #88]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003c3e:	4313      	orrs	r3, r2
 8003c40:	604b      	str	r3, [r1, #4]
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	681b      	ldr	r3, [r3, #0]
 8003c46:	f003 0308 	and.w	r3, r3, #8
 8003c4a:	2b00      	cmp	r3, #0
 8003c4c:	d009      	beq.n	8003c62 <HAL_RCC_ClockConfig+0x18e>
 8003c4e:	4b12      	ldr	r3, [pc, #72]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003c50:	685b      	ldr	r3, [r3, #4]
 8003c52:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	691b      	ldr	r3, [r3, #16]
 8003c5a:	00db      	lsls	r3, r3, #3
 8003c5c:	490e      	ldr	r1, [pc, #56]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003c5e:	4313      	orrs	r3, r2
 8003c60:	604b      	str	r3, [r1, #4]
 8003c62:	f000 f821 	bl	8003ca8 <HAL_RCC_GetSysClockFreq>
 8003c66:	4602      	mov	r2, r0
 8003c68:	4b0b      	ldr	r3, [pc, #44]	; (8003c98 <HAL_RCC_ClockConfig+0x1c4>)
 8003c6a:	685b      	ldr	r3, [r3, #4]
 8003c6c:	091b      	lsrs	r3, r3, #4
 8003c6e:	f003 030f 	and.w	r3, r3, #15
 8003c72:	490a      	ldr	r1, [pc, #40]	; (8003c9c <HAL_RCC_ClockConfig+0x1c8>)
 8003c74:	5ccb      	ldrb	r3, [r1, r3]
 8003c76:	fa22 f303 	lsr.w	r3, r2, r3
 8003c7a:	4a09      	ldr	r2, [pc, #36]	; (8003ca0 <HAL_RCC_ClockConfig+0x1cc>)
 8003c7c:	6013      	str	r3, [r2, #0]
 8003c7e:	4b09      	ldr	r3, [pc, #36]	; (8003ca4 <HAL_RCC_ClockConfig+0x1d0>)
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	4618      	mov	r0, r3
 8003c84:	f7fe f938 	bl	8001ef8 <HAL_InitTick>
 8003c88:	2300      	movs	r3, #0
 8003c8a:	4618      	mov	r0, r3
 8003c8c:	3710      	adds	r7, #16
 8003c8e:	46bd      	mov	sp, r7
 8003c90:	bd80      	pop	{r7, pc}
 8003c92:	bf00      	nop
 8003c94:	40022000 	.word	0x40022000
 8003c98:	40021000 	.word	0x40021000
 8003c9c:	08006308 	.word	0x08006308
 8003ca0:	20000050 	.word	0x20000050
 8003ca4:	20000054 	.word	0x20000054

08003ca8 <HAL_RCC_GetSysClockFreq>:
 8003ca8:	b490      	push	{r4, r7}
 8003caa:	b08a      	sub	sp, #40	; 0x28
 8003cac:	af00      	add	r7, sp, #0
 8003cae:	4b2a      	ldr	r3, [pc, #168]	; (8003d58 <HAL_RCC_GetSysClockFreq+0xb0>)
 8003cb0:	1d3c      	adds	r4, r7, #4
 8003cb2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003cb4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003cb8:	f240 2301 	movw	r3, #513	; 0x201
 8003cbc:	803b      	strh	r3, [r7, #0]
 8003cbe:	2300      	movs	r3, #0
 8003cc0:	61fb      	str	r3, [r7, #28]
 8003cc2:	2300      	movs	r3, #0
 8003cc4:	61bb      	str	r3, [r7, #24]
 8003cc6:	2300      	movs	r3, #0
 8003cc8:	627b      	str	r3, [r7, #36]	; 0x24
 8003cca:	2300      	movs	r3, #0
 8003ccc:	617b      	str	r3, [r7, #20]
 8003cce:	2300      	movs	r3, #0
 8003cd0:	623b      	str	r3, [r7, #32]
 8003cd2:	4b22      	ldr	r3, [pc, #136]	; (8003d5c <HAL_RCC_GetSysClockFreq+0xb4>)
 8003cd4:	685b      	ldr	r3, [r3, #4]
 8003cd6:	61fb      	str	r3, [r7, #28]
 8003cd8:	69fb      	ldr	r3, [r7, #28]
 8003cda:	f003 030c 	and.w	r3, r3, #12
 8003cde:	2b04      	cmp	r3, #4
 8003ce0:	d002      	beq.n	8003ce8 <HAL_RCC_GetSysClockFreq+0x40>
 8003ce2:	2b08      	cmp	r3, #8
 8003ce4:	d003      	beq.n	8003cee <HAL_RCC_GetSysClockFreq+0x46>
 8003ce6:	e02d      	b.n	8003d44 <HAL_RCC_GetSysClockFreq+0x9c>
 8003ce8:	4b1d      	ldr	r3, [pc, #116]	; (8003d60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8003cea:	623b      	str	r3, [r7, #32]
 8003cec:	e02d      	b.n	8003d4a <HAL_RCC_GetSysClockFreq+0xa2>
 8003cee:	69fb      	ldr	r3, [r7, #28]
 8003cf0:	0c9b      	lsrs	r3, r3, #18
 8003cf2:	f003 030f 	and.w	r3, r3, #15
 8003cf6:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8003cfa:	4413      	add	r3, r2
 8003cfc:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8003d00:	617b      	str	r3, [r7, #20]
 8003d02:	69fb      	ldr	r3, [r7, #28]
 8003d04:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d013      	beq.n	8003d34 <HAL_RCC_GetSysClockFreq+0x8c>
 8003d0c:	4b13      	ldr	r3, [pc, #76]	; (8003d5c <HAL_RCC_GetSysClockFreq+0xb4>)
 8003d0e:	685b      	ldr	r3, [r3, #4]
 8003d10:	0c5b      	lsrs	r3, r3, #17
 8003d12:	f003 0301 	and.w	r3, r3, #1
 8003d16:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8003d1a:	4413      	add	r3, r2
 8003d1c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8003d20:	61bb      	str	r3, [r7, #24]
 8003d22:	697b      	ldr	r3, [r7, #20]
 8003d24:	4a0e      	ldr	r2, [pc, #56]	; (8003d60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8003d26:	fb02 f203 	mul.w	r2, r2, r3
 8003d2a:	69bb      	ldr	r3, [r7, #24]
 8003d2c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003d30:	627b      	str	r3, [r7, #36]	; 0x24
 8003d32:	e004      	b.n	8003d3e <HAL_RCC_GetSysClockFreq+0x96>
 8003d34:	697b      	ldr	r3, [r7, #20]
 8003d36:	4a0b      	ldr	r2, [pc, #44]	; (8003d64 <HAL_RCC_GetSysClockFreq+0xbc>)
 8003d38:	fb02 f303 	mul.w	r3, r2, r3
 8003d3c:	627b      	str	r3, [r7, #36]	; 0x24
 8003d3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d40:	623b      	str	r3, [r7, #32]
 8003d42:	e002      	b.n	8003d4a <HAL_RCC_GetSysClockFreq+0xa2>
 8003d44:	4b06      	ldr	r3, [pc, #24]	; (8003d60 <HAL_RCC_GetSysClockFreq+0xb8>)
 8003d46:	623b      	str	r3, [r7, #32]
 8003d48:	bf00      	nop
 8003d4a:	6a3b      	ldr	r3, [r7, #32]
 8003d4c:	4618      	mov	r0, r3
 8003d4e:	3728      	adds	r7, #40	; 0x28
 8003d50:	46bd      	mov	sp, r7
 8003d52:	bc90      	pop	{r4, r7}
 8003d54:	4770      	bx	lr
 8003d56:	bf00      	nop
 8003d58:	08005578 	.word	0x08005578
 8003d5c:	40021000 	.word	0x40021000
 8003d60:	007a1200 	.word	0x007a1200
 8003d64:	003d0900 	.word	0x003d0900

08003d68 <HAL_RCC_GetHCLKFreq>:
 8003d68:	b480      	push	{r7}
 8003d6a:	af00      	add	r7, sp, #0
 8003d6c:	4b02      	ldr	r3, [pc, #8]	; (8003d78 <HAL_RCC_GetHCLKFreq+0x10>)
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	4618      	mov	r0, r3
 8003d72:	46bd      	mov	sp, r7
 8003d74:	bc80      	pop	{r7}
 8003d76:	4770      	bx	lr
 8003d78:	20000050 	.word	0x20000050

08003d7c <HAL_RCC_GetPCLK1Freq>:
 8003d7c:	b580      	push	{r7, lr}
 8003d7e:	af00      	add	r7, sp, #0
 8003d80:	f7ff fff2 	bl	8003d68 <HAL_RCC_GetHCLKFreq>
 8003d84:	4602      	mov	r2, r0
 8003d86:	4b05      	ldr	r3, [pc, #20]	; (8003d9c <HAL_RCC_GetPCLK1Freq+0x20>)
 8003d88:	685b      	ldr	r3, [r3, #4]
 8003d8a:	0a1b      	lsrs	r3, r3, #8
 8003d8c:	f003 0307 	and.w	r3, r3, #7
 8003d90:	4903      	ldr	r1, [pc, #12]	; (8003da0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003d92:	5ccb      	ldrb	r3, [r1, r3]
 8003d94:	fa22 f303 	lsr.w	r3, r2, r3
 8003d98:	4618      	mov	r0, r3
 8003d9a:	bd80      	pop	{r7, pc}
 8003d9c:	40021000 	.word	0x40021000
 8003da0:	08006318 	.word	0x08006318

08003da4 <HAL_RCC_GetPCLK2Freq>:
 8003da4:	b580      	push	{r7, lr}
 8003da6:	af00      	add	r7, sp, #0
 8003da8:	f7ff ffde 	bl	8003d68 <HAL_RCC_GetHCLKFreq>
 8003dac:	4602      	mov	r2, r0
 8003dae:	4b05      	ldr	r3, [pc, #20]	; (8003dc4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003db0:	685b      	ldr	r3, [r3, #4]
 8003db2:	0adb      	lsrs	r3, r3, #11
 8003db4:	f003 0307 	and.w	r3, r3, #7
 8003db8:	4903      	ldr	r1, [pc, #12]	; (8003dc8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003dba:	5ccb      	ldrb	r3, [r1, r3]
 8003dbc:	fa22 f303 	lsr.w	r3, r2, r3
 8003dc0:	4618      	mov	r0, r3
 8003dc2:	bd80      	pop	{r7, pc}
 8003dc4:	40021000 	.word	0x40021000
 8003dc8:	08006318 	.word	0x08006318

08003dcc <RCC_Delay>:
 8003dcc:	b480      	push	{r7}
 8003dce:	b085      	sub	sp, #20
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	4b0a      	ldr	r3, [pc, #40]	; (8003e00 <RCC_Delay+0x34>)
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	4a0a      	ldr	r2, [pc, #40]	; (8003e04 <RCC_Delay+0x38>)
 8003dda:	fba2 2303 	umull	r2, r3, r2, r3
 8003dde:	0a5b      	lsrs	r3, r3, #9
 8003de0:	687a      	ldr	r2, [r7, #4]
 8003de2:	fb02 f303 	mul.w	r3, r2, r3
 8003de6:	60fb      	str	r3, [r7, #12]
 8003de8:	bf00      	nop
 8003dea:	68fb      	ldr	r3, [r7, #12]
 8003dec:	1e5a      	subs	r2, r3, #1
 8003dee:	60fa      	str	r2, [r7, #12]
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d1f9      	bne.n	8003de8 <RCC_Delay+0x1c>
 8003df4:	bf00      	nop
 8003df6:	bf00      	nop
 8003df8:	3714      	adds	r7, #20
 8003dfa:	46bd      	mov	sp, r7
 8003dfc:	bc80      	pop	{r7}
 8003dfe:	4770      	bx	lr
 8003e00:	20000050 	.word	0x20000050
 8003e04:	10624dd3 	.word	0x10624dd3

08003e08 <HAL_SPI_Init>:
 8003e08:	b580      	push	{r7, lr}
 8003e0a:	b082      	sub	sp, #8
 8003e0c:	af00      	add	r7, sp, #0
 8003e0e:	6078      	str	r0, [r7, #4]
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d101      	bne.n	8003e1a <HAL_SPI_Init+0x12>
 8003e16:	2301      	movs	r3, #1
 8003e18:	e076      	b.n	8003f08 <HAL_SPI_Init+0x100>
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d108      	bne.n	8003e34 <HAL_SPI_Init+0x2c>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	685b      	ldr	r3, [r3, #4]
 8003e26:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003e2a:	d009      	beq.n	8003e40 <HAL_SPI_Init+0x38>
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	2200      	movs	r2, #0
 8003e30:	61da      	str	r2, [r3, #28]
 8003e32:	e005      	b.n	8003e40 <HAL_SPI_Init+0x38>
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	2200      	movs	r2, #0
 8003e38:	611a      	str	r2, [r3, #16]
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	2200      	movs	r2, #0
 8003e3e:	615a      	str	r2, [r3, #20]
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	2200      	movs	r2, #0
 8003e44:	629a      	str	r2, [r3, #40]	; 0x28
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003e4c:	b2db      	uxtb	r3, r3
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d106      	bne.n	8003e60 <HAL_SPI_Init+0x58>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	2200      	movs	r2, #0
 8003e56:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003e5a:	6878      	ldr	r0, [r7, #4]
 8003e5c:	f7fd fd4c 	bl	80018f8 <HAL_SPI_MspInit>
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	2202      	movs	r2, #2
 8003e64:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	681a      	ldr	r2, [r3, #0]
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003e76:	601a      	str	r2, [r3, #0]
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	685b      	ldr	r3, [r3, #4]
 8003e7c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	689b      	ldr	r3, [r3, #8]
 8003e84:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8003e88:	431a      	orrs	r2, r3
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	68db      	ldr	r3, [r3, #12]
 8003e8e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003e92:	431a      	orrs	r2, r3
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	691b      	ldr	r3, [r3, #16]
 8003e98:	f003 0302 	and.w	r3, r3, #2
 8003e9c:	431a      	orrs	r2, r3
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	695b      	ldr	r3, [r3, #20]
 8003ea2:	f003 0301 	and.w	r3, r3, #1
 8003ea6:	431a      	orrs	r2, r3
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	699b      	ldr	r3, [r3, #24]
 8003eac:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003eb0:	431a      	orrs	r2, r3
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	69db      	ldr	r3, [r3, #28]
 8003eb6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8003eba:	431a      	orrs	r2, r3
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	6a1b      	ldr	r3, [r3, #32]
 8003ec0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003ec4:	ea42 0103 	orr.w	r1, r2, r3
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ecc:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	430a      	orrs	r2, r1
 8003ed6:	601a      	str	r2, [r3, #0]
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	699b      	ldr	r3, [r3, #24]
 8003edc:	0c1a      	lsrs	r2, r3, #16
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	f002 0204 	and.w	r2, r2, #4
 8003ee6:	605a      	str	r2, [r3, #4]
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	69da      	ldr	r2, [r3, #28]
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	681b      	ldr	r3, [r3, #0]
 8003ef2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003ef6:	61da      	str	r2, [r3, #28]
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	2200      	movs	r2, #0
 8003efc:	655a      	str	r2, [r3, #84]	; 0x54
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	2201      	movs	r2, #1
 8003f02:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003f06:	2300      	movs	r3, #0
 8003f08:	4618      	mov	r0, r3
 8003f0a:	3708      	adds	r7, #8
 8003f0c:	46bd      	mov	sp, r7
 8003f0e:	bd80      	pop	{r7, pc}

08003f10 <HAL_SPI_Transmit>:
 8003f10:	b580      	push	{r7, lr}
 8003f12:	b088      	sub	sp, #32
 8003f14:	af00      	add	r7, sp, #0
 8003f16:	60f8      	str	r0, [r7, #12]
 8003f18:	60b9      	str	r1, [r7, #8]
 8003f1a:	603b      	str	r3, [r7, #0]
 8003f1c:	4613      	mov	r3, r2
 8003f1e:	80fb      	strh	r3, [r7, #6]
 8003f20:	2300      	movs	r3, #0
 8003f22:	77fb      	strb	r3, [r7, #31]
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8003f2a:	2b01      	cmp	r3, #1
 8003f2c:	d101      	bne.n	8003f32 <HAL_SPI_Transmit+0x22>
 8003f2e:	2302      	movs	r3, #2
 8003f30:	e126      	b.n	8004180 <HAL_SPI_Transmit+0x270>
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	2201      	movs	r2, #1
 8003f36:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003f3a:	f7fe f81f 	bl	8001f7c <HAL_GetTick>
 8003f3e:	61b8      	str	r0, [r7, #24]
 8003f40:	88fb      	ldrh	r3, [r7, #6]
 8003f42:	82fb      	strh	r3, [r7, #22]
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003f4a:	b2db      	uxtb	r3, r3
 8003f4c:	2b01      	cmp	r3, #1
 8003f4e:	d002      	beq.n	8003f56 <HAL_SPI_Transmit+0x46>
 8003f50:	2302      	movs	r3, #2
 8003f52:	77fb      	strb	r3, [r7, #31]
 8003f54:	e10b      	b.n	800416e <HAL_SPI_Transmit+0x25e>
 8003f56:	68bb      	ldr	r3, [r7, #8]
 8003f58:	2b00      	cmp	r3, #0
 8003f5a:	d002      	beq.n	8003f62 <HAL_SPI_Transmit+0x52>
 8003f5c:	88fb      	ldrh	r3, [r7, #6]
 8003f5e:	2b00      	cmp	r3, #0
 8003f60:	d102      	bne.n	8003f68 <HAL_SPI_Transmit+0x58>
 8003f62:	2301      	movs	r3, #1
 8003f64:	77fb      	strb	r3, [r7, #31]
 8003f66:	e102      	b.n	800416e <HAL_SPI_Transmit+0x25e>
 8003f68:	68fb      	ldr	r3, [r7, #12]
 8003f6a:	2203      	movs	r2, #3
 8003f6c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	2200      	movs	r2, #0
 8003f74:	655a      	str	r2, [r3, #84]	; 0x54
 8003f76:	68fb      	ldr	r3, [r7, #12]
 8003f78:	68ba      	ldr	r2, [r7, #8]
 8003f7a:	631a      	str	r2, [r3, #48]	; 0x30
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	88fa      	ldrh	r2, [r7, #6]
 8003f80:	869a      	strh	r2, [r3, #52]	; 0x34
 8003f82:	68fb      	ldr	r3, [r7, #12]
 8003f84:	88fa      	ldrh	r2, [r7, #6]
 8003f86:	86da      	strh	r2, [r3, #54]	; 0x36
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	2200      	movs	r2, #0
 8003f8c:	639a      	str	r2, [r3, #56]	; 0x38
 8003f8e:	68fb      	ldr	r3, [r7, #12]
 8003f90:	2200      	movs	r2, #0
 8003f92:	879a      	strh	r2, [r3, #60]	; 0x3c
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	2200      	movs	r2, #0
 8003f98:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	2200      	movs	r2, #0
 8003f9e:	645a      	str	r2, [r3, #68]	; 0x44
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	2200      	movs	r2, #0
 8003fa4:	641a      	str	r2, [r3, #64]	; 0x40
 8003fa6:	68fb      	ldr	r3, [r7, #12]
 8003fa8:	689b      	ldr	r3, [r3, #8]
 8003faa:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003fae:	d10f      	bne.n	8003fd0 <HAL_SPI_Transmit+0xc0>
 8003fb0:	68fb      	ldr	r3, [r7, #12]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	681a      	ldr	r2, [r3, #0]
 8003fb6:	68fb      	ldr	r3, [r7, #12]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003fbe:	601a      	str	r2, [r3, #0]
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	681a      	ldr	r2, [r3, #0]
 8003fc6:	68fb      	ldr	r3, [r7, #12]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003fce:	601a      	str	r2, [r3, #0]
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fda:	2b40      	cmp	r3, #64	; 0x40
 8003fdc:	d007      	beq.n	8003fee <HAL_SPI_Transmit+0xde>
 8003fde:	68fb      	ldr	r3, [r7, #12]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	681a      	ldr	r2, [r3, #0]
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003fec:	601a      	str	r2, [r3, #0]
 8003fee:	68fb      	ldr	r3, [r7, #12]
 8003ff0:	68db      	ldr	r3, [r3, #12]
 8003ff2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003ff6:	d14b      	bne.n	8004090 <HAL_SPI_Transmit+0x180>
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	685b      	ldr	r3, [r3, #4]
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d002      	beq.n	8004006 <HAL_SPI_Transmit+0xf6>
 8004000:	8afb      	ldrh	r3, [r7, #22]
 8004002:	2b01      	cmp	r3, #1
 8004004:	d13e      	bne.n	8004084 <HAL_SPI_Transmit+0x174>
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800400a:	881a      	ldrh	r2, [r3, #0]
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	60da      	str	r2, [r3, #12]
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004016:	1c9a      	adds	r2, r3, #2
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	631a      	str	r2, [r3, #48]	; 0x30
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004020:	b29b      	uxth	r3, r3
 8004022:	3b01      	subs	r3, #1
 8004024:	b29a      	uxth	r2, r3
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	86da      	strh	r2, [r3, #54]	; 0x36
 800402a:	e02b      	b.n	8004084 <HAL_SPI_Transmit+0x174>
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	689b      	ldr	r3, [r3, #8]
 8004032:	f003 0302 	and.w	r3, r3, #2
 8004036:	2b02      	cmp	r3, #2
 8004038:	d112      	bne.n	8004060 <HAL_SPI_Transmit+0x150>
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800403e:	881a      	ldrh	r2, [r3, #0]
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	60da      	str	r2, [r3, #12]
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800404a:	1c9a      	adds	r2, r3, #2
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	631a      	str	r2, [r3, #48]	; 0x30
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004054:	b29b      	uxth	r3, r3
 8004056:	3b01      	subs	r3, #1
 8004058:	b29a      	uxth	r2, r3
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	86da      	strh	r2, [r3, #54]	; 0x36
 800405e:	e011      	b.n	8004084 <HAL_SPI_Transmit+0x174>
 8004060:	f7fd ff8c 	bl	8001f7c <HAL_GetTick>
 8004064:	4602      	mov	r2, r0
 8004066:	69bb      	ldr	r3, [r7, #24]
 8004068:	1ad3      	subs	r3, r2, r3
 800406a:	683a      	ldr	r2, [r7, #0]
 800406c:	429a      	cmp	r2, r3
 800406e:	d803      	bhi.n	8004078 <HAL_SPI_Transmit+0x168>
 8004070:	683b      	ldr	r3, [r7, #0]
 8004072:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004076:	d102      	bne.n	800407e <HAL_SPI_Transmit+0x16e>
 8004078:	683b      	ldr	r3, [r7, #0]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d102      	bne.n	8004084 <HAL_SPI_Transmit+0x174>
 800407e:	2303      	movs	r3, #3
 8004080:	77fb      	strb	r3, [r7, #31]
 8004082:	e074      	b.n	800416e <HAL_SPI_Transmit+0x25e>
 8004084:	68fb      	ldr	r3, [r7, #12]
 8004086:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004088:	b29b      	uxth	r3, r3
 800408a:	2b00      	cmp	r3, #0
 800408c:	d1ce      	bne.n	800402c <HAL_SPI_Transmit+0x11c>
 800408e:	e04c      	b.n	800412a <HAL_SPI_Transmit+0x21a>
 8004090:	68fb      	ldr	r3, [r7, #12]
 8004092:	685b      	ldr	r3, [r3, #4]
 8004094:	2b00      	cmp	r3, #0
 8004096:	d002      	beq.n	800409e <HAL_SPI_Transmit+0x18e>
 8004098:	8afb      	ldrh	r3, [r7, #22]
 800409a:	2b01      	cmp	r3, #1
 800409c:	d140      	bne.n	8004120 <HAL_SPI_Transmit+0x210>
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80040a2:	68fb      	ldr	r3, [r7, #12]
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	330c      	adds	r3, #12
 80040a8:	7812      	ldrb	r2, [r2, #0]
 80040aa:	701a      	strb	r2, [r3, #0]
 80040ac:	68fb      	ldr	r3, [r7, #12]
 80040ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040b0:	1c5a      	adds	r2, r3, #1
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	631a      	str	r2, [r3, #48]	; 0x30
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80040ba:	b29b      	uxth	r3, r3
 80040bc:	3b01      	subs	r3, #1
 80040be:	b29a      	uxth	r2, r3
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	86da      	strh	r2, [r3, #54]	; 0x36
 80040c4:	e02c      	b.n	8004120 <HAL_SPI_Transmit+0x210>
 80040c6:	68fb      	ldr	r3, [r7, #12]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	689b      	ldr	r3, [r3, #8]
 80040cc:	f003 0302 	and.w	r3, r3, #2
 80040d0:	2b02      	cmp	r3, #2
 80040d2:	d113      	bne.n	80040fc <HAL_SPI_Transmit+0x1ec>
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80040d8:	68fb      	ldr	r3, [r7, #12]
 80040da:	681b      	ldr	r3, [r3, #0]
 80040dc:	330c      	adds	r3, #12
 80040de:	7812      	ldrb	r2, [r2, #0]
 80040e0:	701a      	strb	r2, [r3, #0]
 80040e2:	68fb      	ldr	r3, [r7, #12]
 80040e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040e6:	1c5a      	adds	r2, r3, #1
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	631a      	str	r2, [r3, #48]	; 0x30
 80040ec:	68fb      	ldr	r3, [r7, #12]
 80040ee:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80040f0:	b29b      	uxth	r3, r3
 80040f2:	3b01      	subs	r3, #1
 80040f4:	b29a      	uxth	r2, r3
 80040f6:	68fb      	ldr	r3, [r7, #12]
 80040f8:	86da      	strh	r2, [r3, #54]	; 0x36
 80040fa:	e011      	b.n	8004120 <HAL_SPI_Transmit+0x210>
 80040fc:	f7fd ff3e 	bl	8001f7c <HAL_GetTick>
 8004100:	4602      	mov	r2, r0
 8004102:	69bb      	ldr	r3, [r7, #24]
 8004104:	1ad3      	subs	r3, r2, r3
 8004106:	683a      	ldr	r2, [r7, #0]
 8004108:	429a      	cmp	r2, r3
 800410a:	d803      	bhi.n	8004114 <HAL_SPI_Transmit+0x204>
 800410c:	683b      	ldr	r3, [r7, #0]
 800410e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004112:	d102      	bne.n	800411a <HAL_SPI_Transmit+0x20a>
 8004114:	683b      	ldr	r3, [r7, #0]
 8004116:	2b00      	cmp	r3, #0
 8004118:	d102      	bne.n	8004120 <HAL_SPI_Transmit+0x210>
 800411a:	2303      	movs	r3, #3
 800411c:	77fb      	strb	r3, [r7, #31]
 800411e:	e026      	b.n	800416e <HAL_SPI_Transmit+0x25e>
 8004120:	68fb      	ldr	r3, [r7, #12]
 8004122:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004124:	b29b      	uxth	r3, r3
 8004126:	2b00      	cmp	r3, #0
 8004128:	d1cd      	bne.n	80040c6 <HAL_SPI_Transmit+0x1b6>
 800412a:	69ba      	ldr	r2, [r7, #24]
 800412c:	6839      	ldr	r1, [r7, #0]
 800412e:	68f8      	ldr	r0, [r7, #12]
 8004130:	f000 fb58 	bl	80047e4 <SPI_EndRxTxTransaction>
 8004134:	4603      	mov	r3, r0
 8004136:	2b00      	cmp	r3, #0
 8004138:	d002      	beq.n	8004140 <HAL_SPI_Transmit+0x230>
 800413a:	68fb      	ldr	r3, [r7, #12]
 800413c:	2220      	movs	r2, #32
 800413e:	655a      	str	r2, [r3, #84]	; 0x54
 8004140:	68fb      	ldr	r3, [r7, #12]
 8004142:	689b      	ldr	r3, [r3, #8]
 8004144:	2b00      	cmp	r3, #0
 8004146:	d10a      	bne.n	800415e <HAL_SPI_Transmit+0x24e>
 8004148:	2300      	movs	r3, #0
 800414a:	613b      	str	r3, [r7, #16]
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	68db      	ldr	r3, [r3, #12]
 8004152:	613b      	str	r3, [r7, #16]
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	689b      	ldr	r3, [r3, #8]
 800415a:	613b      	str	r3, [r7, #16]
 800415c:	693b      	ldr	r3, [r7, #16]
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004162:	2b00      	cmp	r3, #0
 8004164:	d002      	beq.n	800416c <HAL_SPI_Transmit+0x25c>
 8004166:	2301      	movs	r3, #1
 8004168:	77fb      	strb	r3, [r7, #31]
 800416a:	e000      	b.n	800416e <HAL_SPI_Transmit+0x25e>
 800416c:	bf00      	nop
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	2201      	movs	r2, #1
 8004172:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004176:	68fb      	ldr	r3, [r7, #12]
 8004178:	2200      	movs	r2, #0
 800417a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800417e:	7ffb      	ldrb	r3, [r7, #31]
 8004180:	4618      	mov	r0, r3
 8004182:	3720      	adds	r7, #32
 8004184:	46bd      	mov	sp, r7
 8004186:	bd80      	pop	{r7, pc}

08004188 <HAL_SPI_TransmitReceive>:
 8004188:	b580      	push	{r7, lr}
 800418a:	b08c      	sub	sp, #48	; 0x30
 800418c:	af00      	add	r7, sp, #0
 800418e:	60f8      	str	r0, [r7, #12]
 8004190:	60b9      	str	r1, [r7, #8]
 8004192:	607a      	str	r2, [r7, #4]
 8004194:	807b      	strh	r3, [r7, #2]
 8004196:	2301      	movs	r3, #1
 8004198:	62fb      	str	r3, [r7, #44]	; 0x2c
 800419a:	2300      	movs	r3, #0
 800419c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80041a6:	2b01      	cmp	r3, #1
 80041a8:	d101      	bne.n	80041ae <HAL_SPI_TransmitReceive+0x26>
 80041aa:	2302      	movs	r3, #2
 80041ac:	e18a      	b.n	80044c4 <HAL_SPI_TransmitReceive+0x33c>
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	2201      	movs	r2, #1
 80041b2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80041b6:	f7fd fee1 	bl	8001f7c <HAL_GetTick>
 80041ba:	6278      	str	r0, [r7, #36]	; 0x24
 80041bc:	68fb      	ldr	r3, [r7, #12]
 80041be:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80041c2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	685b      	ldr	r3, [r3, #4]
 80041ca:	61fb      	str	r3, [r7, #28]
 80041cc:	887b      	ldrh	r3, [r7, #2]
 80041ce:	837b      	strh	r3, [r7, #26]
 80041d0:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80041d4:	2b01      	cmp	r3, #1
 80041d6:	d00f      	beq.n	80041f8 <HAL_SPI_TransmitReceive+0x70>
 80041d8:	69fb      	ldr	r3, [r7, #28]
 80041da:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80041de:	d107      	bne.n	80041f0 <HAL_SPI_TransmitReceive+0x68>
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	689b      	ldr	r3, [r3, #8]
 80041e4:	2b00      	cmp	r3, #0
 80041e6:	d103      	bne.n	80041f0 <HAL_SPI_TransmitReceive+0x68>
 80041e8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80041ec:	2b04      	cmp	r3, #4
 80041ee:	d003      	beq.n	80041f8 <HAL_SPI_TransmitReceive+0x70>
 80041f0:	2302      	movs	r3, #2
 80041f2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80041f6:	e15b      	b.n	80044b0 <HAL_SPI_TransmitReceive+0x328>
 80041f8:	68bb      	ldr	r3, [r7, #8]
 80041fa:	2b00      	cmp	r3, #0
 80041fc:	d005      	beq.n	800420a <HAL_SPI_TransmitReceive+0x82>
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	2b00      	cmp	r3, #0
 8004202:	d002      	beq.n	800420a <HAL_SPI_TransmitReceive+0x82>
 8004204:	887b      	ldrh	r3, [r7, #2]
 8004206:	2b00      	cmp	r3, #0
 8004208:	d103      	bne.n	8004212 <HAL_SPI_TransmitReceive+0x8a>
 800420a:	2301      	movs	r3, #1
 800420c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004210:	e14e      	b.n	80044b0 <HAL_SPI_TransmitReceive+0x328>
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004218:	b2db      	uxtb	r3, r3
 800421a:	2b04      	cmp	r3, #4
 800421c:	d003      	beq.n	8004226 <HAL_SPI_TransmitReceive+0x9e>
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	2205      	movs	r2, #5
 8004222:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	2200      	movs	r2, #0
 800422a:	655a      	str	r2, [r3, #84]	; 0x54
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	687a      	ldr	r2, [r7, #4]
 8004230:	639a      	str	r2, [r3, #56]	; 0x38
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	887a      	ldrh	r2, [r7, #2]
 8004236:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004238:	68fb      	ldr	r3, [r7, #12]
 800423a:	887a      	ldrh	r2, [r7, #2]
 800423c:	879a      	strh	r2, [r3, #60]	; 0x3c
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	68ba      	ldr	r2, [r7, #8]
 8004242:	631a      	str	r2, [r3, #48]	; 0x30
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	887a      	ldrh	r2, [r7, #2]
 8004248:	86da      	strh	r2, [r3, #54]	; 0x36
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	887a      	ldrh	r2, [r7, #2]
 800424e:	869a      	strh	r2, [r3, #52]	; 0x34
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	2200      	movs	r2, #0
 8004254:	641a      	str	r2, [r3, #64]	; 0x40
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	2200      	movs	r2, #0
 800425a:	645a      	str	r2, [r3, #68]	; 0x44
 800425c:	68fb      	ldr	r3, [r7, #12]
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004266:	2b40      	cmp	r3, #64	; 0x40
 8004268:	d007      	beq.n	800427a <HAL_SPI_TransmitReceive+0xf2>
 800426a:	68fb      	ldr	r3, [r7, #12]
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	681a      	ldr	r2, [r3, #0]
 8004270:	68fb      	ldr	r3, [r7, #12]
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004278:	601a      	str	r2, [r3, #0]
 800427a:	68fb      	ldr	r3, [r7, #12]
 800427c:	68db      	ldr	r3, [r3, #12]
 800427e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004282:	d178      	bne.n	8004376 <HAL_SPI_TransmitReceive+0x1ee>
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	685b      	ldr	r3, [r3, #4]
 8004288:	2b00      	cmp	r3, #0
 800428a:	d002      	beq.n	8004292 <HAL_SPI_TransmitReceive+0x10a>
 800428c:	8b7b      	ldrh	r3, [r7, #26]
 800428e:	2b01      	cmp	r3, #1
 8004290:	d166      	bne.n	8004360 <HAL_SPI_TransmitReceive+0x1d8>
 8004292:	68fb      	ldr	r3, [r7, #12]
 8004294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004296:	881a      	ldrh	r2, [r3, #0]
 8004298:	68fb      	ldr	r3, [r7, #12]
 800429a:	681b      	ldr	r3, [r3, #0]
 800429c:	60da      	str	r2, [r3, #12]
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042a2:	1c9a      	adds	r2, r3, #2
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	631a      	str	r2, [r3, #48]	; 0x30
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80042ac:	b29b      	uxth	r3, r3
 80042ae:	3b01      	subs	r3, #1
 80042b0:	b29a      	uxth	r2, r3
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	86da      	strh	r2, [r3, #54]	; 0x36
 80042b6:	e053      	b.n	8004360 <HAL_SPI_TransmitReceive+0x1d8>
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	689b      	ldr	r3, [r3, #8]
 80042be:	f003 0302 	and.w	r3, r3, #2
 80042c2:	2b02      	cmp	r3, #2
 80042c4:	d11b      	bne.n	80042fe <HAL_SPI_TransmitReceive+0x176>
 80042c6:	68fb      	ldr	r3, [r7, #12]
 80042c8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80042ca:	b29b      	uxth	r3, r3
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	d016      	beq.n	80042fe <HAL_SPI_TransmitReceive+0x176>
 80042d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80042d2:	2b01      	cmp	r3, #1
 80042d4:	d113      	bne.n	80042fe <HAL_SPI_TransmitReceive+0x176>
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042da:	881a      	ldrh	r2, [r3, #0]
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	60da      	str	r2, [r3, #12]
 80042e2:	68fb      	ldr	r3, [r7, #12]
 80042e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042e6:	1c9a      	adds	r2, r3, #2
 80042e8:	68fb      	ldr	r3, [r7, #12]
 80042ea:	631a      	str	r2, [r3, #48]	; 0x30
 80042ec:	68fb      	ldr	r3, [r7, #12]
 80042ee:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80042f0:	b29b      	uxth	r3, r3
 80042f2:	3b01      	subs	r3, #1
 80042f4:	b29a      	uxth	r2, r3
 80042f6:	68fb      	ldr	r3, [r7, #12]
 80042f8:	86da      	strh	r2, [r3, #54]	; 0x36
 80042fa:	2300      	movs	r3, #0
 80042fc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80042fe:	68fb      	ldr	r3, [r7, #12]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	689b      	ldr	r3, [r3, #8]
 8004304:	f003 0301 	and.w	r3, r3, #1
 8004308:	2b01      	cmp	r3, #1
 800430a:	d119      	bne.n	8004340 <HAL_SPI_TransmitReceive+0x1b8>
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004310:	b29b      	uxth	r3, r3
 8004312:	2b00      	cmp	r3, #0
 8004314:	d014      	beq.n	8004340 <HAL_SPI_TransmitReceive+0x1b8>
 8004316:	68fb      	ldr	r3, [r7, #12]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	68da      	ldr	r2, [r3, #12]
 800431c:	68fb      	ldr	r3, [r7, #12]
 800431e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004320:	b292      	uxth	r2, r2
 8004322:	801a      	strh	r2, [r3, #0]
 8004324:	68fb      	ldr	r3, [r7, #12]
 8004326:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004328:	1c9a      	adds	r2, r3, #2
 800432a:	68fb      	ldr	r3, [r7, #12]
 800432c:	639a      	str	r2, [r3, #56]	; 0x38
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004332:	b29b      	uxth	r3, r3
 8004334:	3b01      	subs	r3, #1
 8004336:	b29a      	uxth	r2, r3
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800433c:	2301      	movs	r3, #1
 800433e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004340:	f7fd fe1c 	bl	8001f7c <HAL_GetTick>
 8004344:	4602      	mov	r2, r0
 8004346:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004348:	1ad3      	subs	r3, r2, r3
 800434a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800434c:	429a      	cmp	r2, r3
 800434e:	d807      	bhi.n	8004360 <HAL_SPI_TransmitReceive+0x1d8>
 8004350:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004352:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004356:	d003      	beq.n	8004360 <HAL_SPI_TransmitReceive+0x1d8>
 8004358:	2303      	movs	r3, #3
 800435a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800435e:	e0a7      	b.n	80044b0 <HAL_SPI_TransmitReceive+0x328>
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004364:	b29b      	uxth	r3, r3
 8004366:	2b00      	cmp	r3, #0
 8004368:	d1a6      	bne.n	80042b8 <HAL_SPI_TransmitReceive+0x130>
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800436e:	b29b      	uxth	r3, r3
 8004370:	2b00      	cmp	r3, #0
 8004372:	d1a1      	bne.n	80042b8 <HAL_SPI_TransmitReceive+0x130>
 8004374:	e07c      	b.n	8004470 <HAL_SPI_TransmitReceive+0x2e8>
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	685b      	ldr	r3, [r3, #4]
 800437a:	2b00      	cmp	r3, #0
 800437c:	d002      	beq.n	8004384 <HAL_SPI_TransmitReceive+0x1fc>
 800437e:	8b7b      	ldrh	r3, [r7, #26]
 8004380:	2b01      	cmp	r3, #1
 8004382:	d16b      	bne.n	800445c <HAL_SPI_TransmitReceive+0x2d4>
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	330c      	adds	r3, #12
 800438e:	7812      	ldrb	r2, [r2, #0]
 8004390:	701a      	strb	r2, [r3, #0]
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004396:	1c5a      	adds	r2, r3, #1
 8004398:	68fb      	ldr	r3, [r7, #12]
 800439a:	631a      	str	r2, [r3, #48]	; 0x30
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043a0:	b29b      	uxth	r3, r3
 80043a2:	3b01      	subs	r3, #1
 80043a4:	b29a      	uxth	r2, r3
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	86da      	strh	r2, [r3, #54]	; 0x36
 80043aa:	e057      	b.n	800445c <HAL_SPI_TransmitReceive+0x2d4>
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	689b      	ldr	r3, [r3, #8]
 80043b2:	f003 0302 	and.w	r3, r3, #2
 80043b6:	2b02      	cmp	r3, #2
 80043b8:	d11c      	bne.n	80043f4 <HAL_SPI_TransmitReceive+0x26c>
 80043ba:	68fb      	ldr	r3, [r7, #12]
 80043bc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043be:	b29b      	uxth	r3, r3
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d017      	beq.n	80043f4 <HAL_SPI_TransmitReceive+0x26c>
 80043c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043c6:	2b01      	cmp	r3, #1
 80043c8:	d114      	bne.n	80043f4 <HAL_SPI_TransmitReceive+0x26c>
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	330c      	adds	r3, #12
 80043d4:	7812      	ldrb	r2, [r2, #0]
 80043d6:	701a      	strb	r2, [r3, #0]
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043dc:	1c5a      	adds	r2, r3, #1
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	631a      	str	r2, [r3, #48]	; 0x30
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043e6:	b29b      	uxth	r3, r3
 80043e8:	3b01      	subs	r3, #1
 80043ea:	b29a      	uxth	r2, r3
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	86da      	strh	r2, [r3, #54]	; 0x36
 80043f0:	2300      	movs	r3, #0
 80043f2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	689b      	ldr	r3, [r3, #8]
 80043fa:	f003 0301 	and.w	r3, r3, #1
 80043fe:	2b01      	cmp	r3, #1
 8004400:	d119      	bne.n	8004436 <HAL_SPI_TransmitReceive+0x2ae>
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004406:	b29b      	uxth	r3, r3
 8004408:	2b00      	cmp	r3, #0
 800440a:	d014      	beq.n	8004436 <HAL_SPI_TransmitReceive+0x2ae>
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	68da      	ldr	r2, [r3, #12]
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004416:	b2d2      	uxtb	r2, r2
 8004418:	701a      	strb	r2, [r3, #0]
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800441e:	1c5a      	adds	r2, r3, #1
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	639a      	str	r2, [r3, #56]	; 0x38
 8004424:	68fb      	ldr	r3, [r7, #12]
 8004426:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004428:	b29b      	uxth	r3, r3
 800442a:	3b01      	subs	r3, #1
 800442c:	b29a      	uxth	r2, r3
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004432:	2301      	movs	r3, #1
 8004434:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004436:	f7fd fda1 	bl	8001f7c <HAL_GetTick>
 800443a:	4602      	mov	r2, r0
 800443c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800443e:	1ad3      	subs	r3, r2, r3
 8004440:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8004442:	429a      	cmp	r2, r3
 8004444:	d803      	bhi.n	800444e <HAL_SPI_TransmitReceive+0x2c6>
 8004446:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004448:	f1b3 3fff 	cmp.w	r3, #4294967295
 800444c:	d102      	bne.n	8004454 <HAL_SPI_TransmitReceive+0x2cc>
 800444e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004450:	2b00      	cmp	r3, #0
 8004452:	d103      	bne.n	800445c <HAL_SPI_TransmitReceive+0x2d4>
 8004454:	2303      	movs	r3, #3
 8004456:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800445a:	e029      	b.n	80044b0 <HAL_SPI_TransmitReceive+0x328>
 800445c:	68fb      	ldr	r3, [r7, #12]
 800445e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004460:	b29b      	uxth	r3, r3
 8004462:	2b00      	cmp	r3, #0
 8004464:	d1a2      	bne.n	80043ac <HAL_SPI_TransmitReceive+0x224>
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800446a:	b29b      	uxth	r3, r3
 800446c:	2b00      	cmp	r3, #0
 800446e:	d19d      	bne.n	80043ac <HAL_SPI_TransmitReceive+0x224>
 8004470:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004472:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8004474:	68f8      	ldr	r0, [r7, #12]
 8004476:	f000 f9b5 	bl	80047e4 <SPI_EndRxTxTransaction>
 800447a:	4603      	mov	r3, r0
 800447c:	2b00      	cmp	r3, #0
 800447e:	d006      	beq.n	800448e <HAL_SPI_TransmitReceive+0x306>
 8004480:	2301      	movs	r3, #1
 8004482:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004486:	68fb      	ldr	r3, [r7, #12]
 8004488:	2220      	movs	r2, #32
 800448a:	655a      	str	r2, [r3, #84]	; 0x54
 800448c:	e010      	b.n	80044b0 <HAL_SPI_TransmitReceive+0x328>
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	689b      	ldr	r3, [r3, #8]
 8004492:	2b00      	cmp	r3, #0
 8004494:	d10b      	bne.n	80044ae <HAL_SPI_TransmitReceive+0x326>
 8004496:	2300      	movs	r3, #0
 8004498:	617b      	str	r3, [r7, #20]
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	68db      	ldr	r3, [r3, #12]
 80044a0:	617b      	str	r3, [r7, #20]
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	689b      	ldr	r3, [r3, #8]
 80044a8:	617b      	str	r3, [r7, #20]
 80044aa:	697b      	ldr	r3, [r7, #20]
 80044ac:	e000      	b.n	80044b0 <HAL_SPI_TransmitReceive+0x328>
 80044ae:	bf00      	nop
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	2201      	movs	r2, #1
 80044b4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	2200      	movs	r2, #0
 80044bc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80044c0:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80044c4:	4618      	mov	r0, r3
 80044c6:	3730      	adds	r7, #48	; 0x30
 80044c8:	46bd      	mov	sp, r7
 80044ca:	bd80      	pop	{r7, pc}

080044cc <HAL_SPI_IRQHandler>:
 80044cc:	b580      	push	{r7, lr}
 80044ce:	b088      	sub	sp, #32
 80044d0:	af00      	add	r7, sp, #0
 80044d2:	6078      	str	r0, [r7, #4]
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	685b      	ldr	r3, [r3, #4]
 80044da:	61fb      	str	r3, [r7, #28]
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	689b      	ldr	r3, [r3, #8]
 80044e2:	61bb      	str	r3, [r7, #24]
 80044e4:	69bb      	ldr	r3, [r7, #24]
 80044e6:	099b      	lsrs	r3, r3, #6
 80044e8:	f003 0301 	and.w	r3, r3, #1
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d10f      	bne.n	8004510 <HAL_SPI_IRQHandler+0x44>
 80044f0:	69bb      	ldr	r3, [r7, #24]
 80044f2:	f003 0301 	and.w	r3, r3, #1
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d00a      	beq.n	8004510 <HAL_SPI_IRQHandler+0x44>
 80044fa:	69fb      	ldr	r3, [r7, #28]
 80044fc:	099b      	lsrs	r3, r3, #6
 80044fe:	f003 0301 	and.w	r3, r3, #1
 8004502:	2b00      	cmp	r3, #0
 8004504:	d004      	beq.n	8004510 <HAL_SPI_IRQHandler+0x44>
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800450a:	6878      	ldr	r0, [r7, #4]
 800450c:	4798      	blx	r3
 800450e:	e0be      	b.n	800468e <HAL_SPI_IRQHandler+0x1c2>
 8004510:	69bb      	ldr	r3, [r7, #24]
 8004512:	085b      	lsrs	r3, r3, #1
 8004514:	f003 0301 	and.w	r3, r3, #1
 8004518:	2b00      	cmp	r3, #0
 800451a:	d00a      	beq.n	8004532 <HAL_SPI_IRQHandler+0x66>
 800451c:	69fb      	ldr	r3, [r7, #28]
 800451e:	09db      	lsrs	r3, r3, #7
 8004520:	f003 0301 	and.w	r3, r3, #1
 8004524:	2b00      	cmp	r3, #0
 8004526:	d004      	beq.n	8004532 <HAL_SPI_IRQHandler+0x66>
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800452c:	6878      	ldr	r0, [r7, #4]
 800452e:	4798      	blx	r3
 8004530:	e0ad      	b.n	800468e <HAL_SPI_IRQHandler+0x1c2>
 8004532:	69bb      	ldr	r3, [r7, #24]
 8004534:	095b      	lsrs	r3, r3, #5
 8004536:	f003 0301 	and.w	r3, r3, #1
 800453a:	2b00      	cmp	r3, #0
 800453c:	d106      	bne.n	800454c <HAL_SPI_IRQHandler+0x80>
 800453e:	69bb      	ldr	r3, [r7, #24]
 8004540:	099b      	lsrs	r3, r3, #6
 8004542:	f003 0301 	and.w	r3, r3, #1
 8004546:	2b00      	cmp	r3, #0
 8004548:	f000 80a1 	beq.w	800468e <HAL_SPI_IRQHandler+0x1c2>
 800454c:	69fb      	ldr	r3, [r7, #28]
 800454e:	095b      	lsrs	r3, r3, #5
 8004550:	f003 0301 	and.w	r3, r3, #1
 8004554:	2b00      	cmp	r3, #0
 8004556:	f000 809a 	beq.w	800468e <HAL_SPI_IRQHandler+0x1c2>
 800455a:	69bb      	ldr	r3, [r7, #24]
 800455c:	099b      	lsrs	r3, r3, #6
 800455e:	f003 0301 	and.w	r3, r3, #1
 8004562:	2b00      	cmp	r3, #0
 8004564:	d023      	beq.n	80045ae <HAL_SPI_IRQHandler+0xe2>
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800456c:	b2db      	uxtb	r3, r3
 800456e:	2b03      	cmp	r3, #3
 8004570:	d011      	beq.n	8004596 <HAL_SPI_IRQHandler+0xca>
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004576:	f043 0204 	orr.w	r2, r3, #4
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	655a      	str	r2, [r3, #84]	; 0x54
 800457e:	2300      	movs	r3, #0
 8004580:	617b      	str	r3, [r7, #20]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	68db      	ldr	r3, [r3, #12]
 8004588:	617b      	str	r3, [r7, #20]
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	689b      	ldr	r3, [r3, #8]
 8004590:	617b      	str	r3, [r7, #20]
 8004592:	697b      	ldr	r3, [r7, #20]
 8004594:	e00b      	b.n	80045ae <HAL_SPI_IRQHandler+0xe2>
 8004596:	2300      	movs	r3, #0
 8004598:	613b      	str	r3, [r7, #16]
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	68db      	ldr	r3, [r3, #12]
 80045a0:	613b      	str	r3, [r7, #16]
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	689b      	ldr	r3, [r3, #8]
 80045a8:	613b      	str	r3, [r7, #16]
 80045aa:	693b      	ldr	r3, [r7, #16]
 80045ac:	e06f      	b.n	800468e <HAL_SPI_IRQHandler+0x1c2>
 80045ae:	69bb      	ldr	r3, [r7, #24]
 80045b0:	095b      	lsrs	r3, r3, #5
 80045b2:	f003 0301 	and.w	r3, r3, #1
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d014      	beq.n	80045e4 <HAL_SPI_IRQHandler+0x118>
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045be:	f043 0201 	orr.w	r2, r3, #1
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	655a      	str	r2, [r3, #84]	; 0x54
 80045c6:	2300      	movs	r3, #0
 80045c8:	60fb      	str	r3, [r7, #12]
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	689b      	ldr	r3, [r3, #8]
 80045d0:	60fb      	str	r3, [r7, #12]
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	681a      	ldr	r2, [r3, #0]
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80045e0:	601a      	str	r2, [r3, #0]
 80045e2:	68fb      	ldr	r3, [r7, #12]
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d04f      	beq.n	800468c <HAL_SPI_IRQHandler+0x1c0>
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	685a      	ldr	r2, [r3, #4]
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80045fa:	605a      	str	r2, [r3, #4]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	2201      	movs	r2, #1
 8004600:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004604:	69fb      	ldr	r3, [r7, #28]
 8004606:	f003 0302 	and.w	r3, r3, #2
 800460a:	2b00      	cmp	r3, #0
 800460c:	d104      	bne.n	8004618 <HAL_SPI_IRQHandler+0x14c>
 800460e:	69fb      	ldr	r3, [r7, #28]
 8004610:	f003 0301 	and.w	r3, r3, #1
 8004614:	2b00      	cmp	r3, #0
 8004616:	d034      	beq.n	8004682 <HAL_SPI_IRQHandler+0x1b6>
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	685a      	ldr	r2, [r3, #4]
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	f022 0203 	bic.w	r2, r2, #3
 8004626:	605a      	str	r2, [r3, #4]
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800462c:	2b00      	cmp	r3, #0
 800462e:	d011      	beq.n	8004654 <HAL_SPI_IRQHandler+0x188>
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004634:	4a17      	ldr	r2, [pc, #92]	; (8004694 <HAL_SPI_IRQHandler+0x1c8>)
 8004636:	635a      	str	r2, [r3, #52]	; 0x34
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800463c:	4618      	mov	r0, r3
 800463e:	f7fd fe4f 	bl	80022e0 <HAL_DMA_Abort_IT>
 8004642:	4603      	mov	r3, r0
 8004644:	2b00      	cmp	r3, #0
 8004646:	d005      	beq.n	8004654 <HAL_SPI_IRQHandler+0x188>
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800464c:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	655a      	str	r2, [r3, #84]	; 0x54
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004658:	2b00      	cmp	r3, #0
 800465a:	d016      	beq.n	800468a <HAL_SPI_IRQHandler+0x1be>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004660:	4a0c      	ldr	r2, [pc, #48]	; (8004694 <HAL_SPI_IRQHandler+0x1c8>)
 8004662:	635a      	str	r2, [r3, #52]	; 0x34
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004668:	4618      	mov	r0, r3
 800466a:	f7fd fe39 	bl	80022e0 <HAL_DMA_Abort_IT>
 800466e:	4603      	mov	r3, r0
 8004670:	2b00      	cmp	r3, #0
 8004672:	d00a      	beq.n	800468a <HAL_SPI_IRQHandler+0x1be>
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004678:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	655a      	str	r2, [r3, #84]	; 0x54
 8004680:	e003      	b.n	800468a <HAL_SPI_IRQHandler+0x1be>
 8004682:	6878      	ldr	r0, [r7, #4]
 8004684:	f000 f808 	bl	8004698 <HAL_SPI_ErrorCallback>
 8004688:	e000      	b.n	800468c <HAL_SPI_IRQHandler+0x1c0>
 800468a:	bf00      	nop
 800468c:	bf00      	nop
 800468e:	3720      	adds	r7, #32
 8004690:	46bd      	mov	sp, r7
 8004692:	bd80      	pop	{r7, pc}
 8004694:	080046ab 	.word	0x080046ab

08004698 <HAL_SPI_ErrorCallback>:
 8004698:	b480      	push	{r7}
 800469a:	b083      	sub	sp, #12
 800469c:	af00      	add	r7, sp, #0
 800469e:	6078      	str	r0, [r7, #4]
 80046a0:	bf00      	nop
 80046a2:	370c      	adds	r7, #12
 80046a4:	46bd      	mov	sp, r7
 80046a6:	bc80      	pop	{r7}
 80046a8:	4770      	bx	lr

080046aa <SPI_DMAAbortOnError>:
 80046aa:	b580      	push	{r7, lr}
 80046ac:	b084      	sub	sp, #16
 80046ae:	af00      	add	r7, sp, #0
 80046b0:	6078      	str	r0, [r7, #4]
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046b6:	60fb      	str	r3, [r7, #12]
 80046b8:	68fb      	ldr	r3, [r7, #12]
 80046ba:	2200      	movs	r2, #0
 80046bc:	87da      	strh	r2, [r3, #62]	; 0x3e
 80046be:	68fb      	ldr	r3, [r7, #12]
 80046c0:	2200      	movs	r2, #0
 80046c2:	86da      	strh	r2, [r3, #54]	; 0x36
 80046c4:	68f8      	ldr	r0, [r7, #12]
 80046c6:	f7ff ffe7 	bl	8004698 <HAL_SPI_ErrorCallback>
 80046ca:	bf00      	nop
 80046cc:	3710      	adds	r7, #16
 80046ce:	46bd      	mov	sp, r7
 80046d0:	bd80      	pop	{r7, pc}
	...

080046d4 <SPI_WaitFlagStateUntilTimeout>:
 80046d4:	b580      	push	{r7, lr}
 80046d6:	b088      	sub	sp, #32
 80046d8:	af00      	add	r7, sp, #0
 80046da:	60f8      	str	r0, [r7, #12]
 80046dc:	60b9      	str	r1, [r7, #8]
 80046de:	603b      	str	r3, [r7, #0]
 80046e0:	4613      	mov	r3, r2
 80046e2:	71fb      	strb	r3, [r7, #7]
 80046e4:	f7fd fc4a 	bl	8001f7c <HAL_GetTick>
 80046e8:	4602      	mov	r2, r0
 80046ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80046ec:	1a9b      	subs	r3, r3, r2
 80046ee:	683a      	ldr	r2, [r7, #0]
 80046f0:	4413      	add	r3, r2
 80046f2:	61fb      	str	r3, [r7, #28]
 80046f4:	f7fd fc42 	bl	8001f7c <HAL_GetTick>
 80046f8:	61b8      	str	r0, [r7, #24]
 80046fa:	4b39      	ldr	r3, [pc, #228]	; (80047e0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	015b      	lsls	r3, r3, #5
 8004700:	0d1b      	lsrs	r3, r3, #20
 8004702:	69fa      	ldr	r2, [r7, #28]
 8004704:	fb02 f303 	mul.w	r3, r2, r3
 8004708:	617b      	str	r3, [r7, #20]
 800470a:	e054      	b.n	80047b6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800470c:	683b      	ldr	r3, [r7, #0]
 800470e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004712:	d050      	beq.n	80047b6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8004714:	f7fd fc32 	bl	8001f7c <HAL_GetTick>
 8004718:	4602      	mov	r2, r0
 800471a:	69bb      	ldr	r3, [r7, #24]
 800471c:	1ad3      	subs	r3, r2, r3
 800471e:	69fa      	ldr	r2, [r7, #28]
 8004720:	429a      	cmp	r2, r3
 8004722:	d902      	bls.n	800472a <SPI_WaitFlagStateUntilTimeout+0x56>
 8004724:	69fb      	ldr	r3, [r7, #28]
 8004726:	2b00      	cmp	r3, #0
 8004728:	d13d      	bne.n	80047a6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	685a      	ldr	r2, [r3, #4]
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004738:	605a      	str	r2, [r3, #4]
 800473a:	68fb      	ldr	r3, [r7, #12]
 800473c:	685b      	ldr	r3, [r3, #4]
 800473e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004742:	d111      	bne.n	8004768 <SPI_WaitFlagStateUntilTimeout+0x94>
 8004744:	68fb      	ldr	r3, [r7, #12]
 8004746:	689b      	ldr	r3, [r3, #8]
 8004748:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800474c:	d004      	beq.n	8004758 <SPI_WaitFlagStateUntilTimeout+0x84>
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	689b      	ldr	r3, [r3, #8]
 8004752:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004756:	d107      	bne.n	8004768 <SPI_WaitFlagStateUntilTimeout+0x94>
 8004758:	68fb      	ldr	r3, [r7, #12]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	681a      	ldr	r2, [r3, #0]
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004766:	601a      	str	r2, [r3, #0]
 8004768:	68fb      	ldr	r3, [r7, #12]
 800476a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800476c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004770:	d10f      	bne.n	8004792 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	681a      	ldr	r2, [r3, #0]
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004780:	601a      	str	r2, [r3, #0]
 8004782:	68fb      	ldr	r3, [r7, #12]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	681a      	ldr	r2, [r3, #0]
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004790:	601a      	str	r2, [r3, #0]
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	2201      	movs	r2, #1
 8004796:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800479a:	68fb      	ldr	r3, [r7, #12]
 800479c:	2200      	movs	r2, #0
 800479e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80047a2:	2303      	movs	r3, #3
 80047a4:	e017      	b.n	80047d6 <SPI_WaitFlagStateUntilTimeout+0x102>
 80047a6:	697b      	ldr	r3, [r7, #20]
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d101      	bne.n	80047b0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80047ac:	2300      	movs	r3, #0
 80047ae:	61fb      	str	r3, [r7, #28]
 80047b0:	697b      	ldr	r3, [r7, #20]
 80047b2:	3b01      	subs	r3, #1
 80047b4:	617b      	str	r3, [r7, #20]
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	689a      	ldr	r2, [r3, #8]
 80047bc:	68bb      	ldr	r3, [r7, #8]
 80047be:	4013      	ands	r3, r2
 80047c0:	68ba      	ldr	r2, [r7, #8]
 80047c2:	429a      	cmp	r2, r3
 80047c4:	bf0c      	ite	eq
 80047c6:	2301      	moveq	r3, #1
 80047c8:	2300      	movne	r3, #0
 80047ca:	b2db      	uxtb	r3, r3
 80047cc:	461a      	mov	r2, r3
 80047ce:	79fb      	ldrb	r3, [r7, #7]
 80047d0:	429a      	cmp	r2, r3
 80047d2:	d19b      	bne.n	800470c <SPI_WaitFlagStateUntilTimeout+0x38>
 80047d4:	2300      	movs	r3, #0
 80047d6:	4618      	mov	r0, r3
 80047d8:	3720      	adds	r7, #32
 80047da:	46bd      	mov	sp, r7
 80047dc:	bd80      	pop	{r7, pc}
 80047de:	bf00      	nop
 80047e0:	20000050 	.word	0x20000050

080047e4 <SPI_EndRxTxTransaction>:
 80047e4:	b580      	push	{r7, lr}
 80047e6:	b086      	sub	sp, #24
 80047e8:	af02      	add	r7, sp, #8
 80047ea:	60f8      	str	r0, [r7, #12]
 80047ec:	60b9      	str	r1, [r7, #8]
 80047ee:	607a      	str	r2, [r7, #4]
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	9300      	str	r3, [sp, #0]
 80047f4:	68bb      	ldr	r3, [r7, #8]
 80047f6:	2200      	movs	r2, #0
 80047f8:	2180      	movs	r1, #128	; 0x80
 80047fa:	68f8      	ldr	r0, [r7, #12]
 80047fc:	f7ff ff6a 	bl	80046d4 <SPI_WaitFlagStateUntilTimeout>
 8004800:	4603      	mov	r3, r0
 8004802:	2b00      	cmp	r3, #0
 8004804:	d007      	beq.n	8004816 <SPI_EndRxTxTransaction+0x32>
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800480a:	f043 0220 	orr.w	r2, r3, #32
 800480e:	68fb      	ldr	r3, [r7, #12]
 8004810:	655a      	str	r2, [r3, #84]	; 0x54
 8004812:	2303      	movs	r3, #3
 8004814:	e000      	b.n	8004818 <SPI_EndRxTxTransaction+0x34>
 8004816:	2300      	movs	r3, #0
 8004818:	4618      	mov	r0, r3
 800481a:	3710      	adds	r7, #16
 800481c:	46bd      	mov	sp, r7
 800481e:	bd80      	pop	{r7, pc}

08004820 <HAL_UART_Init>:
 8004820:	b580      	push	{r7, lr}
 8004822:	b082      	sub	sp, #8
 8004824:	af00      	add	r7, sp, #0
 8004826:	6078      	str	r0, [r7, #4]
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	2b00      	cmp	r3, #0
 800482c:	d101      	bne.n	8004832 <HAL_UART_Init+0x12>
 800482e:	2301      	movs	r3, #1
 8004830:	e03f      	b.n	80048b2 <HAL_UART_Init+0x92>
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8004838:	b2db      	uxtb	r3, r3
 800483a:	2b00      	cmp	r3, #0
 800483c:	d106      	bne.n	800484c <HAL_UART_Init+0x2c>
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	2200      	movs	r2, #0
 8004842:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004846:	6878      	ldr	r0, [r7, #4]
 8004848:	f7fd fa66 	bl	8001d18 <HAL_UART_MspInit>
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	2224      	movs	r2, #36	; 0x24
 8004850:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	68da      	ldr	r2, [r3, #12]
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004862:	60da      	str	r2, [r3, #12]
 8004864:	6878      	ldr	r0, [r7, #4]
 8004866:	f000 f905 	bl	8004a74 <UART_SetConfig>
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	691a      	ldr	r2, [r3, #16]
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004878:	611a      	str	r2, [r3, #16]
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	695a      	ldr	r2, [r3, #20]
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004888:	615a      	str	r2, [r3, #20]
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	68da      	ldr	r2, [r3, #12]
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004898:	60da      	str	r2, [r3, #12]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	2200      	movs	r2, #0
 800489e:	63da      	str	r2, [r3, #60]	; 0x3c
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	2220      	movs	r2, #32
 80048a4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	2220      	movs	r2, #32
 80048ac:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80048b0:	2300      	movs	r3, #0
 80048b2:	4618      	mov	r0, r3
 80048b4:	3708      	adds	r7, #8
 80048b6:	46bd      	mov	sp, r7
 80048b8:	bd80      	pop	{r7, pc}

080048ba <HAL_UART_Transmit>:
 80048ba:	b580      	push	{r7, lr}
 80048bc:	b08a      	sub	sp, #40	; 0x28
 80048be:	af02      	add	r7, sp, #8
 80048c0:	60f8      	str	r0, [r7, #12]
 80048c2:	60b9      	str	r1, [r7, #8]
 80048c4:	603b      	str	r3, [r7, #0]
 80048c6:	4613      	mov	r3, r2
 80048c8:	80fb      	strh	r3, [r7, #6]
 80048ca:	2300      	movs	r3, #0
 80048cc:	617b      	str	r3, [r7, #20]
 80048ce:	68fb      	ldr	r3, [r7, #12]
 80048d0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80048d4:	b2db      	uxtb	r3, r3
 80048d6:	2b20      	cmp	r3, #32
 80048d8:	d17c      	bne.n	80049d4 <HAL_UART_Transmit+0x11a>
 80048da:	68bb      	ldr	r3, [r7, #8]
 80048dc:	2b00      	cmp	r3, #0
 80048de:	d002      	beq.n	80048e6 <HAL_UART_Transmit+0x2c>
 80048e0:	88fb      	ldrh	r3, [r7, #6]
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d101      	bne.n	80048ea <HAL_UART_Transmit+0x30>
 80048e6:	2301      	movs	r3, #1
 80048e8:	e075      	b.n	80049d6 <HAL_UART_Transmit+0x11c>
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80048f0:	2b01      	cmp	r3, #1
 80048f2:	d101      	bne.n	80048f8 <HAL_UART_Transmit+0x3e>
 80048f4:	2302      	movs	r3, #2
 80048f6:	e06e      	b.n	80049d6 <HAL_UART_Transmit+0x11c>
 80048f8:	68fb      	ldr	r3, [r7, #12]
 80048fa:	2201      	movs	r2, #1
 80048fc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004900:	68fb      	ldr	r3, [r7, #12]
 8004902:	2200      	movs	r2, #0
 8004904:	63da      	str	r2, [r3, #60]	; 0x3c
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	2221      	movs	r2, #33	; 0x21
 800490a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800490e:	f7fd fb35 	bl	8001f7c <HAL_GetTick>
 8004912:	6178      	str	r0, [r7, #20]
 8004914:	68fb      	ldr	r3, [r7, #12]
 8004916:	88fa      	ldrh	r2, [r7, #6]
 8004918:	849a      	strh	r2, [r3, #36]	; 0x24
 800491a:	68fb      	ldr	r3, [r7, #12]
 800491c:	88fa      	ldrh	r2, [r7, #6]
 800491e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004920:	68fb      	ldr	r3, [r7, #12]
 8004922:	689b      	ldr	r3, [r3, #8]
 8004924:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004928:	d108      	bne.n	800493c <HAL_UART_Transmit+0x82>
 800492a:	68fb      	ldr	r3, [r7, #12]
 800492c:	691b      	ldr	r3, [r3, #16]
 800492e:	2b00      	cmp	r3, #0
 8004930:	d104      	bne.n	800493c <HAL_UART_Transmit+0x82>
 8004932:	2300      	movs	r3, #0
 8004934:	61fb      	str	r3, [r7, #28]
 8004936:	68bb      	ldr	r3, [r7, #8]
 8004938:	61bb      	str	r3, [r7, #24]
 800493a:	e003      	b.n	8004944 <HAL_UART_Transmit+0x8a>
 800493c:	68bb      	ldr	r3, [r7, #8]
 800493e:	61fb      	str	r3, [r7, #28]
 8004940:	2300      	movs	r3, #0
 8004942:	61bb      	str	r3, [r7, #24]
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	2200      	movs	r2, #0
 8004948:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800494c:	e02a      	b.n	80049a4 <HAL_UART_Transmit+0xea>
 800494e:	683b      	ldr	r3, [r7, #0]
 8004950:	9300      	str	r3, [sp, #0]
 8004952:	697b      	ldr	r3, [r7, #20]
 8004954:	2200      	movs	r2, #0
 8004956:	2180      	movs	r1, #128	; 0x80
 8004958:	68f8      	ldr	r0, [r7, #12]
 800495a:	f000 f840 	bl	80049de <UART_WaitOnFlagUntilTimeout>
 800495e:	4603      	mov	r3, r0
 8004960:	2b00      	cmp	r3, #0
 8004962:	d001      	beq.n	8004968 <HAL_UART_Transmit+0xae>
 8004964:	2303      	movs	r3, #3
 8004966:	e036      	b.n	80049d6 <HAL_UART_Transmit+0x11c>
 8004968:	69fb      	ldr	r3, [r7, #28]
 800496a:	2b00      	cmp	r3, #0
 800496c:	d10b      	bne.n	8004986 <HAL_UART_Transmit+0xcc>
 800496e:	69bb      	ldr	r3, [r7, #24]
 8004970:	881b      	ldrh	r3, [r3, #0]
 8004972:	461a      	mov	r2, r3
 8004974:	68fb      	ldr	r3, [r7, #12]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800497c:	605a      	str	r2, [r3, #4]
 800497e:	69bb      	ldr	r3, [r7, #24]
 8004980:	3302      	adds	r3, #2
 8004982:	61bb      	str	r3, [r7, #24]
 8004984:	e007      	b.n	8004996 <HAL_UART_Transmit+0xdc>
 8004986:	69fb      	ldr	r3, [r7, #28]
 8004988:	781a      	ldrb	r2, [r3, #0]
 800498a:	68fb      	ldr	r3, [r7, #12]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	605a      	str	r2, [r3, #4]
 8004990:	69fb      	ldr	r3, [r7, #28]
 8004992:	3301      	adds	r3, #1
 8004994:	61fb      	str	r3, [r7, #28]
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800499a:	b29b      	uxth	r3, r3
 800499c:	3b01      	subs	r3, #1
 800499e:	b29a      	uxth	r2, r3
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	84da      	strh	r2, [r3, #38]	; 0x26
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80049a8:	b29b      	uxth	r3, r3
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d1cf      	bne.n	800494e <HAL_UART_Transmit+0x94>
 80049ae:	683b      	ldr	r3, [r7, #0]
 80049b0:	9300      	str	r3, [sp, #0]
 80049b2:	697b      	ldr	r3, [r7, #20]
 80049b4:	2200      	movs	r2, #0
 80049b6:	2140      	movs	r1, #64	; 0x40
 80049b8:	68f8      	ldr	r0, [r7, #12]
 80049ba:	f000 f810 	bl	80049de <UART_WaitOnFlagUntilTimeout>
 80049be:	4603      	mov	r3, r0
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d001      	beq.n	80049c8 <HAL_UART_Transmit+0x10e>
 80049c4:	2303      	movs	r3, #3
 80049c6:	e006      	b.n	80049d6 <HAL_UART_Transmit+0x11c>
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	2220      	movs	r2, #32
 80049cc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80049d0:	2300      	movs	r3, #0
 80049d2:	e000      	b.n	80049d6 <HAL_UART_Transmit+0x11c>
 80049d4:	2302      	movs	r3, #2
 80049d6:	4618      	mov	r0, r3
 80049d8:	3720      	adds	r7, #32
 80049da:	46bd      	mov	sp, r7
 80049dc:	bd80      	pop	{r7, pc}

080049de <UART_WaitOnFlagUntilTimeout>:
 80049de:	b580      	push	{r7, lr}
 80049e0:	b084      	sub	sp, #16
 80049e2:	af00      	add	r7, sp, #0
 80049e4:	60f8      	str	r0, [r7, #12]
 80049e6:	60b9      	str	r1, [r7, #8]
 80049e8:	603b      	str	r3, [r7, #0]
 80049ea:	4613      	mov	r3, r2
 80049ec:	71fb      	strb	r3, [r7, #7]
 80049ee:	e02c      	b.n	8004a4a <UART_WaitOnFlagUntilTimeout+0x6c>
 80049f0:	69bb      	ldr	r3, [r7, #24]
 80049f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049f6:	d028      	beq.n	8004a4a <UART_WaitOnFlagUntilTimeout+0x6c>
 80049f8:	69bb      	ldr	r3, [r7, #24]
 80049fa:	2b00      	cmp	r3, #0
 80049fc:	d007      	beq.n	8004a0e <UART_WaitOnFlagUntilTimeout+0x30>
 80049fe:	f7fd fabd 	bl	8001f7c <HAL_GetTick>
 8004a02:	4602      	mov	r2, r0
 8004a04:	683b      	ldr	r3, [r7, #0]
 8004a06:	1ad3      	subs	r3, r2, r3
 8004a08:	69ba      	ldr	r2, [r7, #24]
 8004a0a:	429a      	cmp	r2, r3
 8004a0c:	d21d      	bcs.n	8004a4a <UART_WaitOnFlagUntilTimeout+0x6c>
 8004a0e:	68fb      	ldr	r3, [r7, #12]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	68da      	ldr	r2, [r3, #12]
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004a1c:	60da      	str	r2, [r3, #12]
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	695a      	ldr	r2, [r3, #20]
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	f022 0201 	bic.w	r2, r2, #1
 8004a2c:	615a      	str	r2, [r3, #20]
 8004a2e:	68fb      	ldr	r3, [r7, #12]
 8004a30:	2220      	movs	r2, #32
 8004a32:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	2220      	movs	r2, #32
 8004a3a:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8004a3e:	68fb      	ldr	r3, [r7, #12]
 8004a40:	2200      	movs	r2, #0
 8004a42:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004a46:	2303      	movs	r3, #3
 8004a48:	e00f      	b.n	8004a6a <UART_WaitOnFlagUntilTimeout+0x8c>
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	681a      	ldr	r2, [r3, #0]
 8004a50:	68bb      	ldr	r3, [r7, #8]
 8004a52:	4013      	ands	r3, r2
 8004a54:	68ba      	ldr	r2, [r7, #8]
 8004a56:	429a      	cmp	r2, r3
 8004a58:	bf0c      	ite	eq
 8004a5a:	2301      	moveq	r3, #1
 8004a5c:	2300      	movne	r3, #0
 8004a5e:	b2db      	uxtb	r3, r3
 8004a60:	461a      	mov	r2, r3
 8004a62:	79fb      	ldrb	r3, [r7, #7]
 8004a64:	429a      	cmp	r2, r3
 8004a66:	d0c3      	beq.n	80049f0 <UART_WaitOnFlagUntilTimeout+0x12>
 8004a68:	2300      	movs	r3, #0
 8004a6a:	4618      	mov	r0, r3
 8004a6c:	3710      	adds	r7, #16
 8004a6e:	46bd      	mov	sp, r7
 8004a70:	bd80      	pop	{r7, pc}
	...

08004a74 <UART_SetConfig>:
 8004a74:	b580      	push	{r7, lr}
 8004a76:	b084      	sub	sp, #16
 8004a78:	af00      	add	r7, sp, #0
 8004a7a:	6078      	str	r0, [r7, #4]
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	691b      	ldr	r3, [r3, #16]
 8004a82:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	68da      	ldr	r2, [r3, #12]
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	430a      	orrs	r2, r1
 8004a90:	611a      	str	r2, [r3, #16]
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	689a      	ldr	r2, [r3, #8]
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	691b      	ldr	r3, [r3, #16]
 8004a9a:	431a      	orrs	r2, r3
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	695b      	ldr	r3, [r3, #20]
 8004aa0:	4313      	orrs	r3, r2
 8004aa2:	60bb      	str	r3, [r7, #8]
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	68db      	ldr	r3, [r3, #12]
 8004aaa:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8004aae:	f023 030c 	bic.w	r3, r3, #12
 8004ab2:	687a      	ldr	r2, [r7, #4]
 8004ab4:	6812      	ldr	r2, [r2, #0]
 8004ab6:	68b9      	ldr	r1, [r7, #8]
 8004ab8:	430b      	orrs	r3, r1
 8004aba:	60d3      	str	r3, [r2, #12]
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	695b      	ldr	r3, [r3, #20]
 8004ac2:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	699a      	ldr	r2, [r3, #24]
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	430a      	orrs	r2, r1
 8004ad0:	615a      	str	r2, [r3, #20]
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	4a2c      	ldr	r2, [pc, #176]	; (8004b88 <UART_SetConfig+0x114>)
 8004ad8:	4293      	cmp	r3, r2
 8004ada:	d103      	bne.n	8004ae4 <UART_SetConfig+0x70>
 8004adc:	f7ff f962 	bl	8003da4 <HAL_RCC_GetPCLK2Freq>
 8004ae0:	60f8      	str	r0, [r7, #12]
 8004ae2:	e002      	b.n	8004aea <UART_SetConfig+0x76>
 8004ae4:	f7ff f94a 	bl	8003d7c <HAL_RCC_GetPCLK1Freq>
 8004ae8:	60f8      	str	r0, [r7, #12]
 8004aea:	68fa      	ldr	r2, [r7, #12]
 8004aec:	4613      	mov	r3, r2
 8004aee:	009b      	lsls	r3, r3, #2
 8004af0:	4413      	add	r3, r2
 8004af2:	009a      	lsls	r2, r3, #2
 8004af4:	441a      	add	r2, r3
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	685b      	ldr	r3, [r3, #4]
 8004afa:	009b      	lsls	r3, r3, #2
 8004afc:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b00:	4a22      	ldr	r2, [pc, #136]	; (8004b8c <UART_SetConfig+0x118>)
 8004b02:	fba2 2303 	umull	r2, r3, r2, r3
 8004b06:	095b      	lsrs	r3, r3, #5
 8004b08:	0119      	lsls	r1, r3, #4
 8004b0a:	68fa      	ldr	r2, [r7, #12]
 8004b0c:	4613      	mov	r3, r2
 8004b0e:	009b      	lsls	r3, r3, #2
 8004b10:	4413      	add	r3, r2
 8004b12:	009a      	lsls	r2, r3, #2
 8004b14:	441a      	add	r2, r3
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	685b      	ldr	r3, [r3, #4]
 8004b1a:	009b      	lsls	r3, r3, #2
 8004b1c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004b20:	4b1a      	ldr	r3, [pc, #104]	; (8004b8c <UART_SetConfig+0x118>)
 8004b22:	fba3 0302 	umull	r0, r3, r3, r2
 8004b26:	095b      	lsrs	r3, r3, #5
 8004b28:	2064      	movs	r0, #100	; 0x64
 8004b2a:	fb00 f303 	mul.w	r3, r0, r3
 8004b2e:	1ad3      	subs	r3, r2, r3
 8004b30:	011b      	lsls	r3, r3, #4
 8004b32:	3332      	adds	r3, #50	; 0x32
 8004b34:	4a15      	ldr	r2, [pc, #84]	; (8004b8c <UART_SetConfig+0x118>)
 8004b36:	fba2 2303 	umull	r2, r3, r2, r3
 8004b3a:	095b      	lsrs	r3, r3, #5
 8004b3c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004b40:	4419      	add	r1, r3
 8004b42:	68fa      	ldr	r2, [r7, #12]
 8004b44:	4613      	mov	r3, r2
 8004b46:	009b      	lsls	r3, r3, #2
 8004b48:	4413      	add	r3, r2
 8004b4a:	009a      	lsls	r2, r3, #2
 8004b4c:	441a      	add	r2, r3
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	685b      	ldr	r3, [r3, #4]
 8004b52:	009b      	lsls	r3, r3, #2
 8004b54:	fbb2 f2f3 	udiv	r2, r2, r3
 8004b58:	4b0c      	ldr	r3, [pc, #48]	; (8004b8c <UART_SetConfig+0x118>)
 8004b5a:	fba3 0302 	umull	r0, r3, r3, r2
 8004b5e:	095b      	lsrs	r3, r3, #5
 8004b60:	2064      	movs	r0, #100	; 0x64
 8004b62:	fb00 f303 	mul.w	r3, r0, r3
 8004b66:	1ad3      	subs	r3, r2, r3
 8004b68:	011b      	lsls	r3, r3, #4
 8004b6a:	3332      	adds	r3, #50	; 0x32
 8004b6c:	4a07      	ldr	r2, [pc, #28]	; (8004b8c <UART_SetConfig+0x118>)
 8004b6e:	fba2 2303 	umull	r2, r3, r2, r3
 8004b72:	095b      	lsrs	r3, r3, #5
 8004b74:	f003 020f 	and.w	r2, r3, #15
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	681b      	ldr	r3, [r3, #0]
 8004b7c:	440a      	add	r2, r1
 8004b7e:	609a      	str	r2, [r3, #8]
 8004b80:	bf00      	nop
 8004b82:	3710      	adds	r7, #16
 8004b84:	46bd      	mov	sp, r7
 8004b86:	bd80      	pop	{r7, pc}
 8004b88:	40013800 	.word	0x40013800
 8004b8c:	51eb851f 	.word	0x51eb851f

08004b90 <__errno>:
 8004b90:	4b01      	ldr	r3, [pc, #4]	; (8004b98 <__errno+0x8>)
 8004b92:	6818      	ldr	r0, [r3, #0]
 8004b94:	4770      	bx	lr
 8004b96:	bf00      	nop
 8004b98:	2000005c 	.word	0x2000005c

08004b9c <__libc_init_array>:
 8004b9c:	b570      	push	{r4, r5, r6, lr}
 8004b9e:	2600      	movs	r6, #0
 8004ba0:	4d0c      	ldr	r5, [pc, #48]	; (8004bd4 <__libc_init_array+0x38>)
 8004ba2:	4c0d      	ldr	r4, [pc, #52]	; (8004bd8 <__libc_init_array+0x3c>)
 8004ba4:	1b64      	subs	r4, r4, r5
 8004ba6:	10a4      	asrs	r4, r4, #2
 8004ba8:	42a6      	cmp	r6, r4
 8004baa:	d109      	bne.n	8004bc0 <__libc_init_array+0x24>
 8004bac:	f000 fc90 	bl	80054d0 <_init>
 8004bb0:	2600      	movs	r6, #0
 8004bb2:	4d0a      	ldr	r5, [pc, #40]	; (8004bdc <__libc_init_array+0x40>)
 8004bb4:	4c0a      	ldr	r4, [pc, #40]	; (8004be0 <__libc_init_array+0x44>)
 8004bb6:	1b64      	subs	r4, r4, r5
 8004bb8:	10a4      	asrs	r4, r4, #2
 8004bba:	42a6      	cmp	r6, r4
 8004bbc:	d105      	bne.n	8004bca <__libc_init_array+0x2e>
 8004bbe:	bd70      	pop	{r4, r5, r6, pc}
 8004bc0:	f855 3b04 	ldr.w	r3, [r5], #4
 8004bc4:	4798      	blx	r3
 8004bc6:	3601      	adds	r6, #1
 8004bc8:	e7ee      	b.n	8004ba8 <__libc_init_array+0xc>
 8004bca:	f855 3b04 	ldr.w	r3, [r5], #4
 8004bce:	4798      	blx	r3
 8004bd0:	3601      	adds	r6, #1
 8004bd2:	e7f2      	b.n	8004bba <__libc_init_array+0x1e>
 8004bd4:	08006354 	.word	0x08006354
 8004bd8:	08006354 	.word	0x08006354
 8004bdc:	08006354 	.word	0x08006354
 8004be0:	08006358 	.word	0x08006358

08004be4 <memcpy>:
 8004be4:	440a      	add	r2, r1
 8004be6:	4291      	cmp	r1, r2
 8004be8:	f100 33ff 	add.w	r3, r0, #4294967295
 8004bec:	d100      	bne.n	8004bf0 <memcpy+0xc>
 8004bee:	4770      	bx	lr
 8004bf0:	b510      	push	{r4, lr}
 8004bf2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004bf6:	4291      	cmp	r1, r2
 8004bf8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004bfc:	d1f9      	bne.n	8004bf2 <memcpy+0xe>
 8004bfe:	bd10      	pop	{r4, pc}

08004c00 <memmove>:
 8004c00:	4288      	cmp	r0, r1
 8004c02:	b510      	push	{r4, lr}
 8004c04:	eb01 0402 	add.w	r4, r1, r2
 8004c08:	d902      	bls.n	8004c10 <memmove+0x10>
 8004c0a:	4284      	cmp	r4, r0
 8004c0c:	4623      	mov	r3, r4
 8004c0e:	d807      	bhi.n	8004c20 <memmove+0x20>
 8004c10:	1e43      	subs	r3, r0, #1
 8004c12:	42a1      	cmp	r1, r4
 8004c14:	d008      	beq.n	8004c28 <memmove+0x28>
 8004c16:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004c1a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004c1e:	e7f8      	b.n	8004c12 <memmove+0x12>
 8004c20:	4601      	mov	r1, r0
 8004c22:	4402      	add	r2, r0
 8004c24:	428a      	cmp	r2, r1
 8004c26:	d100      	bne.n	8004c2a <memmove+0x2a>
 8004c28:	bd10      	pop	{r4, pc}
 8004c2a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004c2e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004c32:	e7f7      	b.n	8004c24 <memmove+0x24>

08004c34 <memset>:
 8004c34:	4603      	mov	r3, r0
 8004c36:	4402      	add	r2, r0
 8004c38:	4293      	cmp	r3, r2
 8004c3a:	d100      	bne.n	8004c3e <memset+0xa>
 8004c3c:	4770      	bx	lr
 8004c3e:	f803 1b01 	strb.w	r1, [r3], #1
 8004c42:	e7f9      	b.n	8004c38 <memset+0x4>

08004c44 <sniprintf>:
 8004c44:	b40c      	push	{r2, r3}
 8004c46:	b530      	push	{r4, r5, lr}
 8004c48:	4b17      	ldr	r3, [pc, #92]	; (8004ca8 <sniprintf+0x64>)
 8004c4a:	1e0c      	subs	r4, r1, #0
 8004c4c:	681d      	ldr	r5, [r3, #0]
 8004c4e:	b09d      	sub	sp, #116	; 0x74
 8004c50:	da08      	bge.n	8004c64 <sniprintf+0x20>
 8004c52:	238b      	movs	r3, #139	; 0x8b
 8004c54:	f04f 30ff 	mov.w	r0, #4294967295
 8004c58:	602b      	str	r3, [r5, #0]
 8004c5a:	b01d      	add	sp, #116	; 0x74
 8004c5c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004c60:	b002      	add	sp, #8
 8004c62:	4770      	bx	lr
 8004c64:	f44f 7302 	mov.w	r3, #520	; 0x208
 8004c68:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004c6c:	bf0c      	ite	eq
 8004c6e:	4623      	moveq	r3, r4
 8004c70:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004c74:	9304      	str	r3, [sp, #16]
 8004c76:	9307      	str	r3, [sp, #28]
 8004c78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004c7c:	9002      	str	r0, [sp, #8]
 8004c7e:	9006      	str	r0, [sp, #24]
 8004c80:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004c84:	4628      	mov	r0, r5
 8004c86:	ab21      	add	r3, sp, #132	; 0x84
 8004c88:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004c8a:	a902      	add	r1, sp, #8
 8004c8c:	9301      	str	r3, [sp, #4]
 8004c8e:	f000 f889 	bl	8004da4 <_svfiprintf_r>
 8004c92:	1c43      	adds	r3, r0, #1
 8004c94:	bfbc      	itt	lt
 8004c96:	238b      	movlt	r3, #139	; 0x8b
 8004c98:	602b      	strlt	r3, [r5, #0]
 8004c9a:	2c00      	cmp	r4, #0
 8004c9c:	d0dd      	beq.n	8004c5a <sniprintf+0x16>
 8004c9e:	2200      	movs	r2, #0
 8004ca0:	9b02      	ldr	r3, [sp, #8]
 8004ca2:	701a      	strb	r2, [r3, #0]
 8004ca4:	e7d9      	b.n	8004c5a <sniprintf+0x16>
 8004ca6:	bf00      	nop
 8004ca8:	2000005c 	.word	0x2000005c

08004cac <_vsiprintf_r>:
 8004cac:	b500      	push	{lr}
 8004cae:	b09b      	sub	sp, #108	; 0x6c
 8004cb0:	9100      	str	r1, [sp, #0]
 8004cb2:	9104      	str	r1, [sp, #16]
 8004cb4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004cb8:	9105      	str	r1, [sp, #20]
 8004cba:	9102      	str	r1, [sp, #8]
 8004cbc:	4905      	ldr	r1, [pc, #20]	; (8004cd4 <_vsiprintf_r+0x28>)
 8004cbe:	9103      	str	r1, [sp, #12]
 8004cc0:	4669      	mov	r1, sp
 8004cc2:	f000 f86f 	bl	8004da4 <_svfiprintf_r>
 8004cc6:	2200      	movs	r2, #0
 8004cc8:	9b00      	ldr	r3, [sp, #0]
 8004cca:	701a      	strb	r2, [r3, #0]
 8004ccc:	b01b      	add	sp, #108	; 0x6c
 8004cce:	f85d fb04 	ldr.w	pc, [sp], #4
 8004cd2:	bf00      	nop
 8004cd4:	ffff0208 	.word	0xffff0208

08004cd8 <vsiprintf>:
 8004cd8:	4613      	mov	r3, r2
 8004cda:	460a      	mov	r2, r1
 8004cdc:	4601      	mov	r1, r0
 8004cde:	4802      	ldr	r0, [pc, #8]	; (8004ce8 <vsiprintf+0x10>)
 8004ce0:	6800      	ldr	r0, [r0, #0]
 8004ce2:	f7ff bfe3 	b.w	8004cac <_vsiprintf_r>
 8004ce6:	bf00      	nop
 8004ce8:	2000005c 	.word	0x2000005c

08004cec <__ssputs_r>:
 8004cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cf0:	688e      	ldr	r6, [r1, #8]
 8004cf2:	4682      	mov	sl, r0
 8004cf4:	429e      	cmp	r6, r3
 8004cf6:	460c      	mov	r4, r1
 8004cf8:	4690      	mov	r8, r2
 8004cfa:	461f      	mov	r7, r3
 8004cfc:	d838      	bhi.n	8004d70 <__ssputs_r+0x84>
 8004cfe:	898a      	ldrh	r2, [r1, #12]
 8004d00:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004d04:	d032      	beq.n	8004d6c <__ssputs_r+0x80>
 8004d06:	6825      	ldr	r5, [r4, #0]
 8004d08:	6909      	ldr	r1, [r1, #16]
 8004d0a:	3301      	adds	r3, #1
 8004d0c:	eba5 0901 	sub.w	r9, r5, r1
 8004d10:	6965      	ldr	r5, [r4, #20]
 8004d12:	444b      	add	r3, r9
 8004d14:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004d18:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004d1c:	106d      	asrs	r5, r5, #1
 8004d1e:	429d      	cmp	r5, r3
 8004d20:	bf38      	it	cc
 8004d22:	461d      	movcc	r5, r3
 8004d24:	0553      	lsls	r3, r2, #21
 8004d26:	d531      	bpl.n	8004d8c <__ssputs_r+0xa0>
 8004d28:	4629      	mov	r1, r5
 8004d2a:	f000 fb2b 	bl	8005384 <_malloc_r>
 8004d2e:	4606      	mov	r6, r0
 8004d30:	b950      	cbnz	r0, 8004d48 <__ssputs_r+0x5c>
 8004d32:	230c      	movs	r3, #12
 8004d34:	f04f 30ff 	mov.w	r0, #4294967295
 8004d38:	f8ca 3000 	str.w	r3, [sl]
 8004d3c:	89a3      	ldrh	r3, [r4, #12]
 8004d3e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004d42:	81a3      	strh	r3, [r4, #12]
 8004d44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d48:	464a      	mov	r2, r9
 8004d4a:	6921      	ldr	r1, [r4, #16]
 8004d4c:	f7ff ff4a 	bl	8004be4 <memcpy>
 8004d50:	89a3      	ldrh	r3, [r4, #12]
 8004d52:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004d56:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004d5a:	81a3      	strh	r3, [r4, #12]
 8004d5c:	6126      	str	r6, [r4, #16]
 8004d5e:	444e      	add	r6, r9
 8004d60:	6026      	str	r6, [r4, #0]
 8004d62:	463e      	mov	r6, r7
 8004d64:	6165      	str	r5, [r4, #20]
 8004d66:	eba5 0509 	sub.w	r5, r5, r9
 8004d6a:	60a5      	str	r5, [r4, #8]
 8004d6c:	42be      	cmp	r6, r7
 8004d6e:	d900      	bls.n	8004d72 <__ssputs_r+0x86>
 8004d70:	463e      	mov	r6, r7
 8004d72:	4632      	mov	r2, r6
 8004d74:	4641      	mov	r1, r8
 8004d76:	6820      	ldr	r0, [r4, #0]
 8004d78:	f7ff ff42 	bl	8004c00 <memmove>
 8004d7c:	68a3      	ldr	r3, [r4, #8]
 8004d7e:	6822      	ldr	r2, [r4, #0]
 8004d80:	1b9b      	subs	r3, r3, r6
 8004d82:	4432      	add	r2, r6
 8004d84:	2000      	movs	r0, #0
 8004d86:	60a3      	str	r3, [r4, #8]
 8004d88:	6022      	str	r2, [r4, #0]
 8004d8a:	e7db      	b.n	8004d44 <__ssputs_r+0x58>
 8004d8c:	462a      	mov	r2, r5
 8004d8e:	f000 fb53 	bl	8005438 <_realloc_r>
 8004d92:	4606      	mov	r6, r0
 8004d94:	2800      	cmp	r0, #0
 8004d96:	d1e1      	bne.n	8004d5c <__ssputs_r+0x70>
 8004d98:	4650      	mov	r0, sl
 8004d9a:	6921      	ldr	r1, [r4, #16]
 8004d9c:	f000 faa6 	bl	80052ec <_free_r>
 8004da0:	e7c7      	b.n	8004d32 <__ssputs_r+0x46>
	...

08004da4 <_svfiprintf_r>:
 8004da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004da8:	4698      	mov	r8, r3
 8004daa:	898b      	ldrh	r3, [r1, #12]
 8004dac:	4607      	mov	r7, r0
 8004dae:	061b      	lsls	r3, r3, #24
 8004db0:	460d      	mov	r5, r1
 8004db2:	4614      	mov	r4, r2
 8004db4:	b09d      	sub	sp, #116	; 0x74
 8004db6:	d50e      	bpl.n	8004dd6 <_svfiprintf_r+0x32>
 8004db8:	690b      	ldr	r3, [r1, #16]
 8004dba:	b963      	cbnz	r3, 8004dd6 <_svfiprintf_r+0x32>
 8004dbc:	2140      	movs	r1, #64	; 0x40
 8004dbe:	f000 fae1 	bl	8005384 <_malloc_r>
 8004dc2:	6028      	str	r0, [r5, #0]
 8004dc4:	6128      	str	r0, [r5, #16]
 8004dc6:	b920      	cbnz	r0, 8004dd2 <_svfiprintf_r+0x2e>
 8004dc8:	230c      	movs	r3, #12
 8004dca:	603b      	str	r3, [r7, #0]
 8004dcc:	f04f 30ff 	mov.w	r0, #4294967295
 8004dd0:	e0d1      	b.n	8004f76 <_svfiprintf_r+0x1d2>
 8004dd2:	2340      	movs	r3, #64	; 0x40
 8004dd4:	616b      	str	r3, [r5, #20]
 8004dd6:	2300      	movs	r3, #0
 8004dd8:	9309      	str	r3, [sp, #36]	; 0x24
 8004dda:	2320      	movs	r3, #32
 8004ddc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004de0:	2330      	movs	r3, #48	; 0x30
 8004de2:	f04f 0901 	mov.w	r9, #1
 8004de6:	f8cd 800c 	str.w	r8, [sp, #12]
 8004dea:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004f90 <_svfiprintf_r+0x1ec>
 8004dee:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004df2:	4623      	mov	r3, r4
 8004df4:	469a      	mov	sl, r3
 8004df6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004dfa:	b10a      	cbz	r2, 8004e00 <_svfiprintf_r+0x5c>
 8004dfc:	2a25      	cmp	r2, #37	; 0x25
 8004dfe:	d1f9      	bne.n	8004df4 <_svfiprintf_r+0x50>
 8004e00:	ebba 0b04 	subs.w	fp, sl, r4
 8004e04:	d00b      	beq.n	8004e1e <_svfiprintf_r+0x7a>
 8004e06:	465b      	mov	r3, fp
 8004e08:	4622      	mov	r2, r4
 8004e0a:	4629      	mov	r1, r5
 8004e0c:	4638      	mov	r0, r7
 8004e0e:	f7ff ff6d 	bl	8004cec <__ssputs_r>
 8004e12:	3001      	adds	r0, #1
 8004e14:	f000 80aa 	beq.w	8004f6c <_svfiprintf_r+0x1c8>
 8004e18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004e1a:	445a      	add	r2, fp
 8004e1c:	9209      	str	r2, [sp, #36]	; 0x24
 8004e1e:	f89a 3000 	ldrb.w	r3, [sl]
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	f000 80a2 	beq.w	8004f6c <_svfiprintf_r+0x1c8>
 8004e28:	2300      	movs	r3, #0
 8004e2a:	f04f 32ff 	mov.w	r2, #4294967295
 8004e2e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004e32:	f10a 0a01 	add.w	sl, sl, #1
 8004e36:	9304      	str	r3, [sp, #16]
 8004e38:	9307      	str	r3, [sp, #28]
 8004e3a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004e3e:	931a      	str	r3, [sp, #104]	; 0x68
 8004e40:	4654      	mov	r4, sl
 8004e42:	2205      	movs	r2, #5
 8004e44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004e48:	4851      	ldr	r0, [pc, #324]	; (8004f90 <_svfiprintf_r+0x1ec>)
 8004e4a:	f000 fa41 	bl	80052d0 <memchr>
 8004e4e:	9a04      	ldr	r2, [sp, #16]
 8004e50:	b9d8      	cbnz	r0, 8004e8a <_svfiprintf_r+0xe6>
 8004e52:	06d0      	lsls	r0, r2, #27
 8004e54:	bf44      	itt	mi
 8004e56:	2320      	movmi	r3, #32
 8004e58:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004e5c:	0711      	lsls	r1, r2, #28
 8004e5e:	bf44      	itt	mi
 8004e60:	232b      	movmi	r3, #43	; 0x2b
 8004e62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004e66:	f89a 3000 	ldrb.w	r3, [sl]
 8004e6a:	2b2a      	cmp	r3, #42	; 0x2a
 8004e6c:	d015      	beq.n	8004e9a <_svfiprintf_r+0xf6>
 8004e6e:	4654      	mov	r4, sl
 8004e70:	2000      	movs	r0, #0
 8004e72:	f04f 0c0a 	mov.w	ip, #10
 8004e76:	9a07      	ldr	r2, [sp, #28]
 8004e78:	4621      	mov	r1, r4
 8004e7a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004e7e:	3b30      	subs	r3, #48	; 0x30
 8004e80:	2b09      	cmp	r3, #9
 8004e82:	d94e      	bls.n	8004f22 <_svfiprintf_r+0x17e>
 8004e84:	b1b0      	cbz	r0, 8004eb4 <_svfiprintf_r+0x110>
 8004e86:	9207      	str	r2, [sp, #28]
 8004e88:	e014      	b.n	8004eb4 <_svfiprintf_r+0x110>
 8004e8a:	eba0 0308 	sub.w	r3, r0, r8
 8004e8e:	fa09 f303 	lsl.w	r3, r9, r3
 8004e92:	4313      	orrs	r3, r2
 8004e94:	46a2      	mov	sl, r4
 8004e96:	9304      	str	r3, [sp, #16]
 8004e98:	e7d2      	b.n	8004e40 <_svfiprintf_r+0x9c>
 8004e9a:	9b03      	ldr	r3, [sp, #12]
 8004e9c:	1d19      	adds	r1, r3, #4
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	9103      	str	r1, [sp, #12]
 8004ea2:	2b00      	cmp	r3, #0
 8004ea4:	bfbb      	ittet	lt
 8004ea6:	425b      	neglt	r3, r3
 8004ea8:	f042 0202 	orrlt.w	r2, r2, #2
 8004eac:	9307      	strge	r3, [sp, #28]
 8004eae:	9307      	strlt	r3, [sp, #28]
 8004eb0:	bfb8      	it	lt
 8004eb2:	9204      	strlt	r2, [sp, #16]
 8004eb4:	7823      	ldrb	r3, [r4, #0]
 8004eb6:	2b2e      	cmp	r3, #46	; 0x2e
 8004eb8:	d10c      	bne.n	8004ed4 <_svfiprintf_r+0x130>
 8004eba:	7863      	ldrb	r3, [r4, #1]
 8004ebc:	2b2a      	cmp	r3, #42	; 0x2a
 8004ebe:	d135      	bne.n	8004f2c <_svfiprintf_r+0x188>
 8004ec0:	9b03      	ldr	r3, [sp, #12]
 8004ec2:	3402      	adds	r4, #2
 8004ec4:	1d1a      	adds	r2, r3, #4
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	9203      	str	r2, [sp, #12]
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	bfb8      	it	lt
 8004ece:	f04f 33ff 	movlt.w	r3, #4294967295
 8004ed2:	9305      	str	r3, [sp, #20]
 8004ed4:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004fa0 <_svfiprintf_r+0x1fc>
 8004ed8:	2203      	movs	r2, #3
 8004eda:	4650      	mov	r0, sl
 8004edc:	7821      	ldrb	r1, [r4, #0]
 8004ede:	f000 f9f7 	bl	80052d0 <memchr>
 8004ee2:	b140      	cbz	r0, 8004ef6 <_svfiprintf_r+0x152>
 8004ee4:	2340      	movs	r3, #64	; 0x40
 8004ee6:	eba0 000a 	sub.w	r0, r0, sl
 8004eea:	fa03 f000 	lsl.w	r0, r3, r0
 8004eee:	9b04      	ldr	r3, [sp, #16]
 8004ef0:	3401      	adds	r4, #1
 8004ef2:	4303      	orrs	r3, r0
 8004ef4:	9304      	str	r3, [sp, #16]
 8004ef6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004efa:	2206      	movs	r2, #6
 8004efc:	4825      	ldr	r0, [pc, #148]	; (8004f94 <_svfiprintf_r+0x1f0>)
 8004efe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004f02:	f000 f9e5 	bl	80052d0 <memchr>
 8004f06:	2800      	cmp	r0, #0
 8004f08:	d038      	beq.n	8004f7c <_svfiprintf_r+0x1d8>
 8004f0a:	4b23      	ldr	r3, [pc, #140]	; (8004f98 <_svfiprintf_r+0x1f4>)
 8004f0c:	bb1b      	cbnz	r3, 8004f56 <_svfiprintf_r+0x1b2>
 8004f0e:	9b03      	ldr	r3, [sp, #12]
 8004f10:	3307      	adds	r3, #7
 8004f12:	f023 0307 	bic.w	r3, r3, #7
 8004f16:	3308      	adds	r3, #8
 8004f18:	9303      	str	r3, [sp, #12]
 8004f1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f1c:	4433      	add	r3, r6
 8004f1e:	9309      	str	r3, [sp, #36]	; 0x24
 8004f20:	e767      	b.n	8004df2 <_svfiprintf_r+0x4e>
 8004f22:	460c      	mov	r4, r1
 8004f24:	2001      	movs	r0, #1
 8004f26:	fb0c 3202 	mla	r2, ip, r2, r3
 8004f2a:	e7a5      	b.n	8004e78 <_svfiprintf_r+0xd4>
 8004f2c:	2300      	movs	r3, #0
 8004f2e:	f04f 0c0a 	mov.w	ip, #10
 8004f32:	4619      	mov	r1, r3
 8004f34:	3401      	adds	r4, #1
 8004f36:	9305      	str	r3, [sp, #20]
 8004f38:	4620      	mov	r0, r4
 8004f3a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004f3e:	3a30      	subs	r2, #48	; 0x30
 8004f40:	2a09      	cmp	r2, #9
 8004f42:	d903      	bls.n	8004f4c <_svfiprintf_r+0x1a8>
 8004f44:	2b00      	cmp	r3, #0
 8004f46:	d0c5      	beq.n	8004ed4 <_svfiprintf_r+0x130>
 8004f48:	9105      	str	r1, [sp, #20]
 8004f4a:	e7c3      	b.n	8004ed4 <_svfiprintf_r+0x130>
 8004f4c:	4604      	mov	r4, r0
 8004f4e:	2301      	movs	r3, #1
 8004f50:	fb0c 2101 	mla	r1, ip, r1, r2
 8004f54:	e7f0      	b.n	8004f38 <_svfiprintf_r+0x194>
 8004f56:	ab03      	add	r3, sp, #12
 8004f58:	9300      	str	r3, [sp, #0]
 8004f5a:	462a      	mov	r2, r5
 8004f5c:	4638      	mov	r0, r7
 8004f5e:	4b0f      	ldr	r3, [pc, #60]	; (8004f9c <_svfiprintf_r+0x1f8>)
 8004f60:	a904      	add	r1, sp, #16
 8004f62:	f3af 8000 	nop.w
 8004f66:	1c42      	adds	r2, r0, #1
 8004f68:	4606      	mov	r6, r0
 8004f6a:	d1d6      	bne.n	8004f1a <_svfiprintf_r+0x176>
 8004f6c:	89ab      	ldrh	r3, [r5, #12]
 8004f6e:	065b      	lsls	r3, r3, #25
 8004f70:	f53f af2c 	bmi.w	8004dcc <_svfiprintf_r+0x28>
 8004f74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004f76:	b01d      	add	sp, #116	; 0x74
 8004f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f7c:	ab03      	add	r3, sp, #12
 8004f7e:	9300      	str	r3, [sp, #0]
 8004f80:	462a      	mov	r2, r5
 8004f82:	4638      	mov	r0, r7
 8004f84:	4b05      	ldr	r3, [pc, #20]	; (8004f9c <_svfiprintf_r+0x1f8>)
 8004f86:	a904      	add	r1, sp, #16
 8004f88:	f000 f87c 	bl	8005084 <_printf_i>
 8004f8c:	e7eb      	b.n	8004f66 <_svfiprintf_r+0x1c2>
 8004f8e:	bf00      	nop
 8004f90:	08006320 	.word	0x08006320
 8004f94:	0800632a 	.word	0x0800632a
 8004f98:	00000000 	.word	0x00000000
 8004f9c:	08004ced 	.word	0x08004ced
 8004fa0:	08006326 	.word	0x08006326

08004fa4 <_printf_common>:
 8004fa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fa8:	4616      	mov	r6, r2
 8004faa:	4699      	mov	r9, r3
 8004fac:	688a      	ldr	r2, [r1, #8]
 8004fae:	690b      	ldr	r3, [r1, #16]
 8004fb0:	4607      	mov	r7, r0
 8004fb2:	4293      	cmp	r3, r2
 8004fb4:	bfb8      	it	lt
 8004fb6:	4613      	movlt	r3, r2
 8004fb8:	6033      	str	r3, [r6, #0]
 8004fba:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004fbe:	460c      	mov	r4, r1
 8004fc0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004fc4:	b10a      	cbz	r2, 8004fca <_printf_common+0x26>
 8004fc6:	3301      	adds	r3, #1
 8004fc8:	6033      	str	r3, [r6, #0]
 8004fca:	6823      	ldr	r3, [r4, #0]
 8004fcc:	0699      	lsls	r1, r3, #26
 8004fce:	bf42      	ittt	mi
 8004fd0:	6833      	ldrmi	r3, [r6, #0]
 8004fd2:	3302      	addmi	r3, #2
 8004fd4:	6033      	strmi	r3, [r6, #0]
 8004fd6:	6825      	ldr	r5, [r4, #0]
 8004fd8:	f015 0506 	ands.w	r5, r5, #6
 8004fdc:	d106      	bne.n	8004fec <_printf_common+0x48>
 8004fde:	f104 0a19 	add.w	sl, r4, #25
 8004fe2:	68e3      	ldr	r3, [r4, #12]
 8004fe4:	6832      	ldr	r2, [r6, #0]
 8004fe6:	1a9b      	subs	r3, r3, r2
 8004fe8:	42ab      	cmp	r3, r5
 8004fea:	dc28      	bgt.n	800503e <_printf_common+0x9a>
 8004fec:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004ff0:	1e13      	subs	r3, r2, #0
 8004ff2:	6822      	ldr	r2, [r4, #0]
 8004ff4:	bf18      	it	ne
 8004ff6:	2301      	movne	r3, #1
 8004ff8:	0692      	lsls	r2, r2, #26
 8004ffa:	d42d      	bmi.n	8005058 <_printf_common+0xb4>
 8004ffc:	4649      	mov	r1, r9
 8004ffe:	4638      	mov	r0, r7
 8005000:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005004:	47c0      	blx	r8
 8005006:	3001      	adds	r0, #1
 8005008:	d020      	beq.n	800504c <_printf_common+0xa8>
 800500a:	6823      	ldr	r3, [r4, #0]
 800500c:	68e5      	ldr	r5, [r4, #12]
 800500e:	f003 0306 	and.w	r3, r3, #6
 8005012:	2b04      	cmp	r3, #4
 8005014:	bf18      	it	ne
 8005016:	2500      	movne	r5, #0
 8005018:	6832      	ldr	r2, [r6, #0]
 800501a:	f04f 0600 	mov.w	r6, #0
 800501e:	68a3      	ldr	r3, [r4, #8]
 8005020:	bf08      	it	eq
 8005022:	1aad      	subeq	r5, r5, r2
 8005024:	6922      	ldr	r2, [r4, #16]
 8005026:	bf08      	it	eq
 8005028:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800502c:	4293      	cmp	r3, r2
 800502e:	bfc4      	itt	gt
 8005030:	1a9b      	subgt	r3, r3, r2
 8005032:	18ed      	addgt	r5, r5, r3
 8005034:	341a      	adds	r4, #26
 8005036:	42b5      	cmp	r5, r6
 8005038:	d11a      	bne.n	8005070 <_printf_common+0xcc>
 800503a:	2000      	movs	r0, #0
 800503c:	e008      	b.n	8005050 <_printf_common+0xac>
 800503e:	2301      	movs	r3, #1
 8005040:	4652      	mov	r2, sl
 8005042:	4649      	mov	r1, r9
 8005044:	4638      	mov	r0, r7
 8005046:	47c0      	blx	r8
 8005048:	3001      	adds	r0, #1
 800504a:	d103      	bne.n	8005054 <_printf_common+0xb0>
 800504c:	f04f 30ff 	mov.w	r0, #4294967295
 8005050:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005054:	3501      	adds	r5, #1
 8005056:	e7c4      	b.n	8004fe2 <_printf_common+0x3e>
 8005058:	2030      	movs	r0, #48	; 0x30
 800505a:	18e1      	adds	r1, r4, r3
 800505c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005060:	1c5a      	adds	r2, r3, #1
 8005062:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005066:	4422      	add	r2, r4
 8005068:	3302      	adds	r3, #2
 800506a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800506e:	e7c5      	b.n	8004ffc <_printf_common+0x58>
 8005070:	2301      	movs	r3, #1
 8005072:	4622      	mov	r2, r4
 8005074:	4649      	mov	r1, r9
 8005076:	4638      	mov	r0, r7
 8005078:	47c0      	blx	r8
 800507a:	3001      	adds	r0, #1
 800507c:	d0e6      	beq.n	800504c <_printf_common+0xa8>
 800507e:	3601      	adds	r6, #1
 8005080:	e7d9      	b.n	8005036 <_printf_common+0x92>
	...

08005084 <_printf_i>:
 8005084:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005088:	460c      	mov	r4, r1
 800508a:	7e27      	ldrb	r7, [r4, #24]
 800508c:	4691      	mov	r9, r2
 800508e:	2f78      	cmp	r7, #120	; 0x78
 8005090:	4680      	mov	r8, r0
 8005092:	469a      	mov	sl, r3
 8005094:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005096:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800509a:	d807      	bhi.n	80050ac <_printf_i+0x28>
 800509c:	2f62      	cmp	r7, #98	; 0x62
 800509e:	d80a      	bhi.n	80050b6 <_printf_i+0x32>
 80050a0:	2f00      	cmp	r7, #0
 80050a2:	f000 80d9 	beq.w	8005258 <_printf_i+0x1d4>
 80050a6:	2f58      	cmp	r7, #88	; 0x58
 80050a8:	f000 80a4 	beq.w	80051f4 <_printf_i+0x170>
 80050ac:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80050b0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80050b4:	e03a      	b.n	800512c <_printf_i+0xa8>
 80050b6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80050ba:	2b15      	cmp	r3, #21
 80050bc:	d8f6      	bhi.n	80050ac <_printf_i+0x28>
 80050be:	a001      	add	r0, pc, #4	; (adr r0, 80050c4 <_printf_i+0x40>)
 80050c0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80050c4:	0800511d 	.word	0x0800511d
 80050c8:	08005131 	.word	0x08005131
 80050cc:	080050ad 	.word	0x080050ad
 80050d0:	080050ad 	.word	0x080050ad
 80050d4:	080050ad 	.word	0x080050ad
 80050d8:	080050ad 	.word	0x080050ad
 80050dc:	08005131 	.word	0x08005131
 80050e0:	080050ad 	.word	0x080050ad
 80050e4:	080050ad 	.word	0x080050ad
 80050e8:	080050ad 	.word	0x080050ad
 80050ec:	080050ad 	.word	0x080050ad
 80050f0:	0800523f 	.word	0x0800523f
 80050f4:	08005161 	.word	0x08005161
 80050f8:	08005221 	.word	0x08005221
 80050fc:	080050ad 	.word	0x080050ad
 8005100:	080050ad 	.word	0x080050ad
 8005104:	08005261 	.word	0x08005261
 8005108:	080050ad 	.word	0x080050ad
 800510c:	08005161 	.word	0x08005161
 8005110:	080050ad 	.word	0x080050ad
 8005114:	080050ad 	.word	0x080050ad
 8005118:	08005229 	.word	0x08005229
 800511c:	680b      	ldr	r3, [r1, #0]
 800511e:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8005122:	1d1a      	adds	r2, r3, #4
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	600a      	str	r2, [r1, #0]
 8005128:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800512c:	2301      	movs	r3, #1
 800512e:	e0a4      	b.n	800527a <_printf_i+0x1f6>
 8005130:	6825      	ldr	r5, [r4, #0]
 8005132:	6808      	ldr	r0, [r1, #0]
 8005134:	062e      	lsls	r6, r5, #24
 8005136:	f100 0304 	add.w	r3, r0, #4
 800513a:	d50a      	bpl.n	8005152 <_printf_i+0xce>
 800513c:	6805      	ldr	r5, [r0, #0]
 800513e:	600b      	str	r3, [r1, #0]
 8005140:	2d00      	cmp	r5, #0
 8005142:	da03      	bge.n	800514c <_printf_i+0xc8>
 8005144:	232d      	movs	r3, #45	; 0x2d
 8005146:	426d      	negs	r5, r5
 8005148:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800514c:	230a      	movs	r3, #10
 800514e:	485e      	ldr	r0, [pc, #376]	; (80052c8 <_printf_i+0x244>)
 8005150:	e019      	b.n	8005186 <_printf_i+0x102>
 8005152:	f015 0f40 	tst.w	r5, #64	; 0x40
 8005156:	6805      	ldr	r5, [r0, #0]
 8005158:	600b      	str	r3, [r1, #0]
 800515a:	bf18      	it	ne
 800515c:	b22d      	sxthne	r5, r5
 800515e:	e7ef      	b.n	8005140 <_printf_i+0xbc>
 8005160:	680b      	ldr	r3, [r1, #0]
 8005162:	6825      	ldr	r5, [r4, #0]
 8005164:	1d18      	adds	r0, r3, #4
 8005166:	6008      	str	r0, [r1, #0]
 8005168:	0628      	lsls	r0, r5, #24
 800516a:	d501      	bpl.n	8005170 <_printf_i+0xec>
 800516c:	681d      	ldr	r5, [r3, #0]
 800516e:	e002      	b.n	8005176 <_printf_i+0xf2>
 8005170:	0669      	lsls	r1, r5, #25
 8005172:	d5fb      	bpl.n	800516c <_printf_i+0xe8>
 8005174:	881d      	ldrh	r5, [r3, #0]
 8005176:	2f6f      	cmp	r7, #111	; 0x6f
 8005178:	bf0c      	ite	eq
 800517a:	2308      	moveq	r3, #8
 800517c:	230a      	movne	r3, #10
 800517e:	4852      	ldr	r0, [pc, #328]	; (80052c8 <_printf_i+0x244>)
 8005180:	2100      	movs	r1, #0
 8005182:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005186:	6866      	ldr	r6, [r4, #4]
 8005188:	2e00      	cmp	r6, #0
 800518a:	bfa8      	it	ge
 800518c:	6821      	ldrge	r1, [r4, #0]
 800518e:	60a6      	str	r6, [r4, #8]
 8005190:	bfa4      	itt	ge
 8005192:	f021 0104 	bicge.w	r1, r1, #4
 8005196:	6021      	strge	r1, [r4, #0]
 8005198:	b90d      	cbnz	r5, 800519e <_printf_i+0x11a>
 800519a:	2e00      	cmp	r6, #0
 800519c:	d04d      	beq.n	800523a <_printf_i+0x1b6>
 800519e:	4616      	mov	r6, r2
 80051a0:	fbb5 f1f3 	udiv	r1, r5, r3
 80051a4:	fb03 5711 	mls	r7, r3, r1, r5
 80051a8:	5dc7      	ldrb	r7, [r0, r7]
 80051aa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80051ae:	462f      	mov	r7, r5
 80051b0:	42bb      	cmp	r3, r7
 80051b2:	460d      	mov	r5, r1
 80051b4:	d9f4      	bls.n	80051a0 <_printf_i+0x11c>
 80051b6:	2b08      	cmp	r3, #8
 80051b8:	d10b      	bne.n	80051d2 <_printf_i+0x14e>
 80051ba:	6823      	ldr	r3, [r4, #0]
 80051bc:	07df      	lsls	r7, r3, #31
 80051be:	d508      	bpl.n	80051d2 <_printf_i+0x14e>
 80051c0:	6923      	ldr	r3, [r4, #16]
 80051c2:	6861      	ldr	r1, [r4, #4]
 80051c4:	4299      	cmp	r1, r3
 80051c6:	bfde      	ittt	le
 80051c8:	2330      	movle	r3, #48	; 0x30
 80051ca:	f806 3c01 	strble.w	r3, [r6, #-1]
 80051ce:	f106 36ff 	addle.w	r6, r6, #4294967295
 80051d2:	1b92      	subs	r2, r2, r6
 80051d4:	6122      	str	r2, [r4, #16]
 80051d6:	464b      	mov	r3, r9
 80051d8:	4621      	mov	r1, r4
 80051da:	4640      	mov	r0, r8
 80051dc:	f8cd a000 	str.w	sl, [sp]
 80051e0:	aa03      	add	r2, sp, #12
 80051e2:	f7ff fedf 	bl	8004fa4 <_printf_common>
 80051e6:	3001      	adds	r0, #1
 80051e8:	d14c      	bne.n	8005284 <_printf_i+0x200>
 80051ea:	f04f 30ff 	mov.w	r0, #4294967295
 80051ee:	b004      	add	sp, #16
 80051f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80051f4:	4834      	ldr	r0, [pc, #208]	; (80052c8 <_printf_i+0x244>)
 80051f6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80051fa:	680e      	ldr	r6, [r1, #0]
 80051fc:	6823      	ldr	r3, [r4, #0]
 80051fe:	f856 5b04 	ldr.w	r5, [r6], #4
 8005202:	061f      	lsls	r7, r3, #24
 8005204:	600e      	str	r6, [r1, #0]
 8005206:	d514      	bpl.n	8005232 <_printf_i+0x1ae>
 8005208:	07d9      	lsls	r1, r3, #31
 800520a:	bf44      	itt	mi
 800520c:	f043 0320 	orrmi.w	r3, r3, #32
 8005210:	6023      	strmi	r3, [r4, #0]
 8005212:	b91d      	cbnz	r5, 800521c <_printf_i+0x198>
 8005214:	6823      	ldr	r3, [r4, #0]
 8005216:	f023 0320 	bic.w	r3, r3, #32
 800521a:	6023      	str	r3, [r4, #0]
 800521c:	2310      	movs	r3, #16
 800521e:	e7af      	b.n	8005180 <_printf_i+0xfc>
 8005220:	6823      	ldr	r3, [r4, #0]
 8005222:	f043 0320 	orr.w	r3, r3, #32
 8005226:	6023      	str	r3, [r4, #0]
 8005228:	2378      	movs	r3, #120	; 0x78
 800522a:	4828      	ldr	r0, [pc, #160]	; (80052cc <_printf_i+0x248>)
 800522c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8005230:	e7e3      	b.n	80051fa <_printf_i+0x176>
 8005232:	065e      	lsls	r6, r3, #25
 8005234:	bf48      	it	mi
 8005236:	b2ad      	uxthmi	r5, r5
 8005238:	e7e6      	b.n	8005208 <_printf_i+0x184>
 800523a:	4616      	mov	r6, r2
 800523c:	e7bb      	b.n	80051b6 <_printf_i+0x132>
 800523e:	680b      	ldr	r3, [r1, #0]
 8005240:	6826      	ldr	r6, [r4, #0]
 8005242:	1d1d      	adds	r5, r3, #4
 8005244:	6960      	ldr	r0, [r4, #20]
 8005246:	600d      	str	r5, [r1, #0]
 8005248:	0635      	lsls	r5, r6, #24
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	d501      	bpl.n	8005252 <_printf_i+0x1ce>
 800524e:	6018      	str	r0, [r3, #0]
 8005250:	e002      	b.n	8005258 <_printf_i+0x1d4>
 8005252:	0671      	lsls	r1, r6, #25
 8005254:	d5fb      	bpl.n	800524e <_printf_i+0x1ca>
 8005256:	8018      	strh	r0, [r3, #0]
 8005258:	2300      	movs	r3, #0
 800525a:	4616      	mov	r6, r2
 800525c:	6123      	str	r3, [r4, #16]
 800525e:	e7ba      	b.n	80051d6 <_printf_i+0x152>
 8005260:	680b      	ldr	r3, [r1, #0]
 8005262:	1d1a      	adds	r2, r3, #4
 8005264:	600a      	str	r2, [r1, #0]
 8005266:	681e      	ldr	r6, [r3, #0]
 8005268:	2100      	movs	r1, #0
 800526a:	4630      	mov	r0, r6
 800526c:	6862      	ldr	r2, [r4, #4]
 800526e:	f000 f82f 	bl	80052d0 <memchr>
 8005272:	b108      	cbz	r0, 8005278 <_printf_i+0x1f4>
 8005274:	1b80      	subs	r0, r0, r6
 8005276:	6060      	str	r0, [r4, #4]
 8005278:	6863      	ldr	r3, [r4, #4]
 800527a:	6123      	str	r3, [r4, #16]
 800527c:	2300      	movs	r3, #0
 800527e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005282:	e7a8      	b.n	80051d6 <_printf_i+0x152>
 8005284:	4632      	mov	r2, r6
 8005286:	4649      	mov	r1, r9
 8005288:	4640      	mov	r0, r8
 800528a:	6923      	ldr	r3, [r4, #16]
 800528c:	47d0      	blx	sl
 800528e:	3001      	adds	r0, #1
 8005290:	d0ab      	beq.n	80051ea <_printf_i+0x166>
 8005292:	6823      	ldr	r3, [r4, #0]
 8005294:	079b      	lsls	r3, r3, #30
 8005296:	d413      	bmi.n	80052c0 <_printf_i+0x23c>
 8005298:	68e0      	ldr	r0, [r4, #12]
 800529a:	9b03      	ldr	r3, [sp, #12]
 800529c:	4298      	cmp	r0, r3
 800529e:	bfb8      	it	lt
 80052a0:	4618      	movlt	r0, r3
 80052a2:	e7a4      	b.n	80051ee <_printf_i+0x16a>
 80052a4:	2301      	movs	r3, #1
 80052a6:	4632      	mov	r2, r6
 80052a8:	4649      	mov	r1, r9
 80052aa:	4640      	mov	r0, r8
 80052ac:	47d0      	blx	sl
 80052ae:	3001      	adds	r0, #1
 80052b0:	d09b      	beq.n	80051ea <_printf_i+0x166>
 80052b2:	3501      	adds	r5, #1
 80052b4:	68e3      	ldr	r3, [r4, #12]
 80052b6:	9903      	ldr	r1, [sp, #12]
 80052b8:	1a5b      	subs	r3, r3, r1
 80052ba:	42ab      	cmp	r3, r5
 80052bc:	dcf2      	bgt.n	80052a4 <_printf_i+0x220>
 80052be:	e7eb      	b.n	8005298 <_printf_i+0x214>
 80052c0:	2500      	movs	r5, #0
 80052c2:	f104 0619 	add.w	r6, r4, #25
 80052c6:	e7f5      	b.n	80052b4 <_printf_i+0x230>
 80052c8:	08006331 	.word	0x08006331
 80052cc:	08006342 	.word	0x08006342

080052d0 <memchr>:
 80052d0:	4603      	mov	r3, r0
 80052d2:	b510      	push	{r4, lr}
 80052d4:	b2c9      	uxtb	r1, r1
 80052d6:	4402      	add	r2, r0
 80052d8:	4293      	cmp	r3, r2
 80052da:	4618      	mov	r0, r3
 80052dc:	d101      	bne.n	80052e2 <memchr+0x12>
 80052de:	2000      	movs	r0, #0
 80052e0:	e003      	b.n	80052ea <memchr+0x1a>
 80052e2:	7804      	ldrb	r4, [r0, #0]
 80052e4:	3301      	adds	r3, #1
 80052e6:	428c      	cmp	r4, r1
 80052e8:	d1f6      	bne.n	80052d8 <memchr+0x8>
 80052ea:	bd10      	pop	{r4, pc}

080052ec <_free_r>:
 80052ec:	b538      	push	{r3, r4, r5, lr}
 80052ee:	4605      	mov	r5, r0
 80052f0:	2900      	cmp	r1, #0
 80052f2:	d043      	beq.n	800537c <_free_r+0x90>
 80052f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80052f8:	1f0c      	subs	r4, r1, #4
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	bfb8      	it	lt
 80052fe:	18e4      	addlt	r4, r4, r3
 8005300:	f000 f8d0 	bl	80054a4 <__malloc_lock>
 8005304:	4a1e      	ldr	r2, [pc, #120]	; (8005380 <_free_r+0x94>)
 8005306:	6813      	ldr	r3, [r2, #0]
 8005308:	4610      	mov	r0, r2
 800530a:	b933      	cbnz	r3, 800531a <_free_r+0x2e>
 800530c:	6063      	str	r3, [r4, #4]
 800530e:	6014      	str	r4, [r2, #0]
 8005310:	4628      	mov	r0, r5
 8005312:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005316:	f000 b8cb 	b.w	80054b0 <__malloc_unlock>
 800531a:	42a3      	cmp	r3, r4
 800531c:	d90a      	bls.n	8005334 <_free_r+0x48>
 800531e:	6821      	ldr	r1, [r4, #0]
 8005320:	1862      	adds	r2, r4, r1
 8005322:	4293      	cmp	r3, r2
 8005324:	bf01      	itttt	eq
 8005326:	681a      	ldreq	r2, [r3, #0]
 8005328:	685b      	ldreq	r3, [r3, #4]
 800532a:	1852      	addeq	r2, r2, r1
 800532c:	6022      	streq	r2, [r4, #0]
 800532e:	6063      	str	r3, [r4, #4]
 8005330:	6004      	str	r4, [r0, #0]
 8005332:	e7ed      	b.n	8005310 <_free_r+0x24>
 8005334:	461a      	mov	r2, r3
 8005336:	685b      	ldr	r3, [r3, #4]
 8005338:	b10b      	cbz	r3, 800533e <_free_r+0x52>
 800533a:	42a3      	cmp	r3, r4
 800533c:	d9fa      	bls.n	8005334 <_free_r+0x48>
 800533e:	6811      	ldr	r1, [r2, #0]
 8005340:	1850      	adds	r0, r2, r1
 8005342:	42a0      	cmp	r0, r4
 8005344:	d10b      	bne.n	800535e <_free_r+0x72>
 8005346:	6820      	ldr	r0, [r4, #0]
 8005348:	4401      	add	r1, r0
 800534a:	1850      	adds	r0, r2, r1
 800534c:	4283      	cmp	r3, r0
 800534e:	6011      	str	r1, [r2, #0]
 8005350:	d1de      	bne.n	8005310 <_free_r+0x24>
 8005352:	6818      	ldr	r0, [r3, #0]
 8005354:	685b      	ldr	r3, [r3, #4]
 8005356:	4401      	add	r1, r0
 8005358:	6011      	str	r1, [r2, #0]
 800535a:	6053      	str	r3, [r2, #4]
 800535c:	e7d8      	b.n	8005310 <_free_r+0x24>
 800535e:	d902      	bls.n	8005366 <_free_r+0x7a>
 8005360:	230c      	movs	r3, #12
 8005362:	602b      	str	r3, [r5, #0]
 8005364:	e7d4      	b.n	8005310 <_free_r+0x24>
 8005366:	6820      	ldr	r0, [r4, #0]
 8005368:	1821      	adds	r1, r4, r0
 800536a:	428b      	cmp	r3, r1
 800536c:	bf01      	itttt	eq
 800536e:	6819      	ldreq	r1, [r3, #0]
 8005370:	685b      	ldreq	r3, [r3, #4]
 8005372:	1809      	addeq	r1, r1, r0
 8005374:	6021      	streq	r1, [r4, #0]
 8005376:	6063      	str	r3, [r4, #4]
 8005378:	6054      	str	r4, [r2, #4]
 800537a:	e7c9      	b.n	8005310 <_free_r+0x24>
 800537c:	bd38      	pop	{r3, r4, r5, pc}
 800537e:	bf00      	nop
 8005380:	200004e8 	.word	0x200004e8

08005384 <_malloc_r>:
 8005384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005386:	1ccd      	adds	r5, r1, #3
 8005388:	f025 0503 	bic.w	r5, r5, #3
 800538c:	3508      	adds	r5, #8
 800538e:	2d0c      	cmp	r5, #12
 8005390:	bf38      	it	cc
 8005392:	250c      	movcc	r5, #12
 8005394:	2d00      	cmp	r5, #0
 8005396:	4606      	mov	r6, r0
 8005398:	db01      	blt.n	800539e <_malloc_r+0x1a>
 800539a:	42a9      	cmp	r1, r5
 800539c:	d903      	bls.n	80053a6 <_malloc_r+0x22>
 800539e:	230c      	movs	r3, #12
 80053a0:	6033      	str	r3, [r6, #0]
 80053a2:	2000      	movs	r0, #0
 80053a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80053a6:	f000 f87d 	bl	80054a4 <__malloc_lock>
 80053aa:	4921      	ldr	r1, [pc, #132]	; (8005430 <_malloc_r+0xac>)
 80053ac:	680a      	ldr	r2, [r1, #0]
 80053ae:	4614      	mov	r4, r2
 80053b0:	b99c      	cbnz	r4, 80053da <_malloc_r+0x56>
 80053b2:	4f20      	ldr	r7, [pc, #128]	; (8005434 <_malloc_r+0xb0>)
 80053b4:	683b      	ldr	r3, [r7, #0]
 80053b6:	b923      	cbnz	r3, 80053c2 <_malloc_r+0x3e>
 80053b8:	4621      	mov	r1, r4
 80053ba:	4630      	mov	r0, r6
 80053bc:	f000 f862 	bl	8005484 <_sbrk_r>
 80053c0:	6038      	str	r0, [r7, #0]
 80053c2:	4629      	mov	r1, r5
 80053c4:	4630      	mov	r0, r6
 80053c6:	f000 f85d 	bl	8005484 <_sbrk_r>
 80053ca:	1c43      	adds	r3, r0, #1
 80053cc:	d123      	bne.n	8005416 <_malloc_r+0x92>
 80053ce:	230c      	movs	r3, #12
 80053d0:	4630      	mov	r0, r6
 80053d2:	6033      	str	r3, [r6, #0]
 80053d4:	f000 f86c 	bl	80054b0 <__malloc_unlock>
 80053d8:	e7e3      	b.n	80053a2 <_malloc_r+0x1e>
 80053da:	6823      	ldr	r3, [r4, #0]
 80053dc:	1b5b      	subs	r3, r3, r5
 80053de:	d417      	bmi.n	8005410 <_malloc_r+0x8c>
 80053e0:	2b0b      	cmp	r3, #11
 80053e2:	d903      	bls.n	80053ec <_malloc_r+0x68>
 80053e4:	6023      	str	r3, [r4, #0]
 80053e6:	441c      	add	r4, r3
 80053e8:	6025      	str	r5, [r4, #0]
 80053ea:	e004      	b.n	80053f6 <_malloc_r+0x72>
 80053ec:	6863      	ldr	r3, [r4, #4]
 80053ee:	42a2      	cmp	r2, r4
 80053f0:	bf0c      	ite	eq
 80053f2:	600b      	streq	r3, [r1, #0]
 80053f4:	6053      	strne	r3, [r2, #4]
 80053f6:	4630      	mov	r0, r6
 80053f8:	f000 f85a 	bl	80054b0 <__malloc_unlock>
 80053fc:	f104 000b 	add.w	r0, r4, #11
 8005400:	1d23      	adds	r3, r4, #4
 8005402:	f020 0007 	bic.w	r0, r0, #7
 8005406:	1ac2      	subs	r2, r0, r3
 8005408:	d0cc      	beq.n	80053a4 <_malloc_r+0x20>
 800540a:	1a1b      	subs	r3, r3, r0
 800540c:	50a3      	str	r3, [r4, r2]
 800540e:	e7c9      	b.n	80053a4 <_malloc_r+0x20>
 8005410:	4622      	mov	r2, r4
 8005412:	6864      	ldr	r4, [r4, #4]
 8005414:	e7cc      	b.n	80053b0 <_malloc_r+0x2c>
 8005416:	1cc4      	adds	r4, r0, #3
 8005418:	f024 0403 	bic.w	r4, r4, #3
 800541c:	42a0      	cmp	r0, r4
 800541e:	d0e3      	beq.n	80053e8 <_malloc_r+0x64>
 8005420:	1a21      	subs	r1, r4, r0
 8005422:	4630      	mov	r0, r6
 8005424:	f000 f82e 	bl	8005484 <_sbrk_r>
 8005428:	3001      	adds	r0, #1
 800542a:	d1dd      	bne.n	80053e8 <_malloc_r+0x64>
 800542c:	e7cf      	b.n	80053ce <_malloc_r+0x4a>
 800542e:	bf00      	nop
 8005430:	200004e8 	.word	0x200004e8
 8005434:	200004ec 	.word	0x200004ec

08005438 <_realloc_r>:
 8005438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800543a:	4607      	mov	r7, r0
 800543c:	4614      	mov	r4, r2
 800543e:	460e      	mov	r6, r1
 8005440:	b921      	cbnz	r1, 800544c <_realloc_r+0x14>
 8005442:	4611      	mov	r1, r2
 8005444:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005448:	f7ff bf9c 	b.w	8005384 <_malloc_r>
 800544c:	b922      	cbnz	r2, 8005458 <_realloc_r+0x20>
 800544e:	f7ff ff4d 	bl	80052ec <_free_r>
 8005452:	4625      	mov	r5, r4
 8005454:	4628      	mov	r0, r5
 8005456:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005458:	f000 f830 	bl	80054bc <_malloc_usable_size_r>
 800545c:	42a0      	cmp	r0, r4
 800545e:	d20f      	bcs.n	8005480 <_realloc_r+0x48>
 8005460:	4621      	mov	r1, r4
 8005462:	4638      	mov	r0, r7
 8005464:	f7ff ff8e 	bl	8005384 <_malloc_r>
 8005468:	4605      	mov	r5, r0
 800546a:	2800      	cmp	r0, #0
 800546c:	d0f2      	beq.n	8005454 <_realloc_r+0x1c>
 800546e:	4631      	mov	r1, r6
 8005470:	4622      	mov	r2, r4
 8005472:	f7ff fbb7 	bl	8004be4 <memcpy>
 8005476:	4631      	mov	r1, r6
 8005478:	4638      	mov	r0, r7
 800547a:	f7ff ff37 	bl	80052ec <_free_r>
 800547e:	e7e9      	b.n	8005454 <_realloc_r+0x1c>
 8005480:	4635      	mov	r5, r6
 8005482:	e7e7      	b.n	8005454 <_realloc_r+0x1c>

08005484 <_sbrk_r>:
 8005484:	b538      	push	{r3, r4, r5, lr}
 8005486:	2300      	movs	r3, #0
 8005488:	4d05      	ldr	r5, [pc, #20]	; (80054a0 <_sbrk_r+0x1c>)
 800548a:	4604      	mov	r4, r0
 800548c:	4608      	mov	r0, r1
 800548e:	602b      	str	r3, [r5, #0]
 8005490:	f7fc fbe6 	bl	8001c60 <_sbrk>
 8005494:	1c43      	adds	r3, r0, #1
 8005496:	d102      	bne.n	800549e <_sbrk_r+0x1a>
 8005498:	682b      	ldr	r3, [r5, #0]
 800549a:	b103      	cbz	r3, 800549e <_sbrk_r+0x1a>
 800549c:	6023      	str	r3, [r4, #0]
 800549e:	bd38      	pop	{r3, r4, r5, pc}
 80054a0:	20002c8c 	.word	0x20002c8c

080054a4 <__malloc_lock>:
 80054a4:	4801      	ldr	r0, [pc, #4]	; (80054ac <__malloc_lock+0x8>)
 80054a6:	f000 b811 	b.w	80054cc <__retarget_lock_acquire_recursive>
 80054aa:	bf00      	nop
 80054ac:	20002c94 	.word	0x20002c94

080054b0 <__malloc_unlock>:
 80054b0:	4801      	ldr	r0, [pc, #4]	; (80054b8 <__malloc_unlock+0x8>)
 80054b2:	f000 b80c 	b.w	80054ce <__retarget_lock_release_recursive>
 80054b6:	bf00      	nop
 80054b8:	20002c94 	.word	0x20002c94

080054bc <_malloc_usable_size_r>:
 80054bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80054c0:	1f18      	subs	r0, r3, #4
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	bfbc      	itt	lt
 80054c6:	580b      	ldrlt	r3, [r1, r0]
 80054c8:	18c0      	addlt	r0, r0, r3
 80054ca:	4770      	bx	lr

080054cc <__retarget_lock_acquire_recursive>:
 80054cc:	4770      	bx	lr

080054ce <__retarget_lock_release_recursive>:
 80054ce:	4770      	bx	lr

080054d0 <_init>:
 80054d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054d2:	bf00      	nop
 80054d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80054d6:	bc08      	pop	{r3}
 80054d8:	469e      	mov	lr, r3
 80054da:	4770      	bx	lr

080054dc <_fini>:
 80054dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054de:	bf00      	nop
 80054e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80054e2:	bc08      	pop	{r3}
 80054e4:	469e      	mov	lr, r3
 80054e6:	4770      	bx	lr
